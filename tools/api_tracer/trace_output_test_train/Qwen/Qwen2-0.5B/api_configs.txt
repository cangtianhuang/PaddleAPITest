profiler._record_function_enter_new("Optimizer.step#AdamW.step", None)
profiler._record_function_enter_new("enumerate(DataLoader)#_SingleProcessDataLoaderIter.__next__", None)
profiler._record_function_exit._RecordFunction("<Unserializable: ScriptObject>")
torch.Tensor.__bool__(Tensor([], "bool"))
torch.Tensor.__eq__(Tensor([1, 101], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 105], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 128], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 129], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 131], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 133], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 134], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 140], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 142], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 148], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 163], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 164], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 170], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 174], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 190], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 197], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 198], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 221], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 225], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 228], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 242], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 253], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 275], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 286], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 288], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 295], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 302], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 303], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 307], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 321], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 325], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 32], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 334], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 339], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 347], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 349], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 368], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 36], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 38], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 390], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 400], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 404], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 43], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 444], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 44], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 455], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 457], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 46], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 47], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 48], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 512], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 52], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 55], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 57], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 58], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 60], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 63], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 73], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 74], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 78], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 80], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 87], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 88], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 91], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 96], "int64"), 151643)
torch.Tensor.__eq__(Tensor([1, 97], "int64"), 151643)
torch.Tensor.__getitem__(Tensor([1, 101, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 101], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 101], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 102], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 128, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 128], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 128], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 129, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 129], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 129], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 129], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 130], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 131, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 131], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 131], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 132], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 133, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 133], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 133], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 134, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 134], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 134], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 134], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 135], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 101, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 101, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 128, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 128, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 129, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 129, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 131, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 131, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 133, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 133, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 134, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 134, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 140, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 140, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 142, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 142, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 148, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 148, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 163, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 163, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 164, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 164, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 170, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 170, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 174, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 174, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 190, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 190, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 197, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 197, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 198, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 198, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 221, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 221, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 225, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 225, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 228, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 228, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 242, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 242, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 253, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 253, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 275, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 275, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 286, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 286, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 288, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 288, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 295, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 295, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 302, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 302, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 303, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 303, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 307, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 307, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 32, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 32, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 321, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 321, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 325, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 325, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 334, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 334, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 339, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 339, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 347, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 347, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 349, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 349, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 36, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 36, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 368, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 368, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 38, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 38, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 390, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 390, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 400, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 400, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 404, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 404, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 43, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 43, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 44, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 44, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 444, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 444, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 455, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 455, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 457, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 457, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 46, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 46, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 47, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 47, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 48, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 48, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 512, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 512, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 52, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 52, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 55, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 55, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 57, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 57, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 58, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 58, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 60, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 60, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 63, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 63, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 73, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 73, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 74, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 74, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 78, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 78, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 80, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 80, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 87, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 87, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 88, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 88, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 91, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 91, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 96, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 96, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 97, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 14, 97, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 140, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 140], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 140], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 141], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 142, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 142], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 142], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 143], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 148, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 148], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 148], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 149], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 163, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 163], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 163], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 164, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 164], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 164], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 164], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 165], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 170, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 170], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 170], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 171], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 174, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 174], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 174], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 175], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 190, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 190], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 190], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 191], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 197, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 197], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 197], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 198, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 198], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 198], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 198], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 199], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 101, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 101, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 128, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 128, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 129, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 129, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 131, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 131, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 133, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 133, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 134, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 134, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 140, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 140, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 142, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 142, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 148, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 148, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 163, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 163, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 164, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 164, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 170, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 170, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 174, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 174, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 190, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 190, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 197, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 197, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 198, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 198, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 221, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 221, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 225, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 225, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 228, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 228, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 242, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 242, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 253, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 253, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 275, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 275, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 286, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 286, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 288, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 288, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 295, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 295, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 302, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 302, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 303, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 303, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 307, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 307, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 32, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 32, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 321, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 321, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 325, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 325, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 334, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 334, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 339, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 339, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 347, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 347, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 349, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 349, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 36, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 36, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 368, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 368, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 38, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 38, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 390, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 390, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 400, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 400, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 404, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 404, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 43, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 43, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 44, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 44, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 444, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 444, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 455, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 455, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 457, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 457, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 46, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 46, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 47, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 47, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 48, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 48, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 512, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 512, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 52, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 52, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 55, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 55, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 57, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 57, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 58, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 58, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 60, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 60, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 63, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 63, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 73, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 73, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 74, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 74, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 78, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 78, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 80, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 80, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 87, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 87, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 88, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 88, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 91, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 91, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 96, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 96, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 97, 64], "bfloat16"), tuple(ellipsis(...), slice(32, None, None)))
torch.Tensor.__getitem__(Tensor([1, 2, 97, 64], "bfloat16"), tuple(ellipsis(...), slice(None, 32, None)))
torch.Tensor.__getitem__(Tensor([1, 221, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 221], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 221], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 222], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 225, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 225], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 225], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 226], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 228, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 228], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 228], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 229], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 242, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 242], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 242], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 243], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 253, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 253], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 253], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 254], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 275, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 275], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 275], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 276], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 286, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 286], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 286], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 287], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 288, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 288], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 288], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 289], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 295, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 295], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 295], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 296], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 302, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 302], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 302], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 303, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 303], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 303], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 303], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 304], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 307, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 307], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 307], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 308], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 32, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 321, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 321], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 321], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 322], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 325, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 325], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 325], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 326], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 32], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 32], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 334, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 334], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 334], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 335], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 339, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 339], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 339], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 33], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 340], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 347, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 347], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 347], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 348], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 349, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 349], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 349], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 350], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 36, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 368, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 368], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 368], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 369], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 36], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 36], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 37], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 38, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 38], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 38], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 390, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 390], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 390], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 391], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 39], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 400, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 400], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 400], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 401], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 404, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 404], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 404], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 405], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 43, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 43], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 43], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 44, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 444, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 444], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 444], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 445], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 44], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 44], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 44], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 455, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 455], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 455], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 456], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 457, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 457], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 457], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 458], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 45], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 46, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 46], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 46], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 47, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 47], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 47], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 47], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 48, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 48], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 48], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 48], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 49], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 512, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 512], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 512], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 513], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 52, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 52], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 52], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 53], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 55, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 55], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 55], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 56], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 57, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 57], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 57], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 58, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 58], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 58], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 58], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 59], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 60, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 60], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 60], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 61], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 63, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 63], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 63], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 64], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 73, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 73], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 73], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 74, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 74], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 74], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 74], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 75], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 78, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 78], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 78], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 79], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 80, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 80], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 80], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 81], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 87, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 87], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 87], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 88, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 88], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 88], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 88], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 89], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 91, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 91], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 91], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 92], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 96, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 96], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 96], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 97, 896], "bfloat16"), tuple(slice(None, None, None), slice(0, None, None), slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 97], "int64"), slice(0, 1, None))
torch.Tensor.__getitem__(Tensor([1, 97], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([1, 97], "int64"), tuple(slice(None, None, None), None, slice(None, None, None)))
torch.Tensor.__getitem__(Tensor([1, 98], "int64"), tuple(ellipsis(...), slice(1, None, None)))
torch.Tensor.__getitem__(Tensor([128, 896], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([128], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([136134656], "bfloat16"), -1)
torch.Tensor.__getitem__(Tensor([151936, 896], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([32], "float32"), tuple(None, slice(None, None, None), None))
torch.Tensor.__getitem__(Tensor([4864, 896], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([896, 4864], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([896, 896], "bfloat16"), ellipsis(...))
torch.Tensor.__getitem__(Tensor([896], "bfloat16"), ellipsis(...))
torch.Tensor.__int__(Tensor([], "int64"))
torch.Tensor.__rpow__(Tensor([32], "float32"), 1000000.0)
torch.Tensor.__rsub__(Tensor([], "int64"), 0)
torch.Tensor.__rtruediv__(Tensor([32], "float32"), 1.0)
torch.Tensor.__rtruediv__(Tensor([], "bfloat16"), 1.0)
torch.Tensor.__setitem__(Tensor([1, 101], "int64"), Tensor([1, 101], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 105], "int64"), Tensor([1, 105], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 128], "int64"), Tensor([1, 128], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 129], "int64"), Tensor([1, 129], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 131], "int64"), Tensor([1, 131], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 133], "int64"), Tensor([1, 133], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 134], "int64"), Tensor([1, 134], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 140], "int64"), Tensor([1, 140], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 142], "int64"), Tensor([1, 142], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 148], "int64"), Tensor([1, 148], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 163], "int64"), Tensor([1, 163], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 164], "int64"), Tensor([1, 164], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 170], "int64"), Tensor([1, 170], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 174], "int64"), Tensor([1, 174], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 190], "int64"), Tensor([1, 190], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 197], "int64"), Tensor([1, 197], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 198], "int64"), Tensor([1, 198], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 221], "int64"), Tensor([1, 221], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 225], "int64"), Tensor([1, 225], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 228], "int64"), Tensor([1, 228], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 242], "int64"), Tensor([1, 242], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 253], "int64"), Tensor([1, 253], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 275], "int64"), Tensor([1, 275], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 286], "int64"), Tensor([1, 286], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 288], "int64"), Tensor([1, 288], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 295], "int64"), Tensor([1, 295], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 302], "int64"), Tensor([1, 302], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 303], "int64"), Tensor([1, 303], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 307], "int64"), Tensor([1, 307], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 321], "int64"), Tensor([1, 321], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 325], "int64"), Tensor([1, 325], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 32], "int64"), Tensor([1, 32], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 334], "int64"), Tensor([1, 334], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 339], "int64"), Tensor([1, 339], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 347], "int64"), Tensor([1, 347], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 349], "int64"), Tensor([1, 349], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 368], "int64"), Tensor([1, 368], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 36], "int64"), Tensor([1, 36], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 38], "int64"), Tensor([1, 38], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 390], "int64"), Tensor([1, 390], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 400], "int64"), Tensor([1, 400], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 404], "int64"), Tensor([1, 404], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 43], "int64"), Tensor([1, 43], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 444], "int64"), Tensor([1, 444], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 44], "int64"), Tensor([1, 44], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 455], "int64"), Tensor([1, 455], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 457], "int64"), Tensor([1, 457], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 46], "int64"), Tensor([1, 46], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 47], "int64"), Tensor([1, 47], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 48], "int64"), Tensor([1, 48], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 512], "int64"), Tensor([1, 512], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 52], "int64"), Tensor([1, 52], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 55], "int64"), Tensor([1, 55], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 57], "int64"), Tensor([1, 57], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 58], "int64"), Tensor([1, 58], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 60], "int64"), Tensor([1, 60], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 63], "int64"), Tensor([1, 63], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 73], "int64"), Tensor([1, 73], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 74], "int64"), Tensor([1, 74], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 78], "int64"), Tensor([1, 78], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 80], "int64"), Tensor([1, 80], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 87], "int64"), Tensor([1, 87], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 88], "int64"), Tensor([1, 88], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 91], "int64"), Tensor([1, 91], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 96], "int64"), Tensor([1, 96], "bool"), -100)
torch.Tensor.__setitem__(Tensor([1, 97], "int64"), Tensor([1, 97], "bool"), -100)
torch.Tensor._backward_hooks.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([128], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([16], "uint8"))
torch.Tensor._backward_hooks.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([5056], "uint8"))
torch.Tensor._backward_hooks.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([896], "bfloat16"))
torch.Tensor._backward_hooks.__get__(Tensor([], "float32"))
torch.Tensor.add(Tensor([1, 101, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 101, 896], "bfloat16"), Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 128, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 128, 896], "bfloat16"), Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 129, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 129, 896], "bfloat16"), Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 131, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 131, 896], "bfloat16"), Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 133, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 133, 896], "bfloat16"), Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 134, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 134, 896], "bfloat16"), Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 101, 64], "bfloat16"), Tensor([1, 14, 101, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 128, 64], "bfloat16"), Tensor([1, 14, 128, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 129, 64], "bfloat16"), Tensor([1, 14, 129, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 131, 64], "bfloat16"), Tensor([1, 14, 131, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 133, 64], "bfloat16"), Tensor([1, 14, 133, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 134, 64], "bfloat16"), Tensor([1, 14, 134, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 140, 64], "bfloat16"), Tensor([1, 14, 140, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 142, 64], "bfloat16"), Tensor([1, 14, 142, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 148, 64], "bfloat16"), Tensor([1, 14, 148, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 163, 64], "bfloat16"), Tensor([1, 14, 163, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 164, 64], "bfloat16"), Tensor([1, 14, 164, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 170, 64], "bfloat16"), Tensor([1, 14, 170, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 174, 64], "bfloat16"), Tensor([1, 14, 174, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 190, 64], "bfloat16"), Tensor([1, 14, 190, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 197, 64], "bfloat16"), Tensor([1, 14, 197, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 198, 64], "bfloat16"), Tensor([1, 14, 198, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 221, 64], "bfloat16"), Tensor([1, 14, 221, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 225, 64], "bfloat16"), Tensor([1, 14, 225, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 228, 64], "bfloat16"), Tensor([1, 14, 228, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 242, 64], "bfloat16"), Tensor([1, 14, 242, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 253, 64], "bfloat16"), Tensor([1, 14, 253, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 275, 64], "bfloat16"), Tensor([1, 14, 275, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 286, 64], "bfloat16"), Tensor([1, 14, 286, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 288, 64], "bfloat16"), Tensor([1, 14, 288, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 295, 64], "bfloat16"), Tensor([1, 14, 295, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 302, 64], "bfloat16"), Tensor([1, 14, 302, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 303, 64], "bfloat16"), Tensor([1, 14, 303, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 307, 64], "bfloat16"), Tensor([1, 14, 307, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 32, 64], "bfloat16"), Tensor([1, 14, 32, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 321, 64], "bfloat16"), Tensor([1, 14, 321, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 325, 64], "bfloat16"), Tensor([1, 14, 325, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 334, 64], "bfloat16"), Tensor([1, 14, 334, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 339, 64], "bfloat16"), Tensor([1, 14, 339, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 347, 64], "bfloat16"), Tensor([1, 14, 347, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 349, 64], "bfloat16"), Tensor([1, 14, 349, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 36, 64], "bfloat16"), Tensor([1, 14, 36, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 368, 64], "bfloat16"), Tensor([1, 14, 368, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 38, 64], "bfloat16"), Tensor([1, 14, 38, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 390, 64], "bfloat16"), Tensor([1, 14, 390, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 400, 64], "bfloat16"), Tensor([1, 14, 400, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 404, 64], "bfloat16"), Tensor([1, 14, 404, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 43, 64], "bfloat16"), Tensor([1, 14, 43, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 44, 64], "bfloat16"), Tensor([1, 14, 44, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 444, 64], "bfloat16"), Tensor([1, 14, 444, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 455, 64], "bfloat16"), Tensor([1, 14, 455, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 457, 64], "bfloat16"), Tensor([1, 14, 457, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 46, 64], "bfloat16"), Tensor([1, 14, 46, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 47, 64], "bfloat16"), Tensor([1, 14, 47, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 48, 64], "bfloat16"), Tensor([1, 14, 48, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 512, 64], "bfloat16"), Tensor([1, 14, 512, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 52, 64], "bfloat16"), Tensor([1, 14, 52, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 55, 64], "bfloat16"), Tensor([1, 14, 55, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 57, 64], "bfloat16"), Tensor([1, 14, 57, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 58, 64], "bfloat16"), Tensor([1, 14, 58, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 60, 64], "bfloat16"), Tensor([1, 14, 60, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 63, 64], "bfloat16"), Tensor([1, 14, 63, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 73, 64], "bfloat16"), Tensor([1, 14, 73, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 74, 64], "bfloat16"), Tensor([1, 14, 74, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 78, 64], "bfloat16"), Tensor([1, 14, 78, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 80, 64], "bfloat16"), Tensor([1, 14, 80, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 87, 64], "bfloat16"), Tensor([1, 14, 87, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 88, 64], "bfloat16"), Tensor([1, 14, 88, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 91, 64], "bfloat16"), Tensor([1, 14, 91, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 96, 64], "bfloat16"), Tensor([1, 14, 96, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 14, 97, 64], "bfloat16"), Tensor([1, 14, 97, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 140, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 140, 896], "bfloat16"), Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 142, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 142, 896], "bfloat16"), Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 148, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 148, 896], "bfloat16"), Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 163, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 163, 896], "bfloat16"), Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 164, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 164, 896], "bfloat16"), Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 170, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 170, 896], "bfloat16"), Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 174, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 174, 896], "bfloat16"), Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 190, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 190, 896], "bfloat16"), Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 197, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 197, 896], "bfloat16"), Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 198, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 198, 896], "bfloat16"), Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 101, 64], "bfloat16"), Tensor([1, 2, 101, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 128, 64], "bfloat16"), Tensor([1, 2, 128, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 129, 64], "bfloat16"), Tensor([1, 2, 129, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 131, 64], "bfloat16"), Tensor([1, 2, 131, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 133, 64], "bfloat16"), Tensor([1, 2, 133, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 134, 64], "bfloat16"), Tensor([1, 2, 134, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 140, 64], "bfloat16"), Tensor([1, 2, 140, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 142, 64], "bfloat16"), Tensor([1, 2, 142, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 148, 64], "bfloat16"), Tensor([1, 2, 148, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 163, 64], "bfloat16"), Tensor([1, 2, 163, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 164, 64], "bfloat16"), Tensor([1, 2, 164, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 170, 64], "bfloat16"), Tensor([1, 2, 170, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 174, 64], "bfloat16"), Tensor([1, 2, 174, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 190, 64], "bfloat16"), Tensor([1, 2, 190, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 197, 64], "bfloat16"), Tensor([1, 2, 197, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 198, 64], "bfloat16"), Tensor([1, 2, 198, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 221, 64], "bfloat16"), Tensor([1, 2, 221, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 225, 64], "bfloat16"), Tensor([1, 2, 225, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 228, 64], "bfloat16"), Tensor([1, 2, 228, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 242, 64], "bfloat16"), Tensor([1, 2, 242, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 253, 64], "bfloat16"), Tensor([1, 2, 253, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 275, 64], "bfloat16"), Tensor([1, 2, 275, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 286, 64], "bfloat16"), Tensor([1, 2, 286, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 288, 64], "bfloat16"), Tensor([1, 2, 288, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 295, 64], "bfloat16"), Tensor([1, 2, 295, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 302, 64], "bfloat16"), Tensor([1, 2, 302, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 303, 64], "bfloat16"), Tensor([1, 2, 303, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 307, 64], "bfloat16"), Tensor([1, 2, 307, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 32, 64], "bfloat16"), Tensor([1, 2, 32, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 321, 64], "bfloat16"), Tensor([1, 2, 321, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 325, 64], "bfloat16"), Tensor([1, 2, 325, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 334, 64], "bfloat16"), Tensor([1, 2, 334, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 339, 64], "bfloat16"), Tensor([1, 2, 339, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 347, 64], "bfloat16"), Tensor([1, 2, 347, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 349, 64], "bfloat16"), Tensor([1, 2, 349, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 36, 64], "bfloat16"), Tensor([1, 2, 36, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 368, 64], "bfloat16"), Tensor([1, 2, 368, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 38, 64], "bfloat16"), Tensor([1, 2, 38, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 390, 64], "bfloat16"), Tensor([1, 2, 390, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 400, 64], "bfloat16"), Tensor([1, 2, 400, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 404, 64], "bfloat16"), Tensor([1, 2, 404, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 43, 64], "bfloat16"), Tensor([1, 2, 43, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 44, 64], "bfloat16"), Tensor([1, 2, 44, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 444, 64], "bfloat16"), Tensor([1, 2, 444, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 455, 64], "bfloat16"), Tensor([1, 2, 455, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 457, 64], "bfloat16"), Tensor([1, 2, 457, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 46, 64], "bfloat16"), Tensor([1, 2, 46, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 47, 64], "bfloat16"), Tensor([1, 2, 47, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 48, 64], "bfloat16"), Tensor([1, 2, 48, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 512, 64], "bfloat16"), Tensor([1, 2, 512, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 52, 64], "bfloat16"), Tensor([1, 2, 52, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 55, 64], "bfloat16"), Tensor([1, 2, 55, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 57, 64], "bfloat16"), Tensor([1, 2, 57, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 58, 64], "bfloat16"), Tensor([1, 2, 58, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 60, 64], "bfloat16"), Tensor([1, 2, 60, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 63, 64], "bfloat16"), Tensor([1, 2, 63, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 73, 64], "bfloat16"), Tensor([1, 2, 73, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 74, 64], "bfloat16"), Tensor([1, 2, 74, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 78, 64], "bfloat16"), Tensor([1, 2, 78, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 80, 64], "bfloat16"), Tensor([1, 2, 80, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 87, 64], "bfloat16"), Tensor([1, 2, 87, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 88, 64], "bfloat16"), Tensor([1, 2, 88, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 91, 64], "bfloat16"), Tensor([1, 2, 91, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 96, 64], "bfloat16"), Tensor([1, 2, 96, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 2, 97, 64], "bfloat16"), Tensor([1, 2, 97, 64], "bfloat16"))
torch.Tensor.add(Tensor([1, 221, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 221, 896], "bfloat16"), Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 225, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 225, 896], "bfloat16"), Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 228, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 228, 896], "bfloat16"), Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 242, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 242, 896], "bfloat16"), Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 253, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 253, 896], "bfloat16"), Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 275, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 275, 896], "bfloat16"), Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 286, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 286, 896], "bfloat16"), Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 288, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 288, 896], "bfloat16"), Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 295, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 295, 896], "bfloat16"), Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 302, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 302, 896], "bfloat16"), Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 303, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 303, 896], "bfloat16"), Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 307, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 307, 896], "bfloat16"), Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 32, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 32, 896], "bfloat16"), Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 321, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 321, 896], "bfloat16"), Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 325, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 325, 896], "bfloat16"), Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 334, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 334, 896], "bfloat16"), Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 339, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 339, 896], "bfloat16"), Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 347, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 347, 896], "bfloat16"), Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 349, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 349, 896], "bfloat16"), Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 36, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 36, 896], "bfloat16"), Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 368, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 368, 896], "bfloat16"), Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 38, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 38, 896], "bfloat16"), Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 390, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 390, 896], "bfloat16"), Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 400, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 400, 896], "bfloat16"), Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 404, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 404, 896], "bfloat16"), Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 43, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 43, 896], "bfloat16"), Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 44, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 44, 896], "bfloat16"), Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 444, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 444, 896], "bfloat16"), Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 455, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 455, 896], "bfloat16"), Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 457, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 457, 896], "bfloat16"), Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 46, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 46, 896], "bfloat16"), Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 47, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 47, 896], "bfloat16"), Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 48, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 48, 896], "bfloat16"), Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 512, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 512, 896], "bfloat16"), Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 52, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 52, 896], "bfloat16"), Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 55, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 55, 896], "bfloat16"), Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 57, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 57, 896], "bfloat16"), Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 58, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 58, 896], "bfloat16"), Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 60, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 60, 896], "bfloat16"), Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 63, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 63, 896], "bfloat16"), Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 73, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 73, 896], "bfloat16"), Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 74, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 74, 896], "bfloat16"), Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 78, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 78, 896], "bfloat16"), Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 80, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 80, 896], "bfloat16"), Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 87, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 87, 896], "bfloat16"), Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 88, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 88, 896], "bfloat16"), Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 91, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 91, 896], "bfloat16"), Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 96, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 96, 896], "bfloat16"), Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.add(Tensor([1, 97, 1], "float32"), 1e-06)
torch.Tensor.add(Tensor([1, 97, 896], "bfloat16"), Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.add(Tensor([], "bfloat16"), 1e-06)
torch.Tensor.add(Tensor([], "float32"), Tensor([], "float32"))
torch.Tensor.add(Tensor([], "int64"), 0)
torch.Tensor.add(Tensor([], "int64"), Tensor([], "int64"))
torch.Tensor.add_(Tensor([], "int64"), Tensor([], "int64"))
torch.Tensor.all(Tensor([1, 101], "bool"))
torch.Tensor.all(Tensor([1, 128], "bool"))
torch.Tensor.all(Tensor([1, 129], "bool"))
torch.Tensor.all(Tensor([1, 131], "bool"))
torch.Tensor.all(Tensor([1, 133], "bool"))
torch.Tensor.all(Tensor([1, 134], "bool"))
torch.Tensor.all(Tensor([1, 140], "bool"))
torch.Tensor.all(Tensor([1, 142], "bool"))
torch.Tensor.all(Tensor([1, 148], "bool"))
torch.Tensor.all(Tensor([1, 163], "bool"))
torch.Tensor.all(Tensor([1, 164], "bool"))
torch.Tensor.all(Tensor([1, 170], "bool"))
torch.Tensor.all(Tensor([1, 174], "bool"))
torch.Tensor.all(Tensor([1, 190], "bool"))
torch.Tensor.all(Tensor([1, 197], "bool"))
torch.Tensor.all(Tensor([1, 198], "bool"))
torch.Tensor.all(Tensor([1, 221], "bool"))
torch.Tensor.all(Tensor([1, 225], "bool"))
torch.Tensor.all(Tensor([1, 228], "bool"))
torch.Tensor.all(Tensor([1, 242], "bool"))
torch.Tensor.all(Tensor([1, 253], "bool"))
torch.Tensor.all(Tensor([1, 275], "bool"))
torch.Tensor.all(Tensor([1, 286], "bool"))
torch.Tensor.all(Tensor([1, 288], "bool"))
torch.Tensor.all(Tensor([1, 295], "bool"))
torch.Tensor.all(Tensor([1, 302], "bool"))
torch.Tensor.all(Tensor([1, 303], "bool"))
torch.Tensor.all(Tensor([1, 307], "bool"))
torch.Tensor.all(Tensor([1, 321], "bool"))
torch.Tensor.all(Tensor([1, 325], "bool"))
torch.Tensor.all(Tensor([1, 32], "bool"))
torch.Tensor.all(Tensor([1, 334], "bool"))
torch.Tensor.all(Tensor([1, 339], "bool"))
torch.Tensor.all(Tensor([1, 347], "bool"))
torch.Tensor.all(Tensor([1, 349], "bool"))
torch.Tensor.all(Tensor([1, 368], "bool"))
torch.Tensor.all(Tensor([1, 36], "bool"))
torch.Tensor.all(Tensor([1, 38], "bool"))
torch.Tensor.all(Tensor([1, 390], "bool"))
torch.Tensor.all(Tensor([1, 400], "bool"))
torch.Tensor.all(Tensor([1, 404], "bool"))
torch.Tensor.all(Tensor([1, 43], "bool"))
torch.Tensor.all(Tensor([1, 444], "bool"))
torch.Tensor.all(Tensor([1, 44], "bool"))
torch.Tensor.all(Tensor([1, 455], "bool"))
torch.Tensor.all(Tensor([1, 457], "bool"))
torch.Tensor.all(Tensor([1, 46], "bool"))
torch.Tensor.all(Tensor([1, 47], "bool"))
torch.Tensor.all(Tensor([1, 48], "bool"))
torch.Tensor.all(Tensor([1, 512], "bool"))
torch.Tensor.all(Tensor([1, 52], "bool"))
torch.Tensor.all(Tensor([1, 55], "bool"))
torch.Tensor.all(Tensor([1, 57], "bool"))
torch.Tensor.all(Tensor([1, 58], "bool"))
torch.Tensor.all(Tensor([1, 60], "bool"))
torch.Tensor.all(Tensor([1, 63], "bool"))
torch.Tensor.all(Tensor([1, 73], "bool"))
torch.Tensor.all(Tensor([1, 74], "bool"))
torch.Tensor.all(Tensor([1, 78], "bool"))
torch.Tensor.all(Tensor([1, 80], "bool"))
torch.Tensor.all(Tensor([1, 87], "bool"))
torch.Tensor.all(Tensor([1, 88], "bool"))
torch.Tensor.all(Tensor([1, 91], "bool"))
torch.Tensor.all(Tensor([1, 96], "bool"))
torch.Tensor.all(Tensor([1, 97], "bool"))
torch.Tensor.backward(Tensor([], "float32"), gradient=None, retain_graph=None, create_graph=False, inputs=None)
torch.Tensor.clone(Tensor([1, 101], "int64"))
torch.Tensor.clone(Tensor([1, 105], "int64"))
torch.Tensor.clone(Tensor([1, 128], "int64"))
torch.Tensor.clone(Tensor([1, 129], "int64"))
torch.Tensor.clone(Tensor([1, 131], "int64"))
torch.Tensor.clone(Tensor([1, 133], "int64"))
torch.Tensor.clone(Tensor([1, 134], "int64"))
torch.Tensor.clone(Tensor([1, 140], "int64"))
torch.Tensor.clone(Tensor([1, 142], "int64"))
torch.Tensor.clone(Tensor([1, 148], "int64"))
torch.Tensor.clone(Tensor([1, 163], "int64"))
torch.Tensor.clone(Tensor([1, 164], "int64"))
torch.Tensor.clone(Tensor([1, 170], "int64"))
torch.Tensor.clone(Tensor([1, 174], "int64"))
torch.Tensor.clone(Tensor([1, 190], "int64"))
torch.Tensor.clone(Tensor([1, 197], "int64"))
torch.Tensor.clone(Tensor([1, 198], "int64"))
torch.Tensor.clone(Tensor([1, 221], "int64"))
torch.Tensor.clone(Tensor([1, 225], "int64"))
torch.Tensor.clone(Tensor([1, 228], "int64"))
torch.Tensor.clone(Tensor([1, 242], "int64"))
torch.Tensor.clone(Tensor([1, 253], "int64"))
torch.Tensor.clone(Tensor([1, 275], "int64"))
torch.Tensor.clone(Tensor([1, 286], "int64"))
torch.Tensor.clone(Tensor([1, 288], "int64"))
torch.Tensor.clone(Tensor([1, 295], "int64"))
torch.Tensor.clone(Tensor([1, 302], "int64"))
torch.Tensor.clone(Tensor([1, 303], "int64"))
torch.Tensor.clone(Tensor([1, 307], "int64"))
torch.Tensor.clone(Tensor([1, 321], "int64"))
torch.Tensor.clone(Tensor([1, 325], "int64"))
torch.Tensor.clone(Tensor([1, 32], "int64"))
torch.Tensor.clone(Tensor([1, 334], "int64"))
torch.Tensor.clone(Tensor([1, 339], "int64"))
torch.Tensor.clone(Tensor([1, 347], "int64"))
torch.Tensor.clone(Tensor([1, 349], "int64"))
torch.Tensor.clone(Tensor([1, 368], "int64"))
torch.Tensor.clone(Tensor([1, 36], "int64"))
torch.Tensor.clone(Tensor([1, 38], "int64"))
torch.Tensor.clone(Tensor([1, 390], "int64"))
torch.Tensor.clone(Tensor([1, 400], "int64"))
torch.Tensor.clone(Tensor([1, 404], "int64"))
torch.Tensor.clone(Tensor([1, 43], "int64"))
torch.Tensor.clone(Tensor([1, 444], "int64"))
torch.Tensor.clone(Tensor([1, 44], "int64"))
torch.Tensor.clone(Tensor([1, 455], "int64"))
torch.Tensor.clone(Tensor([1, 457], "int64"))
torch.Tensor.clone(Tensor([1, 46], "int64"))
torch.Tensor.clone(Tensor([1, 47], "int64"))
torch.Tensor.clone(Tensor([1, 48], "int64"))
torch.Tensor.clone(Tensor([1, 512], "int64"))
torch.Tensor.clone(Tensor([1, 52], "int64"))
torch.Tensor.clone(Tensor([1, 55], "int64"))
torch.Tensor.clone(Tensor([1, 57], "int64"))
torch.Tensor.clone(Tensor([1, 58], "int64"))
torch.Tensor.clone(Tensor([1, 60], "int64"))
torch.Tensor.clone(Tensor([1, 63], "int64"))
torch.Tensor.clone(Tensor([1, 73], "int64"))
torch.Tensor.clone(Tensor([1, 74], "int64"))
torch.Tensor.clone(Tensor([1, 78], "int64"))
torch.Tensor.clone(Tensor([1, 80], "int64"))
torch.Tensor.clone(Tensor([1, 87], "int64"))
torch.Tensor.clone(Tensor([1, 88], "int64"))
torch.Tensor.clone(Tensor([1, 91], "int64"))
torch.Tensor.clone(Tensor([1, 96], "int64"))
torch.Tensor.clone(Tensor([1, 97], "int64"))
torch.Tensor.contiguous(Tensor([1, 101, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 101], "int64"))
torch.Tensor.contiguous(Tensor([1, 128, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 128], "int64"))
torch.Tensor.contiguous(Tensor([1, 129, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 129], "int64"))
torch.Tensor.contiguous(Tensor([1, 131, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 131], "int64"))
torch.Tensor.contiguous(Tensor([1, 133, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 133], "int64"))
torch.Tensor.contiguous(Tensor([1, 134, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 134], "int64"))
torch.Tensor.contiguous(Tensor([1, 14, 101, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 128, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 129, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 131, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 133, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 134, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 140, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 142, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 148, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 163, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 164, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 170, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 174, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 190, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 197, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 198, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 221, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 225, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 228, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 242, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 253, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 275, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 286, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 288, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 295, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 302, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 303, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 307, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 32, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 321, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 325, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 334, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 339, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 347, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 349, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 36, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 368, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 38, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 390, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 400, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 404, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 43, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 44, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 444, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 455, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 457, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 46, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 47, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 48, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 512, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 52, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 55, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 57, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 58, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 60, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 63, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 73, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 74, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 78, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 80, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 87, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 88, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 91, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 96, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 14, 97, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 140, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 140], "int64"))
torch.Tensor.contiguous(Tensor([1, 142, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 142], "int64"))
torch.Tensor.contiguous(Tensor([1, 148, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 148], "int64"))
torch.Tensor.contiguous(Tensor([1, 163, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 163], "int64"))
torch.Tensor.contiguous(Tensor([1, 164, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 164], "int64"))
torch.Tensor.contiguous(Tensor([1, 170, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 170], "int64"))
torch.Tensor.contiguous(Tensor([1, 174, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 174], "int64"))
torch.Tensor.contiguous(Tensor([1, 190, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 190], "int64"))
torch.Tensor.contiguous(Tensor([1, 197, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 197], "int64"))
torch.Tensor.contiguous(Tensor([1, 198, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 198], "int64"))
torch.Tensor.contiguous(Tensor([1, 2, 101, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 128, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 129, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 131, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 133, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 134, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 140, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 142, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 148, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 163, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 164, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 170, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 174, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 190, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 197, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 198, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 221, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 225, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 228, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 242, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 253, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 275, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 286, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 288, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 295, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 302, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 303, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 307, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 32, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 321, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 325, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 334, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 339, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 347, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 349, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 36, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 368, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 38, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 390, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 400, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 404, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 43, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 44, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 444, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 455, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 457, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 46, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 47, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 48, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 512, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 52, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 55, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 57, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 58, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 60, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 63, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 73, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 74, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 78, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 80, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 87, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 88, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 91, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 96, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 2, 97, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 221, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 221], "int64"))
torch.Tensor.contiguous(Tensor([1, 225, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 225], "int64"))
torch.Tensor.contiguous(Tensor([1, 228, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 228], "int64"))
torch.Tensor.contiguous(Tensor([1, 242, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 242], "int64"))
torch.Tensor.contiguous(Tensor([1, 253, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 253], "int64"))
torch.Tensor.contiguous(Tensor([1, 275, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 275], "int64"))
torch.Tensor.contiguous(Tensor([1, 286, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 286], "int64"))
torch.Tensor.contiguous(Tensor([1, 288, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 288], "int64"))
torch.Tensor.contiguous(Tensor([1, 295, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 295], "int64"))
torch.Tensor.contiguous(Tensor([1, 302, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 302], "int64"))
torch.Tensor.contiguous(Tensor([1, 303, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 303], "int64"))
torch.Tensor.contiguous(Tensor([1, 307, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 307], "int64"))
torch.Tensor.contiguous(Tensor([1, 32, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 321, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 321], "int64"))
torch.Tensor.contiguous(Tensor([1, 325, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 325], "int64"))
torch.Tensor.contiguous(Tensor([1, 32], "int64"))
torch.Tensor.contiguous(Tensor([1, 334, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 334], "int64"))
torch.Tensor.contiguous(Tensor([1, 339, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 339], "int64"))
torch.Tensor.contiguous(Tensor([1, 347, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 347], "int64"))
torch.Tensor.contiguous(Tensor([1, 349, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 349], "int64"))
torch.Tensor.contiguous(Tensor([1, 36, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 368, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 368], "int64"))
torch.Tensor.contiguous(Tensor([1, 36], "int64"))
torch.Tensor.contiguous(Tensor([1, 38, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 38], "int64"))
torch.Tensor.contiguous(Tensor([1, 390, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 390], "int64"))
torch.Tensor.contiguous(Tensor([1, 400, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 400], "int64"))
torch.Tensor.contiguous(Tensor([1, 404, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 404], "int64"))
torch.Tensor.contiguous(Tensor([1, 43, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 43], "int64"))
torch.Tensor.contiguous(Tensor([1, 44, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 444, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 444], "int64"))
torch.Tensor.contiguous(Tensor([1, 44], "int64"))
torch.Tensor.contiguous(Tensor([1, 455, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 455], "int64"))
torch.Tensor.contiguous(Tensor([1, 457, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 457], "int64"))
torch.Tensor.contiguous(Tensor([1, 46, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 46], "int64"))
torch.Tensor.contiguous(Tensor([1, 47, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 47], "int64"))
torch.Tensor.contiguous(Tensor([1, 48, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 48], "int64"))
torch.Tensor.contiguous(Tensor([1, 512, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 512], "int64"))
torch.Tensor.contiguous(Tensor([1, 52, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 52], "int64"))
torch.Tensor.contiguous(Tensor([1, 55, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 55], "int64"))
torch.Tensor.contiguous(Tensor([1, 57, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 57], "int64"))
torch.Tensor.contiguous(Tensor([1, 58, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 58], "int64"))
torch.Tensor.contiguous(Tensor([1, 60, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 60], "int64"))
torch.Tensor.contiguous(Tensor([1, 63, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 63], "int64"))
torch.Tensor.contiguous(Tensor([1, 73, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 73], "int64"))
torch.Tensor.contiguous(Tensor([1, 74, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 74], "int64"))
torch.Tensor.contiguous(Tensor([1, 78, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 78], "int64"))
torch.Tensor.contiguous(Tensor([1, 80, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 80], "int64"))
torch.Tensor.contiguous(Tensor([1, 87, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 87], "int64"))
torch.Tensor.contiguous(Tensor([1, 88, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 88], "int64"))
torch.Tensor.contiguous(Tensor([1, 91, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 91], "int64"))
torch.Tensor.contiguous(Tensor([1, 96, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 96], "int64"))
torch.Tensor.contiguous(Tensor([1, 97, 14, 64], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([1, 97], "int64"))
torch.Tensor.contiguous(Tensor([128, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([128], "bfloat16"))
torch.Tensor.contiguous(Tensor([151936, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([4864, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([896, 4864], "bfloat16"))
torch.Tensor.contiguous(Tensor([896, 896], "bfloat16"))
torch.Tensor.contiguous(Tensor([896], "bfloat16"))
torch.Tensor.cos(Tensor([1, 101, 64], "float32"))
torch.Tensor.cos(Tensor([1, 128, 64], "float32"))
torch.Tensor.cos(Tensor([1, 129, 64], "float32"))
torch.Tensor.cos(Tensor([1, 131, 64], "float32"))
torch.Tensor.cos(Tensor([1, 133, 64], "float32"))
torch.Tensor.cos(Tensor([1, 134, 64], "float32"))
torch.Tensor.cos(Tensor([1, 140, 64], "float32"))
torch.Tensor.cos(Tensor([1, 142, 64], "float32"))
torch.Tensor.cos(Tensor([1, 148, 64], "float32"))
torch.Tensor.cos(Tensor([1, 163, 64], "float32"))
torch.Tensor.cos(Tensor([1, 164, 64], "float32"))
torch.Tensor.cos(Tensor([1, 170, 64], "float32"))
torch.Tensor.cos(Tensor([1, 174, 64], "float32"))
torch.Tensor.cos(Tensor([1, 190, 64], "float32"))
torch.Tensor.cos(Tensor([1, 197, 64], "float32"))
torch.Tensor.cos(Tensor([1, 198, 64], "float32"))
torch.Tensor.cos(Tensor([1, 221, 64], "float32"))
torch.Tensor.cos(Tensor([1, 225, 64], "float32"))
torch.Tensor.cos(Tensor([1, 228, 64], "float32"))
torch.Tensor.cos(Tensor([1, 242, 64], "float32"))
torch.Tensor.cos(Tensor([1, 253, 64], "float32"))
torch.Tensor.cos(Tensor([1, 275, 64], "float32"))
torch.Tensor.cos(Tensor([1, 286, 64], "float32"))
torch.Tensor.cos(Tensor([1, 288, 64], "float32"))
torch.Tensor.cos(Tensor([1, 295, 64], "float32"))
torch.Tensor.cos(Tensor([1, 302, 64], "float32"))
torch.Tensor.cos(Tensor([1, 303, 64], "float32"))
torch.Tensor.cos(Tensor([1, 307, 64], "float32"))
torch.Tensor.cos(Tensor([1, 32, 64], "float32"))
torch.Tensor.cos(Tensor([1, 321, 64], "float32"))
torch.Tensor.cos(Tensor([1, 325, 64], "float32"))
torch.Tensor.cos(Tensor([1, 334, 64], "float32"))
torch.Tensor.cos(Tensor([1, 339, 64], "float32"))
torch.Tensor.cos(Tensor([1, 347, 64], "float32"))
torch.Tensor.cos(Tensor([1, 349, 64], "float32"))
torch.Tensor.cos(Tensor([1, 36, 64], "float32"))
torch.Tensor.cos(Tensor([1, 368, 64], "float32"))
torch.Tensor.cos(Tensor([1, 38, 64], "float32"))
torch.Tensor.cos(Tensor([1, 390, 64], "float32"))
torch.Tensor.cos(Tensor([1, 400, 64], "float32"))
torch.Tensor.cos(Tensor([1, 404, 64], "float32"))
torch.Tensor.cos(Tensor([1, 43, 64], "float32"))
torch.Tensor.cos(Tensor([1, 44, 64], "float32"))
torch.Tensor.cos(Tensor([1, 444, 64], "float32"))
torch.Tensor.cos(Tensor([1, 455, 64], "float32"))
torch.Tensor.cos(Tensor([1, 457, 64], "float32"))
torch.Tensor.cos(Tensor([1, 46, 64], "float32"))
torch.Tensor.cos(Tensor([1, 47, 64], "float32"))
torch.Tensor.cos(Tensor([1, 48, 64], "float32"))
torch.Tensor.cos(Tensor([1, 512, 64], "float32"))
torch.Tensor.cos(Tensor([1, 52, 64], "float32"))
torch.Tensor.cos(Tensor([1, 55, 64], "float32"))
torch.Tensor.cos(Tensor([1, 57, 64], "float32"))
torch.Tensor.cos(Tensor([1, 58, 64], "float32"))
torch.Tensor.cos(Tensor([1, 60, 64], "float32"))
torch.Tensor.cos(Tensor([1, 63, 64], "float32"))
torch.Tensor.cos(Tensor([1, 73, 64], "float32"))
torch.Tensor.cos(Tensor([1, 74, 64], "float32"))
torch.Tensor.cos(Tensor([1, 78, 64], "float32"))
torch.Tensor.cos(Tensor([1, 80, 64], "float32"))
torch.Tensor.cos(Tensor([1, 87, 64], "float32"))
torch.Tensor.cos(Tensor([1, 88, 64], "float32"))
torch.Tensor.cos(Tensor([1, 91, 64], "float32"))
torch.Tensor.cos(Tensor([1, 96, 64], "float32"))
torch.Tensor.cos(Tensor([1, 97, 64], "float32"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([128, 896], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([128], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([151936, 896], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([4864, 896], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([896, 4864], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([896, 896], "bfloat16"))
torch.Tensor.data.__set__("<Unserializable: Parameter>", Tensor([896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([128, 896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([128], "bfloat16"))
torch.Tensor.data_ptr(Tensor([151936, 896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([4864, 896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([896, 4864], "bfloat16"))
torch.Tensor.data_ptr(Tensor([896, 896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([896], "bfloat16"))
torch.Tensor.data_ptr(Tensor([], "bfloat16"))
torch.Tensor.detach("<Unserializable: Parameter>")
torch.Tensor.detach(Tensor([], "float32"))
torch.Tensor.device.__get__("<Unserializable: Parameter>")
torch.Tensor.device.__get__(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([101, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([101], "int64"))
torch.Tensor.device.__get__(Tensor([128, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([128], "bfloat16"))
torch.Tensor.device.__get__(Tensor([128], "int64"))
torch.Tensor.device.__get__(Tensor([129, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([129], "int64"))
torch.Tensor.device.__get__(Tensor([131, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([131], "int64"))
torch.Tensor.device.__get__(Tensor([133, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([133], "int64"))
torch.Tensor.device.__get__(Tensor([134, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([134], "int64"))
torch.Tensor.device.__get__(Tensor([140, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([140], "int64"))
torch.Tensor.device.__get__(Tensor([142, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([142], "int64"))
torch.Tensor.device.__get__(Tensor([148, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([148], "int64"))
torch.Tensor.device.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([163, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([163], "int64"))
torch.Tensor.device.__get__(Tensor([164, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([164], "int64"))
torch.Tensor.device.__get__(Tensor([16], "uint8"))
torch.Tensor.device.__get__(Tensor([170, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([170], "int64"))
torch.Tensor.device.__get__(Tensor([174, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([174], "int64"))
torch.Tensor.device.__get__(Tensor([190, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([190], "int64"))
torch.Tensor.device.__get__(Tensor([197, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([197], "int64"))
torch.Tensor.device.__get__(Tensor([198, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([198], "int64"))
torch.Tensor.device.__get__(Tensor([221, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([221], "int64"))
torch.Tensor.device.__get__(Tensor([225, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([225], "int64"))
torch.Tensor.device.__get__(Tensor([228, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([228], "int64"))
torch.Tensor.device.__get__(Tensor([242, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([242], "int64"))
torch.Tensor.device.__get__(Tensor([253, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([253], "int64"))
torch.Tensor.device.__get__(Tensor([275, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([275], "int64"))
torch.Tensor.device.__get__(Tensor([286, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([286], "int64"))
torch.Tensor.device.__get__(Tensor([288, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([288], "int64"))
torch.Tensor.device.__get__(Tensor([295, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([295], "int64"))
torch.Tensor.device.__get__(Tensor([302, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([302], "int64"))
torch.Tensor.device.__get__(Tensor([303, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([303], "int64"))
torch.Tensor.device.__get__(Tensor([307, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([307], "int64"))
torch.Tensor.device.__get__(Tensor([32, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([321, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([321], "int64"))
torch.Tensor.device.__get__(Tensor([325, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([325], "int64"))
torch.Tensor.device.__get__(Tensor([32], "int64"))
torch.Tensor.device.__get__(Tensor([334, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([334], "int64"))
torch.Tensor.device.__get__(Tensor([339, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([339], "int64"))
torch.Tensor.device.__get__(Tensor([347, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([347], "int64"))
torch.Tensor.device.__get__(Tensor([349, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([349], "int64"))
torch.Tensor.device.__get__(Tensor([36, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([368, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([368], "int64"))
torch.Tensor.device.__get__(Tensor([36], "int64"))
torch.Tensor.device.__get__(Tensor([38, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([38], "int64"))
torch.Tensor.device.__get__(Tensor([390, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([390], "int64"))
torch.Tensor.device.__get__(Tensor([400, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([400], "int64"))
torch.Tensor.device.__get__(Tensor([404, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([404], "int64"))
torch.Tensor.device.__get__(Tensor([43, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([43], "int64"))
torch.Tensor.device.__get__(Tensor([44, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([444, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([444], "int64"))
torch.Tensor.device.__get__(Tensor([44], "int64"))
torch.Tensor.device.__get__(Tensor([455, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([455], "int64"))
torch.Tensor.device.__get__(Tensor([457, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([457], "int64"))
torch.Tensor.device.__get__(Tensor([46, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([46], "int64"))
torch.Tensor.device.__get__(Tensor([47, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([47], "int64"))
torch.Tensor.device.__get__(Tensor([48, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([48], "int64"))
torch.Tensor.device.__get__(Tensor([5056], "uint8"))
torch.Tensor.device.__get__(Tensor([512, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([512], "int64"))
torch.Tensor.device.__get__(Tensor([52, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([52], "int64"))
torch.Tensor.device.__get__(Tensor([55, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([55], "int64"))
torch.Tensor.device.__get__(Tensor([57, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([57], "int64"))
torch.Tensor.device.__get__(Tensor([58, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([58], "int64"))
torch.Tensor.device.__get__(Tensor([60, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([60], "int64"))
torch.Tensor.device.__get__(Tensor([63, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([63], "int64"))
torch.Tensor.device.__get__(Tensor([73, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([73], "int64"))
torch.Tensor.device.__get__(Tensor([74, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([74], "int64"))
torch.Tensor.device.__get__(Tensor([78, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([78], "int64"))
torch.Tensor.device.__get__(Tensor([80, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([80], "int64"))
torch.Tensor.device.__get__(Tensor([87, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([87], "int64"))
torch.Tensor.device.__get__(Tensor([88, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([88], "int64"))
torch.Tensor.device.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.device.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([896], "bfloat16"))
torch.Tensor.device.__get__(Tensor([91, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([91], "int64"))
torch.Tensor.device.__get__(Tensor([96, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([96], "int64"))
torch.Tensor.device.__get__(Tensor([97, 151936], "float32"))
torch.Tensor.device.__get__(Tensor([97], "int64"))
torch.Tensor.device.__get__(Tensor([], "float32"))
torch.Tensor.dim("<Unserializable: Parameter>")
torch.Tensor.div(Tensor([32], "float32"), 64)
torch.Tensor.div(Tensor([], "float32"), 1)
torch.Tensor.div(Tensor([], "float32"), Tensor([], "int64"))
torch.Tensor.dtype.__get__("<Unserializable: Parameter>")
torch.Tensor.dtype.__get__(Tensor([1, 101, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 101], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 105], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 128, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 128], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 129, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 129], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 131, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 131], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 133, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 133], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 134, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 134], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 140, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 140], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 142, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 142], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 148, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 148], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 163, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 163], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 164, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 164], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 170, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 170], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 174, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 174], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 190, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 190], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 197, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 197], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 198, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 198], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 221, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 221], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 225, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 225], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 228, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 228], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 242, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 242], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 253, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 253], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 275, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 275], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 286, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 286], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 288, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 288], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 295, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 295], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 302, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 302], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 303, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 303], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 307, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 307], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 32, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 321, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 321], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 325, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 325], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 32], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 334, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 334], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 339, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 339], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 347, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 347], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 349, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 349], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 36, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 368, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 368], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 36], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 38, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 38], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 390, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 390], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 400, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 400], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 404, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 404], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 43, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 43], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 44, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 444, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 444], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 44], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 455, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 455], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 457, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 457], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 46, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 46], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 47, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 47], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 48, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 48], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 512, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 512], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 52, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 52], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 55, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 55], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 57, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 57], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 58, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 58], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 60, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 60], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 63, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 63], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 73, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 73], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 74, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 74], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 78, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 78], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 80, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 80], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 87, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 87], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 88, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 88], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 91, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 91], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 96, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 96], "int64"))
torch.Tensor.dtype.__get__(Tensor([1, 97, 151936], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([1, 97], "int64"))
torch.Tensor.dtype.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([128], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([16], "uint8"))
torch.Tensor.dtype.__get__(Tensor([32], "float32"))
torch.Tensor.dtype.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([5056], "uint8"))
torch.Tensor.dtype.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([896], "bfloat16"))
torch.Tensor.dtype.__get__(Tensor([], "float32"))
torch.Tensor.element_size("<Unserializable: Parameter>")
torch.Tensor.element_size(Tensor([151936, 896], "bfloat16"))
torch.Tensor.expand(Tensor([1, 32, 1], "float32"), 1, -1, 1)
torch.Tensor.float(Tensor([1, 1, 101], "float32"))
torch.Tensor.float(Tensor([1, 1, 101], "int64"))
torch.Tensor.float(Tensor([1, 1, 128], "float32"))
torch.Tensor.float(Tensor([1, 1, 128], "int64"))
torch.Tensor.float(Tensor([1, 1, 129], "float32"))
torch.Tensor.float(Tensor([1, 1, 129], "int64"))
torch.Tensor.float(Tensor([1, 1, 131], "float32"))
torch.Tensor.float(Tensor([1, 1, 131], "int64"))
torch.Tensor.float(Tensor([1, 1, 133], "float32"))
torch.Tensor.float(Tensor([1, 1, 133], "int64"))
torch.Tensor.float(Tensor([1, 1, 134], "float32"))
torch.Tensor.float(Tensor([1, 1, 134], "int64"))
torch.Tensor.float(Tensor([1, 1, 140], "float32"))
torch.Tensor.float(Tensor([1, 1, 140], "int64"))
torch.Tensor.float(Tensor([1, 1, 142], "float32"))
torch.Tensor.float(Tensor([1, 1, 142], "int64"))
torch.Tensor.float(Tensor([1, 1, 148], "float32"))
torch.Tensor.float(Tensor([1, 1, 148], "int64"))
torch.Tensor.float(Tensor([1, 1, 163], "float32"))
torch.Tensor.float(Tensor([1, 1, 163], "int64"))
torch.Tensor.float(Tensor([1, 1, 164], "float32"))
torch.Tensor.float(Tensor([1, 1, 164], "int64"))
torch.Tensor.float(Tensor([1, 1, 170], "float32"))
torch.Tensor.float(Tensor([1, 1, 170], "int64"))
torch.Tensor.float(Tensor([1, 1, 174], "float32"))
torch.Tensor.float(Tensor([1, 1, 174], "int64"))
torch.Tensor.float(Tensor([1, 1, 190], "float32"))
torch.Tensor.float(Tensor([1, 1, 190], "int64"))
torch.Tensor.float(Tensor([1, 1, 197], "float32"))
torch.Tensor.float(Tensor([1, 1, 197], "int64"))
torch.Tensor.float(Tensor([1, 1, 198], "float32"))
torch.Tensor.float(Tensor([1, 1, 198], "int64"))
torch.Tensor.float(Tensor([1, 1, 221], "float32"))
torch.Tensor.float(Tensor([1, 1, 221], "int64"))
torch.Tensor.float(Tensor([1, 1, 225], "float32"))
torch.Tensor.float(Tensor([1, 1, 225], "int64"))
torch.Tensor.float(Tensor([1, 1, 228], "float32"))
torch.Tensor.float(Tensor([1, 1, 228], "int64"))
torch.Tensor.float(Tensor([1, 1, 242], "float32"))
torch.Tensor.float(Tensor([1, 1, 242], "int64"))
torch.Tensor.float(Tensor([1, 1, 253], "float32"))
torch.Tensor.float(Tensor([1, 1, 253], "int64"))
torch.Tensor.float(Tensor([1, 1, 275], "float32"))
torch.Tensor.float(Tensor([1, 1, 275], "int64"))
torch.Tensor.float(Tensor([1, 1, 286], "float32"))
torch.Tensor.float(Tensor([1, 1, 286], "int64"))
torch.Tensor.float(Tensor([1, 1, 288], "float32"))
torch.Tensor.float(Tensor([1, 1, 288], "int64"))
torch.Tensor.float(Tensor([1, 1, 295], "float32"))
torch.Tensor.float(Tensor([1, 1, 295], "int64"))
torch.Tensor.float(Tensor([1, 1, 302], "float32"))
torch.Tensor.float(Tensor([1, 1, 302], "int64"))
torch.Tensor.float(Tensor([1, 1, 303], "float32"))
torch.Tensor.float(Tensor([1, 1, 303], "int64"))
torch.Tensor.float(Tensor([1, 1, 307], "float32"))
torch.Tensor.float(Tensor([1, 1, 307], "int64"))
torch.Tensor.float(Tensor([1, 1, 321], "float32"))
torch.Tensor.float(Tensor([1, 1, 321], "int64"))
torch.Tensor.float(Tensor([1, 1, 325], "float32"))
torch.Tensor.float(Tensor([1, 1, 325], "int64"))
torch.Tensor.float(Tensor([1, 1, 32], "float32"))
torch.Tensor.float(Tensor([1, 1, 32], "int64"))
torch.Tensor.float(Tensor([1, 1, 334], "float32"))
torch.Tensor.float(Tensor([1, 1, 334], "int64"))
torch.Tensor.float(Tensor([1, 1, 339], "float32"))
torch.Tensor.float(Tensor([1, 1, 339], "int64"))
torch.Tensor.float(Tensor([1, 1, 347], "float32"))
torch.Tensor.float(Tensor([1, 1, 347], "int64"))
torch.Tensor.float(Tensor([1, 1, 349], "float32"))
torch.Tensor.float(Tensor([1, 1, 349], "int64"))
torch.Tensor.float(Tensor([1, 1, 368], "float32"))
torch.Tensor.float(Tensor([1, 1, 368], "int64"))
torch.Tensor.float(Tensor([1, 1, 36], "float32"))
torch.Tensor.float(Tensor([1, 1, 36], "int64"))
torch.Tensor.float(Tensor([1, 1, 38], "float32"))
torch.Tensor.float(Tensor([1, 1, 38], "int64"))
torch.Tensor.float(Tensor([1, 1, 390], "float32"))
torch.Tensor.float(Tensor([1, 1, 390], "int64"))
torch.Tensor.float(Tensor([1, 1, 400], "float32"))
torch.Tensor.float(Tensor([1, 1, 400], "int64"))
torch.Tensor.float(Tensor([1, 1, 404], "float32"))
torch.Tensor.float(Tensor([1, 1, 404], "int64"))
torch.Tensor.float(Tensor([1, 1, 43], "float32"))
torch.Tensor.float(Tensor([1, 1, 43], "int64"))
torch.Tensor.float(Tensor([1, 1, 444], "float32"))
torch.Tensor.float(Tensor([1, 1, 444], "int64"))
torch.Tensor.float(Tensor([1, 1, 44], "float32"))
torch.Tensor.float(Tensor([1, 1, 44], "int64"))
torch.Tensor.float(Tensor([1, 1, 455], "float32"))
torch.Tensor.float(Tensor([1, 1, 455], "int64"))
torch.Tensor.float(Tensor([1, 1, 457], "float32"))
torch.Tensor.float(Tensor([1, 1, 457], "int64"))
torch.Tensor.float(Tensor([1, 1, 46], "float32"))
torch.Tensor.float(Tensor([1, 1, 46], "int64"))
torch.Tensor.float(Tensor([1, 1, 47], "float32"))
torch.Tensor.float(Tensor([1, 1, 47], "int64"))
torch.Tensor.float(Tensor([1, 1, 48], "float32"))
torch.Tensor.float(Tensor([1, 1, 48], "int64"))
torch.Tensor.float(Tensor([1, 1, 512], "float32"))
torch.Tensor.float(Tensor([1, 1, 512], "int64"))
torch.Tensor.float(Tensor([1, 1, 52], "float32"))
torch.Tensor.float(Tensor([1, 1, 52], "int64"))
torch.Tensor.float(Tensor([1, 1, 55], "float32"))
torch.Tensor.float(Tensor([1, 1, 55], "int64"))
torch.Tensor.float(Tensor([1, 1, 57], "float32"))
torch.Tensor.float(Tensor([1, 1, 57], "int64"))
torch.Tensor.float(Tensor([1, 1, 58], "float32"))
torch.Tensor.float(Tensor([1, 1, 58], "int64"))
torch.Tensor.float(Tensor([1, 1, 60], "float32"))
torch.Tensor.float(Tensor([1, 1, 60], "int64"))
torch.Tensor.float(Tensor([1, 1, 63], "float32"))
torch.Tensor.float(Tensor([1, 1, 63], "int64"))
torch.Tensor.float(Tensor([1, 1, 73], "float32"))
torch.Tensor.float(Tensor([1, 1, 73], "int64"))
torch.Tensor.float(Tensor([1, 1, 74], "float32"))
torch.Tensor.float(Tensor([1, 1, 74], "int64"))
torch.Tensor.float(Tensor([1, 1, 78], "float32"))
torch.Tensor.float(Tensor([1, 1, 78], "int64"))
torch.Tensor.float(Tensor([1, 1, 80], "float32"))
torch.Tensor.float(Tensor([1, 1, 80], "int64"))
torch.Tensor.float(Tensor([1, 1, 87], "float32"))
torch.Tensor.float(Tensor([1, 1, 87], "int64"))
torch.Tensor.float(Tensor([1, 1, 88], "float32"))
torch.Tensor.float(Tensor([1, 1, 88], "int64"))
torch.Tensor.float(Tensor([1, 1, 91], "float32"))
torch.Tensor.float(Tensor([1, 1, 91], "int64"))
torch.Tensor.float(Tensor([1, 1, 96], "float32"))
torch.Tensor.float(Tensor([1, 1, 96], "int64"))
torch.Tensor.float(Tensor([1, 1, 97], "float32"))
torch.Tensor.float(Tensor([1, 1, 97], "int64"))
torch.Tensor.float(Tensor([1, 101, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 128, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 129, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 131, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 133, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 134, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 140, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 142, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 148, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 163, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 164, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 170, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 174, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 190, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 197, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 198, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 221, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 225, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 228, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 242, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 253, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 275, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 286, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 288, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 295, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 302, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 303, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 307, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 32, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 32, 1], "float32"))
torch.Tensor.float(Tensor([1, 321, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 325, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 334, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 339, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 347, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 349, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 36, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 368, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 38, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 390, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 400, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 404, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 43, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 44, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 444, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 455, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 457, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 46, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 47, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 48, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 512, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 52, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 55, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 57, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 58, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 60, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 63, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 73, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 74, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 78, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 80, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 87, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 88, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 91, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 96, 151936], "bfloat16"))
torch.Tensor.float(Tensor([1, 97, 151936], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.get_device(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.grad.__get__("<Unserializable: Parameter>")
torch.Tensor.grad.__set__("<Unserializable: Parameter>", None)
torch.Tensor.grad_fn.__get__("<Unserializable: Parameter>")
torch.Tensor.has_names(Tensor([128, 896], "bfloat16"))
torch.Tensor.has_names(Tensor([128], "bfloat16"))
torch.Tensor.has_names(Tensor([151936, 896], "bfloat16"))
torch.Tensor.has_names(Tensor([16], "uint8"))
torch.Tensor.has_names(Tensor([4864, 896], "bfloat16"))
torch.Tensor.has_names(Tensor([5056], "uint8"))
torch.Tensor.has_names(Tensor([896, 4864], "bfloat16"))
torch.Tensor.has_names(Tensor([896, 896], "bfloat16"))
torch.Tensor.has_names(Tensor([896], "bfloat16"))
torch.Tensor.has_names(Tensor([], "float32"))
torch.Tensor.is_contiguous("<Unserializable: Parameter>")
torch.Tensor.is_contiguous(Tensor([128, 896], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([128], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([151936, 896], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([4864, 896], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([896, 4864], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([896, 896], "bfloat16"))
torch.Tensor.is_contiguous(Tensor([896], "bfloat16"))
torch.Tensor.is_cpu.__get__(Tensor([], "float32"))
torch.Tensor.is_floating_point("<Unserializable: Parameter>")
torch.Tensor.is_floating_point(Tensor([32], "float32"))
torch.Tensor.is_leaf.__get__("<Unserializable: Parameter>")
torch.Tensor.is_meta.__get__("<Unserializable: Parameter>")
torch.Tensor.is_meta.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([128], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.is_meta.__get__(Tensor([896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([128], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([16], "uint8"))
torch.Tensor.is_nested.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([5056], "uint8"))
torch.Tensor.is_nested.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([896], "bfloat16"))
torch.Tensor.is_nested.__get__(Tensor([], "float32"))
torch.Tensor.is_quantized.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([128], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([16], "uint8"))
torch.Tensor.is_quantized.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([5056], "uint8"))
torch.Tensor.is_quantized.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([896], "bfloat16"))
torch.Tensor.is_quantized.__get__(Tensor([], "float32"))
torch.Tensor.is_sparse.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([128], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([16], "uint8"))
torch.Tensor.is_sparse.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([5056], "uint8"))
torch.Tensor.is_sparse.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([896], "bfloat16"))
torch.Tensor.is_sparse.__get__(Tensor([], "float32"))
torch.Tensor.item(Tensor([], "float32"))
torch.Tensor.item(Tensor([], "int64"))
torch.Tensor.layout.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([128], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([16], "uint8"))
torch.Tensor.layout.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([5056], "uint8"))
torch.Tensor.layout.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([896], "bfloat16"))
torch.Tensor.layout.__get__(Tensor([], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 101], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 128], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 129], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 131], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 133], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 134], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 140], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 142], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 148], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 163], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 164], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 170], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 174], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 190], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 197], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 198], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 221], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 225], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 228], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 242], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 253], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 275], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 286], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 288], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 295], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 302], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 303], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 307], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 321], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 325], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 32], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 334], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 339], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 347], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 349], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 368], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 36], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 38], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 390], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 400], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 404], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 43], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 444], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 44], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 455], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 457], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 46], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 47], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 48], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 512], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 52], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 55], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 57], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 58], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 60], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 63], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 73], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 74], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 78], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 80], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 87], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 88], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 91], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 96], "float32"))
torch.Tensor.matmul(Tensor([1, 32, 1], "float32"), Tensor([1, 1, 97], "float32"))
torch.Tensor.mean(Tensor([1, 101, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 128, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 129, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 131, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 133, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 134, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 140, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 142, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 148, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 163, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 164, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 170, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 174, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 190, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 197, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 198, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 221, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 225, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 228, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 242, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 253, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 275, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 286, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 288, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 295, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 302, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 303, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 307, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 32, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 321, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 325, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 334, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 339, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 347, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 349, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 36, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 368, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 38, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 390, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 400, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 404, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 43, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 44, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 444, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 455, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 457, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 46, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 47, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 48, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 512, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 52, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 55, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 57, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 58, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 60, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 63, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 73, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 74, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 78, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 80, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 87, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 88, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 91, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 96, 896], "float32"), -1, keepdim=True)
torch.Tensor.mean(Tensor([1, 97, 896], "float32"), -1, keepdim=True)
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.mul("<Unserializable: Parameter>", Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.mul(Tensor([1, 101, 4864], "bfloat16"), Tensor([1, 101, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 101, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 101, 896], "float32"), Tensor([1, 101, 1], "float32"))
torch.Tensor.mul(Tensor([1, 128, 4864], "bfloat16"), Tensor([1, 128, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 128, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 128, 896], "float32"), Tensor([1, 128, 1], "float32"))
torch.Tensor.mul(Tensor([1, 129, 4864], "bfloat16"), Tensor([1, 129, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 129, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 129, 896], "float32"), Tensor([1, 129, 1], "float32"))
torch.Tensor.mul(Tensor([1, 131, 4864], "bfloat16"), Tensor([1, 131, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 131, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 131, 896], "float32"), Tensor([1, 131, 1], "float32"))
torch.Tensor.mul(Tensor([1, 133, 4864], "bfloat16"), Tensor([1, 133, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 133, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 133, 896], "float32"), Tensor([1, 133, 1], "float32"))
torch.Tensor.mul(Tensor([1, 134, 4864], "bfloat16"), Tensor([1, 134, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 134, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 134, 896], "float32"), Tensor([1, 134, 1], "float32"))
torch.Tensor.mul(Tensor([1, 14, 101, 64], "bfloat16"), Tensor([1, 1, 101, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 128, 64], "bfloat16"), Tensor([1, 1, 128, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 129, 64], "bfloat16"), Tensor([1, 1, 129, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 131, 64], "bfloat16"), Tensor([1, 1, 131, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 133, 64], "bfloat16"), Tensor([1, 1, 133, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 134, 64], "bfloat16"), Tensor([1, 1, 134, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 140, 64], "bfloat16"), Tensor([1, 1, 140, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 142, 64], "bfloat16"), Tensor([1, 1, 142, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 148, 64], "bfloat16"), Tensor([1, 1, 148, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 163, 64], "bfloat16"), Tensor([1, 1, 163, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 164, 64], "bfloat16"), Tensor([1, 1, 164, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 170, 64], "bfloat16"), Tensor([1, 1, 170, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 174, 64], "bfloat16"), Tensor([1, 1, 174, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 190, 64], "bfloat16"), Tensor([1, 1, 190, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 197, 64], "bfloat16"), Tensor([1, 1, 197, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 198, 64], "bfloat16"), Tensor([1, 1, 198, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 221, 64], "bfloat16"), Tensor([1, 1, 221, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 225, 64], "bfloat16"), Tensor([1, 1, 225, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 228, 64], "bfloat16"), Tensor([1, 1, 228, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 242, 64], "bfloat16"), Tensor([1, 1, 242, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 253, 64], "bfloat16"), Tensor([1, 1, 253, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 275, 64], "bfloat16"), Tensor([1, 1, 275, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 286, 64], "bfloat16"), Tensor([1, 1, 286, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 288, 64], "bfloat16"), Tensor([1, 1, 288, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 295, 64], "bfloat16"), Tensor([1, 1, 295, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 302, 64], "bfloat16"), Tensor([1, 1, 302, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 303, 64], "bfloat16"), Tensor([1, 1, 303, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 307, 64], "bfloat16"), Tensor([1, 1, 307, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 32, 64], "bfloat16"), Tensor([1, 1, 32, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 321, 64], "bfloat16"), Tensor([1, 1, 321, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 325, 64], "bfloat16"), Tensor([1, 1, 325, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 334, 64], "bfloat16"), Tensor([1, 1, 334, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 339, 64], "bfloat16"), Tensor([1, 1, 339, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 347, 64], "bfloat16"), Tensor([1, 1, 347, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 349, 64], "bfloat16"), Tensor([1, 1, 349, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 36, 64], "bfloat16"), Tensor([1, 1, 36, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 368, 64], "bfloat16"), Tensor([1, 1, 368, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 38, 64], "bfloat16"), Tensor([1, 1, 38, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 390, 64], "bfloat16"), Tensor([1, 1, 390, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 400, 64], "bfloat16"), Tensor([1, 1, 400, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 404, 64], "bfloat16"), Tensor([1, 1, 404, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 43, 64], "bfloat16"), Tensor([1, 1, 43, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 44, 64], "bfloat16"), Tensor([1, 1, 44, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 444, 64], "bfloat16"), Tensor([1, 1, 444, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 455, 64], "bfloat16"), Tensor([1, 1, 455, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 457, 64], "bfloat16"), Tensor([1, 1, 457, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 46, 64], "bfloat16"), Tensor([1, 1, 46, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 47, 64], "bfloat16"), Tensor([1, 1, 47, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 48, 64], "bfloat16"), Tensor([1, 1, 48, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 512, 64], "bfloat16"), Tensor([1, 1, 512, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 52, 64], "bfloat16"), Tensor([1, 1, 52, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 55, 64], "bfloat16"), Tensor([1, 1, 55, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 57, 64], "bfloat16"), Tensor([1, 1, 57, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 58, 64], "bfloat16"), Tensor([1, 1, 58, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 60, 64], "bfloat16"), Tensor([1, 1, 60, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 63, 64], "bfloat16"), Tensor([1, 1, 63, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 73, 64], "bfloat16"), Tensor([1, 1, 73, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 74, 64], "bfloat16"), Tensor([1, 1, 74, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 78, 64], "bfloat16"), Tensor([1, 1, 78, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 80, 64], "bfloat16"), Tensor([1, 1, 80, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 87, 64], "bfloat16"), Tensor([1, 1, 87, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 88, 64], "bfloat16"), Tensor([1, 1, 88, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 91, 64], "bfloat16"), Tensor([1, 1, 91, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 96, 64], "bfloat16"), Tensor([1, 1, 96, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 14, 97, 64], "bfloat16"), Tensor([1, 1, 97, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 140, 4864], "bfloat16"), Tensor([1, 140, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 140, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 140, 896], "float32"), Tensor([1, 140, 1], "float32"))
torch.Tensor.mul(Tensor([1, 142, 4864], "bfloat16"), Tensor([1, 142, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 142, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 142, 896], "float32"), Tensor([1, 142, 1], "float32"))
torch.Tensor.mul(Tensor([1, 148, 4864], "bfloat16"), Tensor([1, 148, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 148, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 148, 896], "float32"), Tensor([1, 148, 1], "float32"))
torch.Tensor.mul(Tensor([1, 163, 4864], "bfloat16"), Tensor([1, 163, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 163, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 163, 896], "float32"), Tensor([1, 163, 1], "float32"))
torch.Tensor.mul(Tensor([1, 164, 4864], "bfloat16"), Tensor([1, 164, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 164, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 164, 896], "float32"), Tensor([1, 164, 1], "float32"))
torch.Tensor.mul(Tensor([1, 170, 4864], "bfloat16"), Tensor([1, 170, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 170, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 170, 896], "float32"), Tensor([1, 170, 1], "float32"))
torch.Tensor.mul(Tensor([1, 174, 4864], "bfloat16"), Tensor([1, 174, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 174, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 174, 896], "float32"), Tensor([1, 174, 1], "float32"))
torch.Tensor.mul(Tensor([1, 190, 4864], "bfloat16"), Tensor([1, 190, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 190, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 190, 896], "float32"), Tensor([1, 190, 1], "float32"))
torch.Tensor.mul(Tensor([1, 197, 4864], "bfloat16"), Tensor([1, 197, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 197, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 197, 896], "float32"), Tensor([1, 197, 1], "float32"))
torch.Tensor.mul(Tensor([1, 198, 4864], "bfloat16"), Tensor([1, 198, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 198, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 198, 896], "float32"), Tensor([1, 198, 1], "float32"))
torch.Tensor.mul(Tensor([1, 2, 101, 64], "bfloat16"), Tensor([1, 1, 101, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 128, 64], "bfloat16"), Tensor([1, 1, 128, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 129, 64], "bfloat16"), Tensor([1, 1, 129, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 131, 64], "bfloat16"), Tensor([1, 1, 131, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 133, 64], "bfloat16"), Tensor([1, 1, 133, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 134, 64], "bfloat16"), Tensor([1, 1, 134, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 140, 64], "bfloat16"), Tensor([1, 1, 140, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 142, 64], "bfloat16"), Tensor([1, 1, 142, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 148, 64], "bfloat16"), Tensor([1, 1, 148, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 163, 64], "bfloat16"), Tensor([1, 1, 163, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 164, 64], "bfloat16"), Tensor([1, 1, 164, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 170, 64], "bfloat16"), Tensor([1, 1, 170, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 174, 64], "bfloat16"), Tensor([1, 1, 174, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 190, 64], "bfloat16"), Tensor([1, 1, 190, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 197, 64], "bfloat16"), Tensor([1, 1, 197, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 198, 64], "bfloat16"), Tensor([1, 1, 198, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 221, 64], "bfloat16"), Tensor([1, 1, 221, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 225, 64], "bfloat16"), Tensor([1, 1, 225, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 228, 64], "bfloat16"), Tensor([1, 1, 228, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 242, 64], "bfloat16"), Tensor([1, 1, 242, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 253, 64], "bfloat16"), Tensor([1, 1, 253, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 275, 64], "bfloat16"), Tensor([1, 1, 275, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 286, 64], "bfloat16"), Tensor([1, 1, 286, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 288, 64], "bfloat16"), Tensor([1, 1, 288, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 295, 64], "bfloat16"), Tensor([1, 1, 295, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 302, 64], "bfloat16"), Tensor([1, 1, 302, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 303, 64], "bfloat16"), Tensor([1, 1, 303, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 307, 64], "bfloat16"), Tensor([1, 1, 307, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 32, 64], "bfloat16"), Tensor([1, 1, 32, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 321, 64], "bfloat16"), Tensor([1, 1, 321, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 325, 64], "bfloat16"), Tensor([1, 1, 325, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 334, 64], "bfloat16"), Tensor([1, 1, 334, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 339, 64], "bfloat16"), Tensor([1, 1, 339, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 347, 64], "bfloat16"), Tensor([1, 1, 347, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 349, 64], "bfloat16"), Tensor([1, 1, 349, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 36, 64], "bfloat16"), Tensor([1, 1, 36, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 368, 64], "bfloat16"), Tensor([1, 1, 368, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 38, 64], "bfloat16"), Tensor([1, 1, 38, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 390, 64], "bfloat16"), Tensor([1, 1, 390, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 400, 64], "bfloat16"), Tensor([1, 1, 400, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 404, 64], "bfloat16"), Tensor([1, 1, 404, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 43, 64], "bfloat16"), Tensor([1, 1, 43, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 44, 64], "bfloat16"), Tensor([1, 1, 44, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 444, 64], "bfloat16"), Tensor([1, 1, 444, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 455, 64], "bfloat16"), Tensor([1, 1, 455, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 457, 64], "bfloat16"), Tensor([1, 1, 457, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 46, 64], "bfloat16"), Tensor([1, 1, 46, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 47, 64], "bfloat16"), Tensor([1, 1, 47, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 48, 64], "bfloat16"), Tensor([1, 1, 48, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 512, 64], "bfloat16"), Tensor([1, 1, 512, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 52, 64], "bfloat16"), Tensor([1, 1, 52, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 55, 64], "bfloat16"), Tensor([1, 1, 55, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 57, 64], "bfloat16"), Tensor([1, 1, 57, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 58, 64], "bfloat16"), Tensor([1, 1, 58, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 60, 64], "bfloat16"), Tensor([1, 1, 60, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 63, 64], "bfloat16"), Tensor([1, 1, 63, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 73, 64], "bfloat16"), Tensor([1, 1, 73, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 74, 64], "bfloat16"), Tensor([1, 1, 74, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 78, 64], "bfloat16"), Tensor([1, 1, 78, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 80, 64], "bfloat16"), Tensor([1, 1, 80, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 87, 64], "bfloat16"), Tensor([1, 1, 87, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 88, 64], "bfloat16"), Tensor([1, 1, 88, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 91, 64], "bfloat16"), Tensor([1, 1, 91, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 96, 64], "bfloat16"), Tensor([1, 1, 96, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 2, 97, 64], "bfloat16"), Tensor([1, 1, 97, 64], "bfloat16"))
torch.Tensor.mul(Tensor([1, 221, 4864], "bfloat16"), Tensor([1, 221, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 221, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 221, 896], "float32"), Tensor([1, 221, 1], "float32"))
torch.Tensor.mul(Tensor([1, 225, 4864], "bfloat16"), Tensor([1, 225, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 225, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 225, 896], "float32"), Tensor([1, 225, 1], "float32"))
torch.Tensor.mul(Tensor([1, 228, 4864], "bfloat16"), Tensor([1, 228, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 228, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 228, 896], "float32"), Tensor([1, 228, 1], "float32"))
torch.Tensor.mul(Tensor([1, 242, 4864], "bfloat16"), Tensor([1, 242, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 242, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 242, 896], "float32"), Tensor([1, 242, 1], "float32"))
torch.Tensor.mul(Tensor([1, 253, 4864], "bfloat16"), Tensor([1, 253, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 253, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 253, 896], "float32"), Tensor([1, 253, 1], "float32"))
torch.Tensor.mul(Tensor([1, 275, 4864], "bfloat16"), Tensor([1, 275, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 275, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 275, 896], "float32"), Tensor([1, 275, 1], "float32"))
torch.Tensor.mul(Tensor([1, 286, 4864], "bfloat16"), Tensor([1, 286, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 286, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 286, 896], "float32"), Tensor([1, 286, 1], "float32"))
torch.Tensor.mul(Tensor([1, 288, 4864], "bfloat16"), Tensor([1, 288, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 288, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 288, 896], "float32"), Tensor([1, 288, 1], "float32"))
torch.Tensor.mul(Tensor([1, 295, 4864], "bfloat16"), Tensor([1, 295, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 295, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 295, 896], "float32"), Tensor([1, 295, 1], "float32"))
torch.Tensor.mul(Tensor([1, 302, 4864], "bfloat16"), Tensor([1, 302, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 302, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 302, 896], "float32"), Tensor([1, 302, 1], "float32"))
torch.Tensor.mul(Tensor([1, 303, 4864], "bfloat16"), Tensor([1, 303, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 303, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 303, 896], "float32"), Tensor([1, 303, 1], "float32"))
torch.Tensor.mul(Tensor([1, 307, 4864], "bfloat16"), Tensor([1, 307, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 307, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 307, 896], "float32"), Tensor([1, 307, 1], "float32"))
torch.Tensor.mul(Tensor([1, 32, 4864], "bfloat16"), Tensor([1, 32, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 32, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 32, 896], "float32"), Tensor([1, 32, 1], "float32"))
torch.Tensor.mul(Tensor([1, 321, 4864], "bfloat16"), Tensor([1, 321, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 321, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 321, 896], "float32"), Tensor([1, 321, 1], "float32"))
torch.Tensor.mul(Tensor([1, 325, 4864], "bfloat16"), Tensor([1, 325, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 325, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 325, 896], "float32"), Tensor([1, 325, 1], "float32"))
torch.Tensor.mul(Tensor([1, 334, 4864], "bfloat16"), Tensor([1, 334, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 334, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 334, 896], "float32"), Tensor([1, 334, 1], "float32"))
torch.Tensor.mul(Tensor([1, 339, 4864], "bfloat16"), Tensor([1, 339, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 339, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 339, 896], "float32"), Tensor([1, 339, 1], "float32"))
torch.Tensor.mul(Tensor([1, 347, 4864], "bfloat16"), Tensor([1, 347, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 347, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 347, 896], "float32"), Tensor([1, 347, 1], "float32"))
torch.Tensor.mul(Tensor([1, 349, 4864], "bfloat16"), Tensor([1, 349, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 349, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 349, 896], "float32"), Tensor([1, 349, 1], "float32"))
torch.Tensor.mul(Tensor([1, 36, 4864], "bfloat16"), Tensor([1, 36, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 36, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 36, 896], "float32"), Tensor([1, 36, 1], "float32"))
torch.Tensor.mul(Tensor([1, 368, 4864], "bfloat16"), Tensor([1, 368, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 368, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 368, 896], "float32"), Tensor([1, 368, 1], "float32"))
torch.Tensor.mul(Tensor([1, 38, 4864], "bfloat16"), Tensor([1, 38, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 38, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 38, 896], "float32"), Tensor([1, 38, 1], "float32"))
torch.Tensor.mul(Tensor([1, 390, 4864], "bfloat16"), Tensor([1, 390, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 390, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 390, 896], "float32"), Tensor([1, 390, 1], "float32"))
torch.Tensor.mul(Tensor([1, 400, 4864], "bfloat16"), Tensor([1, 400, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 400, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 400, 896], "float32"), Tensor([1, 400, 1], "float32"))
torch.Tensor.mul(Tensor([1, 404, 4864], "bfloat16"), Tensor([1, 404, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 404, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 404, 896], "float32"), Tensor([1, 404, 1], "float32"))
torch.Tensor.mul(Tensor([1, 43, 4864], "bfloat16"), Tensor([1, 43, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 43, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 43, 896], "float32"), Tensor([1, 43, 1], "float32"))
torch.Tensor.mul(Tensor([1, 44, 4864], "bfloat16"), Tensor([1, 44, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 44, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 44, 896], "float32"), Tensor([1, 44, 1], "float32"))
torch.Tensor.mul(Tensor([1, 444, 4864], "bfloat16"), Tensor([1, 444, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 444, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 444, 896], "float32"), Tensor([1, 444, 1], "float32"))
torch.Tensor.mul(Tensor([1, 455, 4864], "bfloat16"), Tensor([1, 455, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 455, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 455, 896], "float32"), Tensor([1, 455, 1], "float32"))
torch.Tensor.mul(Tensor([1, 457, 4864], "bfloat16"), Tensor([1, 457, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 457, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 457, 896], "float32"), Tensor([1, 457, 1], "float32"))
torch.Tensor.mul(Tensor([1, 46, 4864], "bfloat16"), Tensor([1, 46, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 46, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 46, 896], "float32"), Tensor([1, 46, 1], "float32"))
torch.Tensor.mul(Tensor([1, 47, 4864], "bfloat16"), Tensor([1, 47, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 47, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 47, 896], "float32"), Tensor([1, 47, 1], "float32"))
torch.Tensor.mul(Tensor([1, 48, 4864], "bfloat16"), Tensor([1, 48, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 48, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 48, 896], "float32"), Tensor([1, 48, 1], "float32"))
torch.Tensor.mul(Tensor([1, 512, 4864], "bfloat16"), Tensor([1, 512, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 512, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 512, 896], "float32"), Tensor([1, 512, 1], "float32"))
torch.Tensor.mul(Tensor([1, 52, 4864], "bfloat16"), Tensor([1, 52, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 52, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 52, 896], "float32"), Tensor([1, 52, 1], "float32"))
torch.Tensor.mul(Tensor([1, 55, 4864], "bfloat16"), Tensor([1, 55, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 55, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 55, 896], "float32"), Tensor([1, 55, 1], "float32"))
torch.Tensor.mul(Tensor([1, 57, 4864], "bfloat16"), Tensor([1, 57, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 57, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 57, 896], "float32"), Tensor([1, 57, 1], "float32"))
torch.Tensor.mul(Tensor([1, 58, 4864], "bfloat16"), Tensor([1, 58, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 58, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 58, 896], "float32"), Tensor([1, 58, 1], "float32"))
torch.Tensor.mul(Tensor([1, 60, 4864], "bfloat16"), Tensor([1, 60, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 60, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 60, 896], "float32"), Tensor([1, 60, 1], "float32"))
torch.Tensor.mul(Tensor([1, 63, 4864], "bfloat16"), Tensor([1, 63, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 63, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 63, 896], "float32"), Tensor([1, 63, 1], "float32"))
torch.Tensor.mul(Tensor([1, 73, 4864], "bfloat16"), Tensor([1, 73, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 73, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 73, 896], "float32"), Tensor([1, 73, 1], "float32"))
torch.Tensor.mul(Tensor([1, 74, 4864], "bfloat16"), Tensor([1, 74, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 74, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 74, 896], "float32"), Tensor([1, 74, 1], "float32"))
torch.Tensor.mul(Tensor([1, 78, 4864], "bfloat16"), Tensor([1, 78, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 78, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 78, 896], "float32"), Tensor([1, 78, 1], "float32"))
torch.Tensor.mul(Tensor([1, 80, 4864], "bfloat16"), Tensor([1, 80, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 80, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 80, 896], "float32"), Tensor([1, 80, 1], "float32"))
torch.Tensor.mul(Tensor([1, 87, 4864], "bfloat16"), Tensor([1, 87, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 87, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 87, 896], "float32"), Tensor([1, 87, 1], "float32"))
torch.Tensor.mul(Tensor([1, 88, 4864], "bfloat16"), Tensor([1, 88, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 88, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 88, 896], "float32"), Tensor([1, 88, 1], "float32"))
torch.Tensor.mul(Tensor([1, 91, 4864], "bfloat16"), Tensor([1, 91, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 91, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 91, 896], "float32"), Tensor([1, 91, 1], "float32"))
torch.Tensor.mul(Tensor([1, 96, 4864], "bfloat16"), Tensor([1, 96, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 96, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 96, 896], "float32"), Tensor([1, 96, 1], "float32"))
torch.Tensor.mul(Tensor([1, 97, 4864], "bfloat16"), Tensor([1, 97, 4864], "bfloat16"))
torch.Tensor.mul(Tensor([1, 97, 64], "float32"), 1.0)
torch.Tensor.mul(Tensor([1, 97, 896], "float32"), Tensor([1, 97, 1], "float32"))
torch.Tensor.ndim.__get__(Tensor([1, 101], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 128], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 129], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 131], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 133], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 134], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 140], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 142], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 148], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 163], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 164], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 170], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 174], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 190], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 197], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 198], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 221], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 225], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 228], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 242], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 253], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 275], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 286], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 288], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 295], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 302], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 303], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 307], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 321], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 325], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 32], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 334], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 339], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 347], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 349], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 368], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 36], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 38], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 390], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 400], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 404], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 43], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 444], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 44], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 455], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 457], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 46], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 47], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 48], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 512], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 52], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 55], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 57], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 58], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 60], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 63], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 73], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 74], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 78], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 80], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 87], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 88], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 91], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 96], "int64"))
torch.Tensor.ndim.__get__(Tensor([1, 97], "int64"))
torch.Tensor.ne(Tensor([1, 101], "int64"), -100)
torch.Tensor.ne(Tensor([1, 128], "int64"), -100)
torch.Tensor.ne(Tensor([1, 129], "int64"), -100)
torch.Tensor.ne(Tensor([1, 131], "int64"), -100)
torch.Tensor.ne(Tensor([1, 133], "int64"), -100)
torch.Tensor.ne(Tensor([1, 134], "int64"), -100)
torch.Tensor.ne(Tensor([1, 140], "int64"), -100)
torch.Tensor.ne(Tensor([1, 142], "int64"), -100)
torch.Tensor.ne(Tensor([1, 148], "int64"), -100)
torch.Tensor.ne(Tensor([1, 163], "int64"), -100)
torch.Tensor.ne(Tensor([1, 164], "int64"), -100)
torch.Tensor.ne(Tensor([1, 170], "int64"), -100)
torch.Tensor.ne(Tensor([1, 174], "int64"), -100)
torch.Tensor.ne(Tensor([1, 190], "int64"), -100)
torch.Tensor.ne(Tensor([1, 197], "int64"), -100)
torch.Tensor.ne(Tensor([1, 198], "int64"), -100)
torch.Tensor.ne(Tensor([1, 221], "int64"), -100)
torch.Tensor.ne(Tensor([1, 225], "int64"), -100)
torch.Tensor.ne(Tensor([1, 228], "int64"), -100)
torch.Tensor.ne(Tensor([1, 242], "int64"), -100)
torch.Tensor.ne(Tensor([1, 253], "int64"), -100)
torch.Tensor.ne(Tensor([1, 275], "int64"), -100)
torch.Tensor.ne(Tensor([1, 286], "int64"), -100)
torch.Tensor.ne(Tensor([1, 288], "int64"), -100)
torch.Tensor.ne(Tensor([1, 295], "int64"), -100)
torch.Tensor.ne(Tensor([1, 302], "int64"), -100)
torch.Tensor.ne(Tensor([1, 303], "int64"), -100)
torch.Tensor.ne(Tensor([1, 307], "int64"), -100)
torch.Tensor.ne(Tensor([1, 321], "int64"), -100)
torch.Tensor.ne(Tensor([1, 325], "int64"), -100)
torch.Tensor.ne(Tensor([1, 32], "int64"), -100)
torch.Tensor.ne(Tensor([1, 334], "int64"), -100)
torch.Tensor.ne(Tensor([1, 339], "int64"), -100)
torch.Tensor.ne(Tensor([1, 347], "int64"), -100)
torch.Tensor.ne(Tensor([1, 349], "int64"), -100)
torch.Tensor.ne(Tensor([1, 368], "int64"), -100)
torch.Tensor.ne(Tensor([1, 36], "int64"), -100)
torch.Tensor.ne(Tensor([1, 38], "int64"), -100)
torch.Tensor.ne(Tensor([1, 390], "int64"), -100)
torch.Tensor.ne(Tensor([1, 400], "int64"), -100)
torch.Tensor.ne(Tensor([1, 404], "int64"), -100)
torch.Tensor.ne(Tensor([1, 43], "int64"), -100)
torch.Tensor.ne(Tensor([1, 444], "int64"), -100)
torch.Tensor.ne(Tensor([1, 44], "int64"), -100)
torch.Tensor.ne(Tensor([1, 455], "int64"), -100)
torch.Tensor.ne(Tensor([1, 457], "int64"), -100)
torch.Tensor.ne(Tensor([1, 46], "int64"), -100)
torch.Tensor.ne(Tensor([1, 47], "int64"), -100)
torch.Tensor.ne(Tensor([1, 48], "int64"), -100)
torch.Tensor.ne(Tensor([1, 512], "int64"), -100)
torch.Tensor.ne(Tensor([1, 52], "int64"), -100)
torch.Tensor.ne(Tensor([1, 55], "int64"), -100)
torch.Tensor.ne(Tensor([1, 57], "int64"), -100)
torch.Tensor.ne(Tensor([1, 58], "int64"), -100)
torch.Tensor.ne(Tensor([1, 60], "int64"), -100)
torch.Tensor.ne(Tensor([1, 63], "int64"), -100)
torch.Tensor.ne(Tensor([1, 73], "int64"), -100)
torch.Tensor.ne(Tensor([1, 74], "int64"), -100)
torch.Tensor.ne(Tensor([1, 78], "int64"), -100)
torch.Tensor.ne(Tensor([1, 80], "int64"), -100)
torch.Tensor.ne(Tensor([1, 87], "int64"), -100)
torch.Tensor.ne(Tensor([1, 88], "int64"), -100)
torch.Tensor.ne(Tensor([1, 91], "int64"), -100)
torch.Tensor.ne(Tensor([1, 96], "int64"), -100)
torch.Tensor.ne(Tensor([1, 97], "int64"), -100)
torch.Tensor.neg(Tensor([1, 14, 101, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 128, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 129, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 131, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 133, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 134, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 140, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 142, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 148, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 163, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 164, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 170, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 174, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 190, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 197, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 198, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 221, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 225, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 228, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 242, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 253, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 275, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 286, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 288, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 295, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 302, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 303, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 307, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 32, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 321, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 325, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 334, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 339, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 347, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 349, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 36, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 368, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 38, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 390, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 400, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 404, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 43, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 44, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 444, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 455, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 457, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 46, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 47, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 48, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 512, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 52, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 55, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 57, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 58, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 60, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 63, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 73, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 74, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 78, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 80, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 87, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 88, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 91, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 96, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 14, 97, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 101, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 128, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 129, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 131, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 133, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 134, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 140, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 142, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 148, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 163, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 164, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 170, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 174, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 190, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 197, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 198, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 221, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 225, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 228, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 242, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 253, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 275, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 286, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 288, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 295, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 302, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 303, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 307, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 32, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 321, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 325, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 334, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 339, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 347, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 349, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 36, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 368, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 38, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 390, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 400, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 404, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 43, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 44, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 444, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 455, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 457, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 46, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 47, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 48, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 512, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 52, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 55, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 57, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 58, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 60, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 63, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 73, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 74, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 78, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 80, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 87, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 88, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 91, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 96, 32], "bfloat16"))
torch.Tensor.neg(Tensor([1, 2, 97, 32], "bfloat16"))
torch.Tensor.numel("<Unserializable: Parameter>")
torch.Tensor.numel(Tensor([1, 101], "int64"))
torch.Tensor.numel(Tensor([1, 128], "int64"))
torch.Tensor.numel(Tensor([1, 129], "int64"))
torch.Tensor.numel(Tensor([1, 131], "int64"))
torch.Tensor.numel(Tensor([1, 133], "int64"))
torch.Tensor.numel(Tensor([1, 134], "int64"))
torch.Tensor.numel(Tensor([1, 140], "int64"))
torch.Tensor.numel(Tensor([1, 142], "int64"))
torch.Tensor.numel(Tensor([1, 148], "int64"))
torch.Tensor.numel(Tensor([1, 163], "int64"))
torch.Tensor.numel(Tensor([1, 164], "int64"))
torch.Tensor.numel(Tensor([1, 170], "int64"))
torch.Tensor.numel(Tensor([1, 174], "int64"))
torch.Tensor.numel(Tensor([1, 190], "int64"))
torch.Tensor.numel(Tensor([1, 197], "int64"))
torch.Tensor.numel(Tensor([1, 198], "int64"))
torch.Tensor.numel(Tensor([1, 221], "int64"))
torch.Tensor.numel(Tensor([1, 225], "int64"))
torch.Tensor.numel(Tensor([1, 228], "int64"))
torch.Tensor.numel(Tensor([1, 242], "int64"))
torch.Tensor.numel(Tensor([1, 253], "int64"))
torch.Tensor.numel(Tensor([1, 275], "int64"))
torch.Tensor.numel(Tensor([1, 286], "int64"))
torch.Tensor.numel(Tensor([1, 288], "int64"))
torch.Tensor.numel(Tensor([1, 295], "int64"))
torch.Tensor.numel(Tensor([1, 302], "int64"))
torch.Tensor.numel(Tensor([1, 303], "int64"))
torch.Tensor.numel(Tensor([1, 307], "int64"))
torch.Tensor.numel(Tensor([1, 321], "int64"))
torch.Tensor.numel(Tensor([1, 325], "int64"))
torch.Tensor.numel(Tensor([1, 32], "int64"))
torch.Tensor.numel(Tensor([1, 334], "int64"))
torch.Tensor.numel(Tensor([1, 339], "int64"))
torch.Tensor.numel(Tensor([1, 347], "int64"))
torch.Tensor.numel(Tensor([1, 349], "int64"))
torch.Tensor.numel(Tensor([1, 368], "int64"))
torch.Tensor.numel(Tensor([1, 36], "int64"))
torch.Tensor.numel(Tensor([1, 38], "int64"))
torch.Tensor.numel(Tensor([1, 390], "int64"))
torch.Tensor.numel(Tensor([1, 400], "int64"))
torch.Tensor.numel(Tensor([1, 404], "int64"))
torch.Tensor.numel(Tensor([1, 43], "int64"))
torch.Tensor.numel(Tensor([1, 444], "int64"))
torch.Tensor.numel(Tensor([1, 44], "int64"))
torch.Tensor.numel(Tensor([1, 455], "int64"))
torch.Tensor.numel(Tensor([1, 457], "int64"))
torch.Tensor.numel(Tensor([1, 46], "int64"))
torch.Tensor.numel(Tensor([1, 47], "int64"))
torch.Tensor.numel(Tensor([1, 48], "int64"))
torch.Tensor.numel(Tensor([1, 512], "int64"))
torch.Tensor.numel(Tensor([1, 52], "int64"))
torch.Tensor.numel(Tensor([1, 55], "int64"))
torch.Tensor.numel(Tensor([1, 57], "int64"))
torch.Tensor.numel(Tensor([1, 58], "int64"))
torch.Tensor.numel(Tensor([1, 60], "int64"))
torch.Tensor.numel(Tensor([1, 63], "int64"))
torch.Tensor.numel(Tensor([1, 73], "int64"))
torch.Tensor.numel(Tensor([1, 74], "int64"))
torch.Tensor.numel(Tensor([1, 78], "int64"))
torch.Tensor.numel(Tensor([1, 80], "int64"))
torch.Tensor.numel(Tensor([1, 87], "int64"))
torch.Tensor.numel(Tensor([1, 88], "int64"))
torch.Tensor.numel(Tensor([1, 91], "int64"))
torch.Tensor.numel(Tensor([1, 96], "int64"))
torch.Tensor.numel(Tensor([1, 97], "int64"))
torch.Tensor.numel(Tensor([151936, 896], "bfloat16"))
torch.Tensor.numel(Tensor([32], "float32"))
torch.Tensor.pin_memory(Tensor([1, 101], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 105], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 128], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 129], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 131], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 133], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 134], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 140], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 142], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 148], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 163], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 164], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 170], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 174], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 190], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 197], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 198], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 221], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 225], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 228], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 242], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 253], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 275], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 286], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 288], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 295], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 302], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 303], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 307], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 321], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 325], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 32], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 334], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 339], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 347], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 349], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 368], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 36], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 38], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 390], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 400], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 404], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 43], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 444], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 44], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 455], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 457], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 46], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 47], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 48], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 512], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 52], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 55], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 57], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 58], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 60], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 63], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 73], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 74], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 78], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 80], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 87], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 88], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 91], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 96], "int64"), None)
torch.Tensor.pin_memory(Tensor([1, 97], "int64"), None)
torch.Tensor.pow(Tensor([1, 101, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 128, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 129, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 131, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 133, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 134, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 140, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 142, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 148, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 163, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 164, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 170, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 174, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 190, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 197, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 198, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 221, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 225, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 228, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 242, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 253, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 275, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 286, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 288, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 295, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 302, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 303, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 307, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 32, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 321, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 325, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 334, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 339, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 347, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 349, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 36, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 368, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 38, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 390, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 400, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 404, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 43, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 44, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 444, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 455, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 457, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 46, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 47, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 48, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 512, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 52, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 55, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 57, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 58, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 60, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 63, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 73, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 74, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 78, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 80, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 87, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 88, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 91, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 96, 896], "float32"), 2)
torch.Tensor.pow(Tensor([1, 97, 896], "float32"), 2)
torch.Tensor.random_(Tensor([], "int64"), generator=None)
torch.Tensor.requires_grad.__get__("<Unserializable: Parameter>")
torch.Tensor.requires_grad.__get__(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([128], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([16], "uint8"))
torch.Tensor.requires_grad.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([5056], "uint8"))
torch.Tensor.requires_grad.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([896], "bfloat16"))
torch.Tensor.requires_grad.__get__(Tensor([], "float32"))
torch.Tensor.reshape(Tensor([1, 101, 14, 64], "bfloat16"), 1, 101, -1)
torch.Tensor.reshape(Tensor([1, 128, 14, 64], "bfloat16"), 1, 128, -1)
torch.Tensor.reshape(Tensor([1, 129, 14, 64], "bfloat16"), 1, 129, -1)
torch.Tensor.reshape(Tensor([1, 131, 14, 64], "bfloat16"), 1, 131, -1)
torch.Tensor.reshape(Tensor([1, 133, 14, 64], "bfloat16"), 1, 133, -1)
torch.Tensor.reshape(Tensor([1, 134, 14, 64], "bfloat16"), 1, 134, -1)
torch.Tensor.reshape(Tensor([1, 140, 14, 64], "bfloat16"), 1, 140, -1)
torch.Tensor.reshape(Tensor([1, 142, 14, 64], "bfloat16"), 1, 142, -1)
torch.Tensor.reshape(Tensor([1, 148, 14, 64], "bfloat16"), 1, 148, -1)
torch.Tensor.reshape(Tensor([1, 163, 14, 64], "bfloat16"), 1, 163, -1)
torch.Tensor.reshape(Tensor([1, 164, 14, 64], "bfloat16"), 1, 164, -1)
torch.Tensor.reshape(Tensor([1, 170, 14, 64], "bfloat16"), 1, 170, -1)
torch.Tensor.reshape(Tensor([1, 174, 14, 64], "bfloat16"), 1, 174, -1)
torch.Tensor.reshape(Tensor([1, 190, 14, 64], "bfloat16"), 1, 190, -1)
torch.Tensor.reshape(Tensor([1, 197, 14, 64], "bfloat16"), 1, 197, -1)
torch.Tensor.reshape(Tensor([1, 198, 14, 64], "bfloat16"), 1, 198, -1)
torch.Tensor.reshape(Tensor([1, 221, 14, 64], "bfloat16"), 1, 221, -1)
torch.Tensor.reshape(Tensor([1, 225, 14, 64], "bfloat16"), 1, 225, -1)
torch.Tensor.reshape(Tensor([1, 228, 14, 64], "bfloat16"), 1, 228, -1)
torch.Tensor.reshape(Tensor([1, 242, 14, 64], "bfloat16"), 1, 242, -1)
torch.Tensor.reshape(Tensor([1, 253, 14, 64], "bfloat16"), 1, 253, -1)
torch.Tensor.reshape(Tensor([1, 275, 14, 64], "bfloat16"), 1, 275, -1)
torch.Tensor.reshape(Tensor([1, 286, 14, 64], "bfloat16"), 1, 286, -1)
torch.Tensor.reshape(Tensor([1, 288, 14, 64], "bfloat16"), 1, 288, -1)
torch.Tensor.reshape(Tensor([1, 295, 14, 64], "bfloat16"), 1, 295, -1)
torch.Tensor.reshape(Tensor([1, 302, 14, 64], "bfloat16"), 1, 302, -1)
torch.Tensor.reshape(Tensor([1, 303, 14, 64], "bfloat16"), 1, 303, -1)
torch.Tensor.reshape(Tensor([1, 307, 14, 64], "bfloat16"), 1, 307, -1)
torch.Tensor.reshape(Tensor([1, 32, 14, 64], "bfloat16"), 1, 32, -1)
torch.Tensor.reshape(Tensor([1, 321, 14, 64], "bfloat16"), 1, 321, -1)
torch.Tensor.reshape(Tensor([1, 325, 14, 64], "bfloat16"), 1, 325, -1)
torch.Tensor.reshape(Tensor([1, 334, 14, 64], "bfloat16"), 1, 334, -1)
torch.Tensor.reshape(Tensor([1, 339, 14, 64], "bfloat16"), 1, 339, -1)
torch.Tensor.reshape(Tensor([1, 347, 14, 64], "bfloat16"), 1, 347, -1)
torch.Tensor.reshape(Tensor([1, 349, 14, 64], "bfloat16"), 1, 349, -1)
torch.Tensor.reshape(Tensor([1, 36, 14, 64], "bfloat16"), 1, 36, -1)
torch.Tensor.reshape(Tensor([1, 368, 14, 64], "bfloat16"), 1, 368, -1)
torch.Tensor.reshape(Tensor([1, 38, 14, 64], "bfloat16"), 1, 38, -1)
torch.Tensor.reshape(Tensor([1, 390, 14, 64], "bfloat16"), 1, 390, -1)
torch.Tensor.reshape(Tensor([1, 400, 14, 64], "bfloat16"), 1, 400, -1)
torch.Tensor.reshape(Tensor([1, 404, 14, 64], "bfloat16"), 1, 404, -1)
torch.Tensor.reshape(Tensor([1, 43, 14, 64], "bfloat16"), 1, 43, -1)
torch.Tensor.reshape(Tensor([1, 44, 14, 64], "bfloat16"), 1, 44, -1)
torch.Tensor.reshape(Tensor([1, 444, 14, 64], "bfloat16"), 1, 444, -1)
torch.Tensor.reshape(Tensor([1, 455, 14, 64], "bfloat16"), 1, 455, -1)
torch.Tensor.reshape(Tensor([1, 457, 14, 64], "bfloat16"), 1, 457, -1)
torch.Tensor.reshape(Tensor([1, 46, 14, 64], "bfloat16"), 1, 46, -1)
torch.Tensor.reshape(Tensor([1, 47, 14, 64], "bfloat16"), 1, 47, -1)
torch.Tensor.reshape(Tensor([1, 48, 14, 64], "bfloat16"), 1, 48, -1)
torch.Tensor.reshape(Tensor([1, 512, 14, 64], "bfloat16"), 1, 512, -1)
torch.Tensor.reshape(Tensor([1, 52, 14, 64], "bfloat16"), 1, 52, -1)
torch.Tensor.reshape(Tensor([1, 55, 14, 64], "bfloat16"), 1, 55, -1)
torch.Tensor.reshape(Tensor([1, 57, 14, 64], "bfloat16"), 1, 57, -1)
torch.Tensor.reshape(Tensor([1, 58, 14, 64], "bfloat16"), 1, 58, -1)
torch.Tensor.reshape(Tensor([1, 60, 14, 64], "bfloat16"), 1, 60, -1)
torch.Tensor.reshape(Tensor([1, 63, 14, 64], "bfloat16"), 1, 63, -1)
torch.Tensor.reshape(Tensor([1, 73, 14, 64], "bfloat16"), 1, 73, -1)
torch.Tensor.reshape(Tensor([1, 74, 14, 64], "bfloat16"), 1, 74, -1)
torch.Tensor.reshape(Tensor([1, 78, 14, 64], "bfloat16"), 1, 78, -1)
torch.Tensor.reshape(Tensor([1, 80, 14, 64], "bfloat16"), 1, 80, -1)
torch.Tensor.reshape(Tensor([1, 87, 14, 64], "bfloat16"), 1, 87, -1)
torch.Tensor.reshape(Tensor([1, 88, 14, 64], "bfloat16"), 1, 88, -1)
torch.Tensor.reshape(Tensor([1, 91, 14, 64], "bfloat16"), 1, 91, -1)
torch.Tensor.reshape(Tensor([1, 96, 14, 64], "bfloat16"), 1, 96, -1)
torch.Tensor.reshape(Tensor([1, 97, 14, 64], "bfloat16"), 1, 97, -1)
torch.Tensor.reshape(Tensor([114688], "bfloat16"), list[128, 896])
torch.Tensor.reshape(Tensor([128], "bfloat16"), list[128])
torch.Tensor.reshape(Tensor([136134656], "bfloat16"), list[151936, 896])
torch.Tensor.reshape(Tensor([4358144], "bfloat16"), list[4864, 896])
torch.Tensor.reshape(Tensor([4358144], "bfloat16"), list[896, 4864])
torch.Tensor.reshape(Tensor([802816], "bfloat16"), list[896, 896])
torch.Tensor.reshape(Tensor([896], "bfloat16"), list[896])
torch.Tensor.shape.__get__("<Unserializable: Parameter>")
torch.Tensor.shape.__get__(Tensor([1, 101, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 101], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 101], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 105], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 128, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 128], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 128], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 129, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 129], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 129], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 131, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 131], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 131], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 133, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 133], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 133], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 134, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 134], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 134], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 14, 101, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 128, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 129, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 131, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 133, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 134, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 140, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 142, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 148, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 163, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 164, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 170, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 174, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 190, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 197, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 198, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 221, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 225, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 228, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 242, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 253, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 275, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 286, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 288, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 295, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 302, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 303, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 307, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 32, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 321, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 325, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 334, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 339, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 347, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 349, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 36, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 368, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 38, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 390, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 400, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 404, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 43, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 44, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 444, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 455, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 457, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 46, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 47, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 48, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 512, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 52, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 55, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 57, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 58, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 60, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 63, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 73, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 74, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 78, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 80, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 87, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 88, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 91, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 96, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 14, 97, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 140, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 140], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 140], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 142, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 142], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 142], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 148, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 148], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 148], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 163, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 163], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 163], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 164, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 164], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 164], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 170, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 170], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 170], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 174, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 174], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 174], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 190, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 190], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 190], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 197, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 197], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 197], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 198, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 198], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 198], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 2, 101, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 128, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 129, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 131, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 133, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 134, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 140, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 142, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 148, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 163, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 164, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 170, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 174, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 190, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 197, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 198, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 221, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 225, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 228, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 242, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 253, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 275, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 286, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 288, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 295, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 302, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 303, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 307, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 32, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 321, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 325, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 334, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 339, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 347, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 349, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 36, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 368, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 38, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 390, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 400, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 404, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 43, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 44, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 444, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 455, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 457, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 46, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 47, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 48, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 512, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 52, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 55, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 57, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 58, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 60, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 63, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 73, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 74, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 78, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 80, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 87, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 88, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 91, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 96, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 2, 97, 64], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 221, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 221], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 221], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 225, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 225], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 225], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 228, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 228], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 228], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 242, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 242], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 242], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 253, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 253], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 253], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 275, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 275], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 275], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 286, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 286], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 286], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 288, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 288], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 288], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 295, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 295], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 295], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 302, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 302], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 302], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 303, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 303], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 303], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 307, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 307], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 307], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 32, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 321, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 321], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 321], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 325, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 325], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 325], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 32], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 32], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 334, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 334], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 334], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 339, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 339], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 339], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 347, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 347], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 347], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 349, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 349], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 349], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 36, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 368, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 368], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 368], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 36], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 36], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 38, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 38], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 38], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 390, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 390], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 390], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 400, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 400], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 400], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 404, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 404], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 404], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 43, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 43], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 43], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 44, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 444, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 444], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 444], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 44], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 44], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 455, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 455], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 455], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 457, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 457], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 457], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 46, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 46], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 46], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 47, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 47], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 47], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 48, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 48], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 48], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 512, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 512], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 512], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 52, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 52], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 52], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 55, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 55], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 55], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 57, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 57], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 57], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 58, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 58], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 58], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 60, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 60], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 60], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 63, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 63], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 63], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 73, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 73], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 73], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 74, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 74], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 74], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 78, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 78], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 78], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 80, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 80], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 80], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 87, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 87], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 87], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 88, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 88], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 88], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 91, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 91], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 91], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 96, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 96], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 96], "int64"))
torch.Tensor.shape.__get__(Tensor([1, 97, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([1, 97], "bool"))
torch.Tensor.shape.__get__(Tensor([1, 97], "int64"))
torch.Tensor.shape.__get__(Tensor([101], "int64"))
torch.Tensor.shape.__get__(Tensor([128, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([128], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([128], "int64"))
torch.Tensor.shape.__get__(Tensor([129], "int64"))
torch.Tensor.shape.__get__(Tensor([131], "int64"))
torch.Tensor.shape.__get__(Tensor([133], "int64"))
torch.Tensor.shape.__get__(Tensor([134], "int64"))
torch.Tensor.shape.__get__(Tensor([140], "int64"))
torch.Tensor.shape.__get__(Tensor([142], "int64"))
torch.Tensor.shape.__get__(Tensor([148], "int64"))
torch.Tensor.shape.__get__(Tensor([151936, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([163], "int64"))
torch.Tensor.shape.__get__(Tensor([164], "int64"))
torch.Tensor.shape.__get__(Tensor([170], "int64"))
torch.Tensor.shape.__get__(Tensor([174], "int64"))
torch.Tensor.shape.__get__(Tensor([190], "int64"))
torch.Tensor.shape.__get__(Tensor([197], "int64"))
torch.Tensor.shape.__get__(Tensor([198], "int64"))
torch.Tensor.shape.__get__(Tensor([221], "int64"))
torch.Tensor.shape.__get__(Tensor([225], "int64"))
torch.Tensor.shape.__get__(Tensor([228], "int64"))
torch.Tensor.shape.__get__(Tensor([242], "int64"))
torch.Tensor.shape.__get__(Tensor([253], "int64"))
torch.Tensor.shape.__get__(Tensor([275], "int64"))
torch.Tensor.shape.__get__(Tensor([286], "int64"))
torch.Tensor.shape.__get__(Tensor([288], "int64"))
torch.Tensor.shape.__get__(Tensor([295], "int64"))
torch.Tensor.shape.__get__(Tensor([302], "int64"))
torch.Tensor.shape.__get__(Tensor([303], "int64"))
torch.Tensor.shape.__get__(Tensor([307], "int64"))
torch.Tensor.shape.__get__(Tensor([321], "int64"))
torch.Tensor.shape.__get__(Tensor([325], "int64"))
torch.Tensor.shape.__get__(Tensor([32], "int64"))
torch.Tensor.shape.__get__(Tensor([334], "int64"))
torch.Tensor.shape.__get__(Tensor([339], "int64"))
torch.Tensor.shape.__get__(Tensor([347], "int64"))
torch.Tensor.shape.__get__(Tensor([349], "int64"))
torch.Tensor.shape.__get__(Tensor([368], "int64"))
torch.Tensor.shape.__get__(Tensor([36], "int64"))
torch.Tensor.shape.__get__(Tensor([38], "int64"))
torch.Tensor.shape.__get__(Tensor([390], "int64"))
torch.Tensor.shape.__get__(Tensor([400], "int64"))
torch.Tensor.shape.__get__(Tensor([404], "int64"))
torch.Tensor.shape.__get__(Tensor([43], "int64"))
torch.Tensor.shape.__get__(Tensor([444], "int64"))
torch.Tensor.shape.__get__(Tensor([44], "int64"))
torch.Tensor.shape.__get__(Tensor([455], "int64"))
torch.Tensor.shape.__get__(Tensor([457], "int64"))
torch.Tensor.shape.__get__(Tensor([46], "int64"))
torch.Tensor.shape.__get__(Tensor([47], "int64"))
torch.Tensor.shape.__get__(Tensor([4864, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([48], "int64"))
torch.Tensor.shape.__get__(Tensor([512], "int64"))
torch.Tensor.shape.__get__(Tensor([52], "int64"))
torch.Tensor.shape.__get__(Tensor([55], "int64"))
torch.Tensor.shape.__get__(Tensor([57], "int64"))
torch.Tensor.shape.__get__(Tensor([58], "int64"))
torch.Tensor.shape.__get__(Tensor([60], "int64"))
torch.Tensor.shape.__get__(Tensor([63], "int64"))
torch.Tensor.shape.__get__(Tensor([73], "int64"))
torch.Tensor.shape.__get__(Tensor([74], "int64"))
torch.Tensor.shape.__get__(Tensor([78], "int64"))
torch.Tensor.shape.__get__(Tensor([80], "int64"))
torch.Tensor.shape.__get__(Tensor([87], "int64"))
torch.Tensor.shape.__get__(Tensor([88], "int64"))
torch.Tensor.shape.__get__(Tensor([896, 4864], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([896, 896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([896], "bfloat16"))
torch.Tensor.shape.__get__(Tensor([91], "int64"))
torch.Tensor.shape.__get__(Tensor([96], "int64"))
torch.Tensor.shape.__get__(Tensor([97], "int64"))
torch.Tensor.share_memory_(Tensor([], "int64"))
torch.Tensor.sin(Tensor([1, 101, 64], "float32"))
torch.Tensor.sin(Tensor([1, 128, 64], "float32"))
torch.Tensor.sin(Tensor([1, 129, 64], "float32"))
torch.Tensor.sin(Tensor([1, 131, 64], "float32"))
torch.Tensor.sin(Tensor([1, 133, 64], "float32"))
torch.Tensor.sin(Tensor([1, 134, 64], "float32"))
torch.Tensor.sin(Tensor([1, 140, 64], "float32"))
torch.Tensor.sin(Tensor([1, 142, 64], "float32"))
torch.Tensor.sin(Tensor([1, 148, 64], "float32"))
torch.Tensor.sin(Tensor([1, 163, 64], "float32"))
torch.Tensor.sin(Tensor([1, 164, 64], "float32"))
torch.Tensor.sin(Tensor([1, 170, 64], "float32"))
torch.Tensor.sin(Tensor([1, 174, 64], "float32"))
torch.Tensor.sin(Tensor([1, 190, 64], "float32"))
torch.Tensor.sin(Tensor([1, 197, 64], "float32"))
torch.Tensor.sin(Tensor([1, 198, 64], "float32"))
torch.Tensor.sin(Tensor([1, 221, 64], "float32"))
torch.Tensor.sin(Tensor([1, 225, 64], "float32"))
torch.Tensor.sin(Tensor([1, 228, 64], "float32"))
torch.Tensor.sin(Tensor([1, 242, 64], "float32"))
torch.Tensor.sin(Tensor([1, 253, 64], "float32"))
torch.Tensor.sin(Tensor([1, 275, 64], "float32"))
torch.Tensor.sin(Tensor([1, 286, 64], "float32"))
torch.Tensor.sin(Tensor([1, 288, 64], "float32"))
torch.Tensor.sin(Tensor([1, 295, 64], "float32"))
torch.Tensor.sin(Tensor([1, 302, 64], "float32"))
torch.Tensor.sin(Tensor([1, 303, 64], "float32"))
torch.Tensor.sin(Tensor([1, 307, 64], "float32"))
torch.Tensor.sin(Tensor([1, 32, 64], "float32"))
torch.Tensor.sin(Tensor([1, 321, 64], "float32"))
torch.Tensor.sin(Tensor([1, 325, 64], "float32"))
torch.Tensor.sin(Tensor([1, 334, 64], "float32"))
torch.Tensor.sin(Tensor([1, 339, 64], "float32"))
torch.Tensor.sin(Tensor([1, 347, 64], "float32"))
torch.Tensor.sin(Tensor([1, 349, 64], "float32"))
torch.Tensor.sin(Tensor([1, 36, 64], "float32"))
torch.Tensor.sin(Tensor([1, 368, 64], "float32"))
torch.Tensor.sin(Tensor([1, 38, 64], "float32"))
torch.Tensor.sin(Tensor([1, 390, 64], "float32"))
torch.Tensor.sin(Tensor([1, 400, 64], "float32"))
torch.Tensor.sin(Tensor([1, 404, 64], "float32"))
torch.Tensor.sin(Tensor([1, 43, 64], "float32"))
torch.Tensor.sin(Tensor([1, 44, 64], "float32"))
torch.Tensor.sin(Tensor([1, 444, 64], "float32"))
torch.Tensor.sin(Tensor([1, 455, 64], "float32"))
torch.Tensor.sin(Tensor([1, 457, 64], "float32"))
torch.Tensor.sin(Tensor([1, 46, 64], "float32"))
torch.Tensor.sin(Tensor([1, 47, 64], "float32"))
torch.Tensor.sin(Tensor([1, 48, 64], "float32"))
torch.Tensor.sin(Tensor([1, 512, 64], "float32"))
torch.Tensor.sin(Tensor([1, 52, 64], "float32"))
torch.Tensor.sin(Tensor([1, 55, 64], "float32"))
torch.Tensor.sin(Tensor([1, 57, 64], "float32"))
torch.Tensor.sin(Tensor([1, 58, 64], "float32"))
torch.Tensor.sin(Tensor([1, 60, 64], "float32"))
torch.Tensor.sin(Tensor([1, 63, 64], "float32"))
torch.Tensor.sin(Tensor([1, 73, 64], "float32"))
torch.Tensor.sin(Tensor([1, 74, 64], "float32"))
torch.Tensor.sin(Tensor([1, 78, 64], "float32"))
torch.Tensor.sin(Tensor([1, 80, 64], "float32"))
torch.Tensor.sin(Tensor([1, 87, 64], "float32"))
torch.Tensor.sin(Tensor([1, 88, 64], "float32"))
torch.Tensor.sin(Tensor([1, 91, 64], "float32"))
torch.Tensor.sin(Tensor([1, 96, 64], "float32"))
torch.Tensor.sin(Tensor([1, 97, 64], "float32"))
torch.Tensor.size("<Unserializable: Parameter>", 0)
torch.Tensor.size("<Unserializable: Parameter>", 1)
torch.Tensor.size(Tensor([128, 896], "bfloat16"))
torch.Tensor.size(Tensor([128], "bfloat16"))
torch.Tensor.size(Tensor([151936, 896], "bfloat16"))
torch.Tensor.size(Tensor([16], "uint8"))
torch.Tensor.size(Tensor([4864, 896], "bfloat16"))
torch.Tensor.size(Tensor([5056], "uint8"))
torch.Tensor.size(Tensor([896, 4864], "bfloat16"))
torch.Tensor.size(Tensor([896, 896], "bfloat16"))
torch.Tensor.size(Tensor([896], "bfloat16"))
torch.Tensor.size(Tensor([], "float32"))
torch.Tensor.storage_offset(Tensor([128, 896], "bfloat16"))
torch.Tensor.storage_offset(Tensor([128], "bfloat16"))
torch.Tensor.storage_offset(Tensor([151936, 896], "bfloat16"))
torch.Tensor.storage_offset(Tensor([16], "uint8"))
torch.Tensor.storage_offset(Tensor([4864, 896], "bfloat16"))
torch.Tensor.storage_offset(Tensor([5056], "uint8"))
torch.Tensor.storage_offset(Tensor([896, 4864], "bfloat16"))
torch.Tensor.storage_offset(Tensor([896, 896], "bfloat16"))
torch.Tensor.storage_offset(Tensor([896], "bfloat16"))
torch.Tensor.storage_offset(Tensor([], "float32"))
torch.Tensor.sum(Tensor([1, 101], "bool"))
torch.Tensor.sum(Tensor([1, 128], "bool"))
torch.Tensor.sum(Tensor([1, 129], "bool"))
torch.Tensor.sum(Tensor([1, 131], "bool"))
torch.Tensor.sum(Tensor([1, 133], "bool"))
torch.Tensor.sum(Tensor([1, 134], "bool"))
torch.Tensor.sum(Tensor([1, 140], "bool"))
torch.Tensor.sum(Tensor([1, 142], "bool"))
torch.Tensor.sum(Tensor([1, 148], "bool"))
torch.Tensor.sum(Tensor([1, 163], "bool"))
torch.Tensor.sum(Tensor([1, 164], "bool"))
torch.Tensor.sum(Tensor([1, 170], "bool"))
torch.Tensor.sum(Tensor([1, 174], "bool"))
torch.Tensor.sum(Tensor([1, 190], "bool"))
torch.Tensor.sum(Tensor([1, 197], "bool"))
torch.Tensor.sum(Tensor([1, 198], "bool"))
torch.Tensor.sum(Tensor([1, 221], "bool"))
torch.Tensor.sum(Tensor([1, 225], "bool"))
torch.Tensor.sum(Tensor([1, 228], "bool"))
torch.Tensor.sum(Tensor([1, 242], "bool"))
torch.Tensor.sum(Tensor([1, 253], "bool"))
torch.Tensor.sum(Tensor([1, 275], "bool"))
torch.Tensor.sum(Tensor([1, 286], "bool"))
torch.Tensor.sum(Tensor([1, 288], "bool"))
torch.Tensor.sum(Tensor([1, 295], "bool"))
torch.Tensor.sum(Tensor([1, 302], "bool"))
torch.Tensor.sum(Tensor([1, 303], "bool"))
torch.Tensor.sum(Tensor([1, 307], "bool"))
torch.Tensor.sum(Tensor([1, 321], "bool"))
torch.Tensor.sum(Tensor([1, 325], "bool"))
torch.Tensor.sum(Tensor([1, 32], "bool"))
torch.Tensor.sum(Tensor([1, 334], "bool"))
torch.Tensor.sum(Tensor([1, 339], "bool"))
torch.Tensor.sum(Tensor([1, 347], "bool"))
torch.Tensor.sum(Tensor([1, 349], "bool"))
torch.Tensor.sum(Tensor([1, 368], "bool"))
torch.Tensor.sum(Tensor([1, 36], "bool"))
torch.Tensor.sum(Tensor([1, 38], "bool"))
torch.Tensor.sum(Tensor([1, 390], "bool"))
torch.Tensor.sum(Tensor([1, 400], "bool"))
torch.Tensor.sum(Tensor([1, 404], "bool"))
torch.Tensor.sum(Tensor([1, 43], "bool"))
torch.Tensor.sum(Tensor([1, 444], "bool"))
torch.Tensor.sum(Tensor([1, 44], "bool"))
torch.Tensor.sum(Tensor([1, 455], "bool"))
torch.Tensor.sum(Tensor([1, 457], "bool"))
torch.Tensor.sum(Tensor([1, 46], "bool"))
torch.Tensor.sum(Tensor([1, 47], "bool"))
torch.Tensor.sum(Tensor([1, 48], "bool"))
torch.Tensor.sum(Tensor([1, 512], "bool"))
torch.Tensor.sum(Tensor([1, 52], "bool"))
torch.Tensor.sum(Tensor([1, 55], "bool"))
torch.Tensor.sum(Tensor([1, 57], "bool"))
torch.Tensor.sum(Tensor([1, 58], "bool"))
torch.Tensor.sum(Tensor([1, 60], "bool"))
torch.Tensor.sum(Tensor([1, 63], "bool"))
torch.Tensor.sum(Tensor([1, 73], "bool"))
torch.Tensor.sum(Tensor([1, 74], "bool"))
torch.Tensor.sum(Tensor([1, 78], "bool"))
torch.Tensor.sum(Tensor([1, 80], "bool"))
torch.Tensor.sum(Tensor([1, 87], "bool"))
torch.Tensor.sum(Tensor([1, 88], "bool"))
torch.Tensor.sum(Tensor([1, 91], "bool"))
torch.Tensor.sum(Tensor([1, 96], "bool"))
torch.Tensor.sum(Tensor([1, 97], "bool"))
torch.Tensor.to("<Unserializable: Parameter>", "cuda", None, False)
torch.Tensor.to("<Unserializable: Parameter>", "cuda:7", None, False)
torch.Tensor.to("<Unserializable: Parameter>", "meta")
torch.Tensor.to(Tensor([1, 101, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 101, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 101, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 101], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 101], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 101], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 128, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 128, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 128, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 128], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 128], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 128], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 129, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 129, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 129, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 129], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 129], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 129], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 131, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 131, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 131, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 131], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 131], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 131], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 133, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 133, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 133, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 133], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 133], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 133], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 134, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 134, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 134, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 134], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 134], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 134], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 140, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 140, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 140, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 140], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 140], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 140], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 142, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 142, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 142, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 142], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 142], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 142], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 148, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 148, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 148, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 148], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 148], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 148], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 163, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 163, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 163, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 163], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 163], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 163], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 164, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 164, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 164, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 164], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 164], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 164], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 170, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 170, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 170, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 170], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 170], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 170], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 174, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 174, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 174, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 174], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 174], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 174], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 190, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 190, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 190, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 190], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 190], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 190], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 197, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 197, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 197, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 197], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 197], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 197], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 198, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 198, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 198, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 198], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 198], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 198], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 221, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 221, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 221, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 221], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 221], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 221], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 225, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 225, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 225, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 225], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 225], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 225], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 228, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 228, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 228, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 228], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 228], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 228], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 242, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 242, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 242, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 242], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 242], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 242], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 253, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 253, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 253, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 253], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 253], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 253], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 275, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 275, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 275, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 275], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 275], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 275], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 286, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 286, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 286, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 286], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 286], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 286], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 288, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 288, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 288, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 288], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 288], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 288], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 295, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 295, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 295, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 295], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 295], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 295], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 302, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 302, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 302, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 302], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 302], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 302], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 303, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 303, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 303, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 303], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 303], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 303], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 307, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 307, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 307, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 307], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 307], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 307], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 32, 1], "float32"), "cuda:0")
torch.Tensor.to(Tensor([1, 32, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 32, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 32, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 321, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 321, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 321, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 321], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 321], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 321], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 325, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 325, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 325, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 325], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 325], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 325], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 32], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 32], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 32], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 334, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 334, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 334, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 334], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 334], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 334], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 339, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 339, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 339, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 339], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 339], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 339], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 347, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 347, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 347, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 347], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 347], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 347], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 349, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 349, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 349, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 349], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 349], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 349], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 36, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 36, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 36, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 368, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 368, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 368, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 368], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 368], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 368], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 36], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 36], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 36], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 38, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 38, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 38, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 38], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 38], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 38], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 390, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 390, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 390, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 390], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 390], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 390], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 400, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 400, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 400, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 400], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 400], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 400], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 404, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 404, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 404, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 404], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 404], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 404], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 43, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 43, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 43, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 43], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 43], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 43], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 44, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 44, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 44, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 444, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 444, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 444, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 444], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 444], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 444], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 44], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 44], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 44], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 455, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 455, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 455, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 455], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 455], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 455], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 457, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 457, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 457, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 457], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 457], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 457], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 46, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 46, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 46, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 46], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 46], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 46], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 47, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 47, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 47, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 47], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 47], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 47], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 48, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 48, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 48, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 48], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 48], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 48], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 512, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 512, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 512, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 512], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 512], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 512], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 52, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 52, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 52, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 52], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 52], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 52], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 55, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 55, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 55, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 55], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 55], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 55], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 57, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 57, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 57, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 57], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 57], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 57], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 58, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 58, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 58, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 58], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 58], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 58], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 60, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 60, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 60, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 60], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 60], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 60], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 63, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 63, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 63, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 63], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 63], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 63], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 73, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 73, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 73, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 73], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 73], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 73], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 74, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 74, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 74, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 74], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 74], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 74], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 78, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 78, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 78, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 78], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 78], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 78], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 80, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 80, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 80, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 80], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 80], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 80], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 87, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 87, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 87, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 87], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 87], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 87], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 88, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 88, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 88, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 88], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 88], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 88], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 91, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 91, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 91, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 91], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 91], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 91], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 96, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 96, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 96, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 96], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 96], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 96], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([1, 97, 64], "float32"), dtype="bfloat16")
torch.Tensor.to(Tensor([1, 97, 896], "bfloat16"), "float32")
torch.Tensor.to(Tensor([1, 97, 896], "float32"), "bfloat16")
torch.Tensor.to(Tensor([1, 97], "int64"), device="cuda", non_blocking=False)
torch.Tensor.to(Tensor([1, 97], "int64"), device="cuda:0")
torch.Tensor.to(Tensor([1, 97], "int64"), device="cuda:0", dtype="bool")
torch.Tensor.to(Tensor([101], "int64"), "cuda:0")
torch.Tensor.to(Tensor([128, 896], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([128, 896], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([128, 896], "bfloat16"), 7)
torch.Tensor.to(Tensor([128], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([128], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([128], "bfloat16"), 7)
torch.Tensor.to(Tensor([128], "int64"), "cuda:0")
torch.Tensor.to(Tensor([129], "int64"), "cuda:0")
torch.Tensor.to(Tensor([131], "int64"), "cuda:0")
torch.Tensor.to(Tensor([133], "int64"), "cuda:0")
torch.Tensor.to(Tensor([134], "int64"), "cuda:0")
torch.Tensor.to(Tensor([140], "int64"), "cuda:0")
torch.Tensor.to(Tensor([142], "int64"), "cuda:0")
torch.Tensor.to(Tensor([148], "int64"), "cuda:0")
torch.Tensor.to(Tensor([151936, 896], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([151936, 896], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([151936, 896], "bfloat16"), 7)
torch.Tensor.to(Tensor([163], "int64"), "cuda:0")
torch.Tensor.to(Tensor([164], "int64"), "cuda:0")
torch.Tensor.to(Tensor([170], "int64"), "cuda:0")
torch.Tensor.to(Tensor([174], "int64"), "cuda:0")
torch.Tensor.to(Tensor([190], "int64"), "cuda:0")
torch.Tensor.to(Tensor([197], "int64"), "cuda:0")
torch.Tensor.to(Tensor([198], "int64"), "cuda:0")
torch.Tensor.to(Tensor([221], "int64"), "cuda:0")
torch.Tensor.to(Tensor([225], "int64"), "cuda:0")
torch.Tensor.to(Tensor([228], "int64"), "cuda:0")
torch.Tensor.to(Tensor([242], "int64"), "cuda:0")
torch.Tensor.to(Tensor([253], "int64"), "cuda:0")
torch.Tensor.to(Tensor([275], "int64"), "cuda:0")
torch.Tensor.to(Tensor([286], "int64"), "cuda:0")
torch.Tensor.to(Tensor([288], "int64"), "cuda:0")
torch.Tensor.to(Tensor([295], "int64"), "cuda:0")
torch.Tensor.to(Tensor([302], "int64"), "cuda:0")
torch.Tensor.to(Tensor([303], "int64"), "cuda:0")
torch.Tensor.to(Tensor([307], "int64"), "cuda:0")
torch.Tensor.to(Tensor([321], "int64"), "cuda:0")
torch.Tensor.to(Tensor([325], "int64"), "cuda:0")
torch.Tensor.to(Tensor([32], "float32"), "cuda", None, False)
torch.Tensor.to(Tensor([32], "float32"), "cuda:7", None, False)
torch.Tensor.to(Tensor([32], "int64"), "cuda:0")
torch.Tensor.to(Tensor([32], "int64"), device=None, dtype="float32")
torch.Tensor.to(Tensor([334], "int64"), "cuda:0")
torch.Tensor.to(Tensor([339], "int64"), "cuda:0")
torch.Tensor.to(Tensor([347], "int64"), "cuda:0")
torch.Tensor.to(Tensor([349], "int64"), "cuda:0")
torch.Tensor.to(Tensor([368], "int64"), "cuda:0")
torch.Tensor.to(Tensor([36], "int64"), "cuda:0")
torch.Tensor.to(Tensor([38], "int64"), "cuda:0")
torch.Tensor.to(Tensor([390], "int64"), "cuda:0")
torch.Tensor.to(Tensor([400], "int64"), "cuda:0")
torch.Tensor.to(Tensor([404], "int64"), "cuda:0")
torch.Tensor.to(Tensor([43], "int64"), "cuda:0")
torch.Tensor.to(Tensor([444], "int64"), "cuda:0")
torch.Tensor.to(Tensor([44], "int64"), "cuda:0")
torch.Tensor.to(Tensor([455], "int64"), "cuda:0")
torch.Tensor.to(Tensor([457], "int64"), "cuda:0")
torch.Tensor.to(Tensor([46], "int64"), "cuda:0")
torch.Tensor.to(Tensor([47], "int64"), "cuda:0")
torch.Tensor.to(Tensor([4864, 896], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([4864, 896], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([4864, 896], "bfloat16"), 7)
torch.Tensor.to(Tensor([48], "int64"), "cuda:0")
torch.Tensor.to(Tensor([512], "int64"), "cuda:0")
torch.Tensor.to(Tensor([52], "int64"), "cuda:0")
torch.Tensor.to(Tensor([55], "int64"), "cuda:0")
torch.Tensor.to(Tensor([57], "int64"), "cuda:0")
torch.Tensor.to(Tensor([58], "int64"), "cuda:0")
torch.Tensor.to(Tensor([60], "int64"), "cuda:0")
torch.Tensor.to(Tensor([63], "int64"), "cuda:0")
torch.Tensor.to(Tensor([73], "int64"), "cuda:0")
torch.Tensor.to(Tensor([74], "int64"), "cuda:0")
torch.Tensor.to(Tensor([78], "int64"), "cuda:0")
torch.Tensor.to(Tensor([80], "int64"), "cuda:0")
torch.Tensor.to(Tensor([87], "int64"), "cuda:0")
torch.Tensor.to(Tensor([88], "int64"), "cuda:0")
torch.Tensor.to(Tensor([896, 4864], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([896, 4864], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([896, 4864], "bfloat16"), 7)
torch.Tensor.to(Tensor([896, 896], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([896, 896], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([896, 896], "bfloat16"), 7)
torch.Tensor.to(Tensor([896], "bfloat16"), "bfloat16")
torch.Tensor.to(Tensor([896], "bfloat16"), "cpu")
torch.Tensor.to(Tensor([896], "bfloat16"), 7)
torch.Tensor.to(Tensor([91], "int64"), "cuda:0")
torch.Tensor.to(Tensor([96], "int64"), "cuda:0")
torch.Tensor.to(Tensor([97], "int64"), "cuda:0")
torch.Tensor.to(Tensor([], "bfloat16"), "cuda:0")
torch.Tensor.to(Tensor([], "int64"), "cuda:0")
torch.Tensor.transpose(Tensor([1, 101, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 101, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 128, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 128, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 129, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 129, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 131, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 131, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 133, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 133, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 134, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 134, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 101, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 128, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 129, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 131, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 133, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 134, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 140, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 142, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 148, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 163, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 164, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 170, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 174, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 190, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 197, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 198, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 221, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 225, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 228, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 242, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 253, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 275, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 286, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 288, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 295, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 302, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 303, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 307, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 32, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 321, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 325, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 334, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 339, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 347, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 349, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 36, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 368, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 38, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 390, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 400, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 404, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 43, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 44, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 444, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 455, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 457, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 46, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 47, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 48, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 512, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 52, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 55, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 57, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 58, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 60, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 63, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 73, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 74, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 78, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 80, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 87, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 88, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 91, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 96, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 14, 97, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 140, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 140, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 142, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 142, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 148, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 148, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 163, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 163, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 164, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 164, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 170, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 170, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 174, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 174, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 190, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 190, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 197, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 197, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 198, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 198, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 221, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 221, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 225, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 225, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 228, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 228, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 242, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 242, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 253, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 253, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 275, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 275, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 286, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 286, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 288, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 288, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 295, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 295, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 302, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 302, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 303, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 303, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 307, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 307, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 101], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 128], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 129], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 131], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 133], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 134], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 140], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 142], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 148], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 163], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 164], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 170], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 174], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 190], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 197], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 198], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 221], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 225], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 228], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 242], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 253], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 275], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 286], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 288], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 295], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 302], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 303], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 307], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 321], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 325], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 32], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 334], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 339], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 347], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 349], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 368], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 36], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 38], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 390], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 400], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 404], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 43], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 444], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 44], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 455], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 457], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 46], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 47], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 48], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 512], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 52], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 55], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 57], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 58], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 60], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 63], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 73], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 74], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 78], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 80], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 87], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 88], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 91], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 96], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 32, 97], "float32"), 1, 2)
torch.Tensor.transpose(Tensor([1, 321, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 321, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 325, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 325, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 334, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 334, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 339, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 339, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 347, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 347, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 349, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 349, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 36, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 36, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 368, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 368, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 38, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 38, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 390, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 390, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 400, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 400, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 404, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 404, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 43, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 43, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 44, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 44, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 444, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 444, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 455, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 455, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 457, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 457, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 46, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 46, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 47, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 47, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 48, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 48, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 512, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 512, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 52, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 52, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 55, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 55, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 57, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 57, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 58, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 58, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 60, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 60, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 63, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 63, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 73, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 73, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 74, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 74, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 78, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 78, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 80, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 80, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 87, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 87, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 88, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 88, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 91, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 91, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 96, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 96, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 97, 14, 64], "bfloat16"), 1, 2)
torch.Tensor.transpose(Tensor([1, 97, 2, 64], "bfloat16"), 1, 2)
torch.Tensor.unsqueeze(Tensor([1, 101, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 128, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 129, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 131, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 133, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 134, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 140, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 142, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 148, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 163, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 164, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 170, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 174, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 190, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 197, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 198, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 221, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 225, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 228, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 242, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 253, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 275, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 286, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 288, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 295, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 302, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 303, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 307, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 32, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 321, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 325, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 334, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 339, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 347, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 349, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 36, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 368, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 38, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 390, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 400, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 404, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 43, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 44, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 444, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 455, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 457, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 46, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 47, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 48, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 512, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 52, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 55, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 57, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 58, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 60, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 63, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 73, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 74, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 78, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 80, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 87, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 88, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 91, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 96, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([1, 97, 64], "bfloat16"), 1)
torch.Tensor.unsqueeze(Tensor([101], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([128], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([129], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([131], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([133], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([134], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([140], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([142], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([148], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([163], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([164], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([170], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([174], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([190], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([197], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([198], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([221], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([225], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([228], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([242], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([253], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([275], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([286], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([288], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([295], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([302], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([303], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([307], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([321], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([325], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([32], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([334], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([339], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([347], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([349], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([368], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([36], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([38], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([390], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([400], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([404], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([43], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([444], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([44], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([455], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([457], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([46], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([47], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([48], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([512], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([52], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([55], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([57], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([58], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([60], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([63], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([73], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([74], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([78], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([80], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([87], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([88], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([91], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([96], "int64"), 0)
torch.Tensor.unsqueeze(Tensor([97], "int64"), 0)
torch.Tensor.untyped_storage(Tensor([128, 896], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([128], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([151936, 896], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([16], "uint8"))
torch.Tensor.untyped_storage(Tensor([4864, 896], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([5056], "uint8"))
torch.Tensor.untyped_storage(Tensor([896, 4864], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([896, 896], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([896], "bfloat16"))
torch.Tensor.untyped_storage(Tensor([], "float32"))
torch.Tensor.view(Tensor([1, 101, 128], "bfloat16"), tuple(1, 101, -1, 64))
torch.Tensor.view(Tensor([1, 101, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 101, 896], "bfloat16"), tuple(1, 101, -1, 64))
torch.Tensor.view(Tensor([1, 101], "int64"), -1)
torch.Tensor.view(Tensor([1, 128, 128], "bfloat16"), tuple(1, 128, -1, 64))
torch.Tensor.view(Tensor([1, 128, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 128, 896], "bfloat16"), tuple(1, 128, -1, 64))
torch.Tensor.view(Tensor([1, 128], "int64"), -1)
torch.Tensor.view(Tensor([1, 129, 128], "bfloat16"), tuple(1, 129, -1, 64))
torch.Tensor.view(Tensor([1, 129, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 129, 896], "bfloat16"), tuple(1, 129, -1, 64))
torch.Tensor.view(Tensor([1, 129], "int64"), -1)
torch.Tensor.view(Tensor([1, 131, 128], "bfloat16"), tuple(1, 131, -1, 64))
torch.Tensor.view(Tensor([1, 131, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 131, 896], "bfloat16"), tuple(1, 131, -1, 64))
torch.Tensor.view(Tensor([1, 131], "int64"), -1)
torch.Tensor.view(Tensor([1, 133, 128], "bfloat16"), tuple(1, 133, -1, 64))
torch.Tensor.view(Tensor([1, 133, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 133, 896], "bfloat16"), tuple(1, 133, -1, 64))
torch.Tensor.view(Tensor([1, 133], "int64"), -1)
torch.Tensor.view(Tensor([1, 134, 128], "bfloat16"), tuple(1, 134, -1, 64))
torch.Tensor.view(Tensor([1, 134, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 134, 896], "bfloat16"), tuple(1, 134, -1, 64))
torch.Tensor.view(Tensor([1, 134], "int64"), -1)
torch.Tensor.view(Tensor([1, 140, 128], "bfloat16"), tuple(1, 140, -1, 64))
torch.Tensor.view(Tensor([1, 140, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 140, 896], "bfloat16"), tuple(1, 140, -1, 64))
torch.Tensor.view(Tensor([1, 140], "int64"), -1)
torch.Tensor.view(Tensor([1, 142, 128], "bfloat16"), tuple(1, 142, -1, 64))
torch.Tensor.view(Tensor([1, 142, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 142, 896], "bfloat16"), tuple(1, 142, -1, 64))
torch.Tensor.view(Tensor([1, 142], "int64"), -1)
torch.Tensor.view(Tensor([1, 148, 128], "bfloat16"), tuple(1, 148, -1, 64))
torch.Tensor.view(Tensor([1, 148, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 148, 896], "bfloat16"), tuple(1, 148, -1, 64))
torch.Tensor.view(Tensor([1, 148], "int64"), -1)
torch.Tensor.view(Tensor([1, 163, 128], "bfloat16"), tuple(1, 163, -1, 64))
torch.Tensor.view(Tensor([1, 163, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 163, 896], "bfloat16"), tuple(1, 163, -1, 64))
torch.Tensor.view(Tensor([1, 163], "int64"), -1)
torch.Tensor.view(Tensor([1, 164, 128], "bfloat16"), tuple(1, 164, -1, 64))
torch.Tensor.view(Tensor([1, 164, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 164, 896], "bfloat16"), tuple(1, 164, -1, 64))
torch.Tensor.view(Tensor([1, 164], "int64"), -1)
torch.Tensor.view(Tensor([1, 170, 128], "bfloat16"), tuple(1, 170, -1, 64))
torch.Tensor.view(Tensor([1, 170, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 170, 896], "bfloat16"), tuple(1, 170, -1, 64))
torch.Tensor.view(Tensor([1, 170], "int64"), -1)
torch.Tensor.view(Tensor([1, 174, 128], "bfloat16"), tuple(1, 174, -1, 64))
torch.Tensor.view(Tensor([1, 174, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 174, 896], "bfloat16"), tuple(1, 174, -1, 64))
torch.Tensor.view(Tensor([1, 174], "int64"), -1)
torch.Tensor.view(Tensor([1, 190, 128], "bfloat16"), tuple(1, 190, -1, 64))
torch.Tensor.view(Tensor([1, 190, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 190, 896], "bfloat16"), tuple(1, 190, -1, 64))
torch.Tensor.view(Tensor([1, 190], "int64"), -1)
torch.Tensor.view(Tensor([1, 197, 128], "bfloat16"), tuple(1, 197, -1, 64))
torch.Tensor.view(Tensor([1, 197, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 197, 896], "bfloat16"), tuple(1, 197, -1, 64))
torch.Tensor.view(Tensor([1, 197], "int64"), -1)
torch.Tensor.view(Tensor([1, 198, 128], "bfloat16"), tuple(1, 198, -1, 64))
torch.Tensor.view(Tensor([1, 198, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 198, 896], "bfloat16"), tuple(1, 198, -1, 64))
torch.Tensor.view(Tensor([1, 198], "int64"), -1)
torch.Tensor.view(Tensor([1, 221, 128], "bfloat16"), tuple(1, 221, -1, 64))
torch.Tensor.view(Tensor([1, 221, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 221, 896], "bfloat16"), tuple(1, 221, -1, 64))
torch.Tensor.view(Tensor([1, 221], "int64"), -1)
torch.Tensor.view(Tensor([1, 225, 128], "bfloat16"), tuple(1, 225, -1, 64))
torch.Tensor.view(Tensor([1, 225, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 225, 896], "bfloat16"), tuple(1, 225, -1, 64))
torch.Tensor.view(Tensor([1, 225], "int64"), -1)
torch.Tensor.view(Tensor([1, 228, 128], "bfloat16"), tuple(1, 228, -1, 64))
torch.Tensor.view(Tensor([1, 228, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 228, 896], "bfloat16"), tuple(1, 228, -1, 64))
torch.Tensor.view(Tensor([1, 228], "int64"), -1)
torch.Tensor.view(Tensor([1, 242, 128], "bfloat16"), tuple(1, 242, -1, 64))
torch.Tensor.view(Tensor([1, 242, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 242, 896], "bfloat16"), tuple(1, 242, -1, 64))
torch.Tensor.view(Tensor([1, 242], "int64"), -1)
torch.Tensor.view(Tensor([1, 253, 128], "bfloat16"), tuple(1, 253, -1, 64))
torch.Tensor.view(Tensor([1, 253, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 253, 896], "bfloat16"), tuple(1, 253, -1, 64))
torch.Tensor.view(Tensor([1, 253], "int64"), -1)
torch.Tensor.view(Tensor([1, 275, 128], "bfloat16"), tuple(1, 275, -1, 64))
torch.Tensor.view(Tensor([1, 275, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 275, 896], "bfloat16"), tuple(1, 275, -1, 64))
torch.Tensor.view(Tensor([1, 275], "int64"), -1)
torch.Tensor.view(Tensor([1, 286, 128], "bfloat16"), tuple(1, 286, -1, 64))
torch.Tensor.view(Tensor([1, 286, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 286, 896], "bfloat16"), tuple(1, 286, -1, 64))
torch.Tensor.view(Tensor([1, 286], "int64"), -1)
torch.Tensor.view(Tensor([1, 288, 128], "bfloat16"), tuple(1, 288, -1, 64))
torch.Tensor.view(Tensor([1, 288, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 288, 896], "bfloat16"), tuple(1, 288, -1, 64))
torch.Tensor.view(Tensor([1, 288], "int64"), -1)
torch.Tensor.view(Tensor([1, 295, 128], "bfloat16"), tuple(1, 295, -1, 64))
torch.Tensor.view(Tensor([1, 295, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 295, 896], "bfloat16"), tuple(1, 295, -1, 64))
torch.Tensor.view(Tensor([1, 295], "int64"), -1)
torch.Tensor.view(Tensor([1, 302, 128], "bfloat16"), tuple(1, 302, -1, 64))
torch.Tensor.view(Tensor([1, 302, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 302, 896], "bfloat16"), tuple(1, 302, -1, 64))
torch.Tensor.view(Tensor([1, 302], "int64"), -1)
torch.Tensor.view(Tensor([1, 303, 128], "bfloat16"), tuple(1, 303, -1, 64))
torch.Tensor.view(Tensor([1, 303, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 303, 896], "bfloat16"), tuple(1, 303, -1, 64))
torch.Tensor.view(Tensor([1, 303], "int64"), -1)
torch.Tensor.view(Tensor([1, 307, 128], "bfloat16"), tuple(1, 307, -1, 64))
torch.Tensor.view(Tensor([1, 307, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 307, 896], "bfloat16"), tuple(1, 307, -1, 64))
torch.Tensor.view(Tensor([1, 307], "int64"), -1)
torch.Tensor.view(Tensor([1, 32, 128], "bfloat16"), tuple(1, 32, -1, 64))
torch.Tensor.view(Tensor([1, 32, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 32, 896], "bfloat16"), tuple(1, 32, -1, 64))
torch.Tensor.view(Tensor([1, 321, 128], "bfloat16"), tuple(1, 321, -1, 64))
torch.Tensor.view(Tensor([1, 321, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 321, 896], "bfloat16"), tuple(1, 321, -1, 64))
torch.Tensor.view(Tensor([1, 321], "int64"), -1)
torch.Tensor.view(Tensor([1, 325, 128], "bfloat16"), tuple(1, 325, -1, 64))
torch.Tensor.view(Tensor([1, 325, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 325, 896], "bfloat16"), tuple(1, 325, -1, 64))
torch.Tensor.view(Tensor([1, 325], "int64"), -1)
torch.Tensor.view(Tensor([1, 32], "int64"), -1)
torch.Tensor.view(Tensor([1, 334, 128], "bfloat16"), tuple(1, 334, -1, 64))
torch.Tensor.view(Tensor([1, 334, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 334, 896], "bfloat16"), tuple(1, 334, -1, 64))
torch.Tensor.view(Tensor([1, 334], "int64"), -1)
torch.Tensor.view(Tensor([1, 339, 128], "bfloat16"), tuple(1, 339, -1, 64))
torch.Tensor.view(Tensor([1, 339, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 339, 896], "bfloat16"), tuple(1, 339, -1, 64))
torch.Tensor.view(Tensor([1, 339], "int64"), -1)
torch.Tensor.view(Tensor([1, 347, 128], "bfloat16"), tuple(1, 347, -1, 64))
torch.Tensor.view(Tensor([1, 347, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 347, 896], "bfloat16"), tuple(1, 347, -1, 64))
torch.Tensor.view(Tensor([1, 347], "int64"), -1)
torch.Tensor.view(Tensor([1, 349, 128], "bfloat16"), tuple(1, 349, -1, 64))
torch.Tensor.view(Tensor([1, 349, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 349, 896], "bfloat16"), tuple(1, 349, -1, 64))
torch.Tensor.view(Tensor([1, 349], "int64"), -1)
torch.Tensor.view(Tensor([1, 36, 128], "bfloat16"), tuple(1, 36, -1, 64))
torch.Tensor.view(Tensor([1, 36, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 36, 896], "bfloat16"), tuple(1, 36, -1, 64))
torch.Tensor.view(Tensor([1, 368, 128], "bfloat16"), tuple(1, 368, -1, 64))
torch.Tensor.view(Tensor([1, 368, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 368, 896], "bfloat16"), tuple(1, 368, -1, 64))
torch.Tensor.view(Tensor([1, 368], "int64"), -1)
torch.Tensor.view(Tensor([1, 36], "int64"), -1)
torch.Tensor.view(Tensor([1, 38, 128], "bfloat16"), tuple(1, 38, -1, 64))
torch.Tensor.view(Tensor([1, 38, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 38, 896], "bfloat16"), tuple(1, 38, -1, 64))
torch.Tensor.view(Tensor([1, 38], "int64"), -1)
torch.Tensor.view(Tensor([1, 390, 128], "bfloat16"), tuple(1, 390, -1, 64))
torch.Tensor.view(Tensor([1, 390, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 390, 896], "bfloat16"), tuple(1, 390, -1, 64))
torch.Tensor.view(Tensor([1, 390], "int64"), -1)
torch.Tensor.view(Tensor([1, 400, 128], "bfloat16"), tuple(1, 400, -1, 64))
torch.Tensor.view(Tensor([1, 400, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 400, 896], "bfloat16"), tuple(1, 400, -1, 64))
torch.Tensor.view(Tensor([1, 400], "int64"), -1)
torch.Tensor.view(Tensor([1, 404, 128], "bfloat16"), tuple(1, 404, -1, 64))
torch.Tensor.view(Tensor([1, 404, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 404, 896], "bfloat16"), tuple(1, 404, -1, 64))
torch.Tensor.view(Tensor([1, 404], "int64"), -1)
torch.Tensor.view(Tensor([1, 43, 128], "bfloat16"), tuple(1, 43, -1, 64))
torch.Tensor.view(Tensor([1, 43, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 43, 896], "bfloat16"), tuple(1, 43, -1, 64))
torch.Tensor.view(Tensor([1, 43], "int64"), -1)
torch.Tensor.view(Tensor([1, 44, 128], "bfloat16"), tuple(1, 44, -1, 64))
torch.Tensor.view(Tensor([1, 44, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 44, 896], "bfloat16"), tuple(1, 44, -1, 64))
torch.Tensor.view(Tensor([1, 444, 128], "bfloat16"), tuple(1, 444, -1, 64))
torch.Tensor.view(Tensor([1, 444, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 444, 896], "bfloat16"), tuple(1, 444, -1, 64))
torch.Tensor.view(Tensor([1, 444], "int64"), -1)
torch.Tensor.view(Tensor([1, 44], "int64"), -1)
torch.Tensor.view(Tensor([1, 455, 128], "bfloat16"), tuple(1, 455, -1, 64))
torch.Tensor.view(Tensor([1, 455, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 455, 896], "bfloat16"), tuple(1, 455, -1, 64))
torch.Tensor.view(Tensor([1, 455], "int64"), -1)
torch.Tensor.view(Tensor([1, 457, 128], "bfloat16"), tuple(1, 457, -1, 64))
torch.Tensor.view(Tensor([1, 457, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 457, 896], "bfloat16"), tuple(1, 457, -1, 64))
torch.Tensor.view(Tensor([1, 457], "int64"), -1)
torch.Tensor.view(Tensor([1, 46, 128], "bfloat16"), tuple(1, 46, -1, 64))
torch.Tensor.view(Tensor([1, 46, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 46, 896], "bfloat16"), tuple(1, 46, -1, 64))
torch.Tensor.view(Tensor([1, 46], "int64"), -1)
torch.Tensor.view(Tensor([1, 47, 128], "bfloat16"), tuple(1, 47, -1, 64))
torch.Tensor.view(Tensor([1, 47, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 47, 896], "bfloat16"), tuple(1, 47, -1, 64))
torch.Tensor.view(Tensor([1, 47], "int64"), -1)
torch.Tensor.view(Tensor([1, 48, 128], "bfloat16"), tuple(1, 48, -1, 64))
torch.Tensor.view(Tensor([1, 48, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 48, 896], "bfloat16"), tuple(1, 48, -1, 64))
torch.Tensor.view(Tensor([1, 48], "int64"), -1)
torch.Tensor.view(Tensor([1, 512, 128], "bfloat16"), tuple(1, 512, -1, 64))
torch.Tensor.view(Tensor([1, 512, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 512, 896], "bfloat16"), tuple(1, 512, -1, 64))
torch.Tensor.view(Tensor([1, 512], "int64"), -1)
torch.Tensor.view(Tensor([1, 52, 128], "bfloat16"), tuple(1, 52, -1, 64))
torch.Tensor.view(Tensor([1, 52, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 52, 896], "bfloat16"), tuple(1, 52, -1, 64))
torch.Tensor.view(Tensor([1, 52], "int64"), -1)
torch.Tensor.view(Tensor([1, 55, 128], "bfloat16"), tuple(1, 55, -1, 64))
torch.Tensor.view(Tensor([1, 55, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 55, 896], "bfloat16"), tuple(1, 55, -1, 64))
torch.Tensor.view(Tensor([1, 55], "int64"), -1)
torch.Tensor.view(Tensor([1, 57, 128], "bfloat16"), tuple(1, 57, -1, 64))
torch.Tensor.view(Tensor([1, 57, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 57, 896], "bfloat16"), tuple(1, 57, -1, 64))
torch.Tensor.view(Tensor([1, 57], "int64"), -1)
torch.Tensor.view(Tensor([1, 58, 128], "bfloat16"), tuple(1, 58, -1, 64))
torch.Tensor.view(Tensor([1, 58, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 58, 896], "bfloat16"), tuple(1, 58, -1, 64))
torch.Tensor.view(Tensor([1, 58], "int64"), -1)
torch.Tensor.view(Tensor([1, 60, 128], "bfloat16"), tuple(1, 60, -1, 64))
torch.Tensor.view(Tensor([1, 60, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 60, 896], "bfloat16"), tuple(1, 60, -1, 64))
torch.Tensor.view(Tensor([1, 60], "int64"), -1)
torch.Tensor.view(Tensor([1, 63, 128], "bfloat16"), tuple(1, 63, -1, 64))
torch.Tensor.view(Tensor([1, 63, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 63, 896], "bfloat16"), tuple(1, 63, -1, 64))
torch.Tensor.view(Tensor([1, 63], "int64"), -1)
torch.Tensor.view(Tensor([1, 73, 128], "bfloat16"), tuple(1, 73, -1, 64))
torch.Tensor.view(Tensor([1, 73, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 73, 896], "bfloat16"), tuple(1, 73, -1, 64))
torch.Tensor.view(Tensor([1, 73], "int64"), -1)
torch.Tensor.view(Tensor([1, 74, 128], "bfloat16"), tuple(1, 74, -1, 64))
torch.Tensor.view(Tensor([1, 74, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 74, 896], "bfloat16"), tuple(1, 74, -1, 64))
torch.Tensor.view(Tensor([1, 74], "int64"), -1)
torch.Tensor.view(Tensor([1, 78, 128], "bfloat16"), tuple(1, 78, -1, 64))
torch.Tensor.view(Tensor([1, 78, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 78, 896], "bfloat16"), tuple(1, 78, -1, 64))
torch.Tensor.view(Tensor([1, 78], "int64"), -1)
torch.Tensor.view(Tensor([1, 80, 128], "bfloat16"), tuple(1, 80, -1, 64))
torch.Tensor.view(Tensor([1, 80, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 80, 896], "bfloat16"), tuple(1, 80, -1, 64))
torch.Tensor.view(Tensor([1, 80], "int64"), -1)
torch.Tensor.view(Tensor([1, 87, 128], "bfloat16"), tuple(1, 87, -1, 64))
torch.Tensor.view(Tensor([1, 87, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 87, 896], "bfloat16"), tuple(1, 87, -1, 64))
torch.Tensor.view(Tensor([1, 87], "int64"), -1)
torch.Tensor.view(Tensor([1, 88, 128], "bfloat16"), tuple(1, 88, -1, 64))
torch.Tensor.view(Tensor([1, 88, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 88, 896], "bfloat16"), tuple(1, 88, -1, 64))
torch.Tensor.view(Tensor([1, 88], "int64"), -1)
torch.Tensor.view(Tensor([1, 91, 128], "bfloat16"), tuple(1, 91, -1, 64))
torch.Tensor.view(Tensor([1, 91, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 91, 896], "bfloat16"), tuple(1, 91, -1, 64))
torch.Tensor.view(Tensor([1, 91], "int64"), -1)
torch.Tensor.view(Tensor([1, 96, 128], "bfloat16"), tuple(1, 96, -1, 64))
torch.Tensor.view(Tensor([1, 96, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 96, 896], "bfloat16"), tuple(1, 96, -1, 64))
torch.Tensor.view(Tensor([1, 96], "int64"), -1)
torch.Tensor.view(Tensor([1, 97, 128], "bfloat16"), tuple(1, 97, -1, 64))
torch.Tensor.view(Tensor([1, 97, 151936], "float32"), -1, 151936)
torch.Tensor.view(Tensor([1, 97, 896], "bfloat16"), tuple(1, 97, -1, 64))
torch.Tensor.view(Tensor([1, 97], "int64"), -1)
torch.Tensor.view(Tensor([151936, 896], "bfloat16"), -1)
torch.Tensor.view(Tensor([1605632], "uint8"), dtype="bfloat16")
torch.Tensor.view(Tensor([1792], "uint8"), dtype="bfloat16")
torch.Tensor.view(Tensor([229376], "uint8"), dtype="bfloat16")
torch.Tensor.view(Tensor([256], "uint8"), dtype="bfloat16")
torch.Tensor.view(Tensor([272269312], "uint8"), dtype="bfloat16")
torch.Tensor.view(Tensor([8716288], "uint8"), dtype="bfloat16")
torch._C._nn._parse_to("cuda")
torch._C._nn._parse_to(7)
torch._C._set_grad_enabled(False)
torch._C._set_grad_enabled(True)
torch._foreach_add_(list[Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32")], Tensor([], "float32"), alpha=1.0)
torch._foreach_add_(list[Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32"), Tensor([], "float32")], Tensor([], "float32"), alpha=1.0)
torch._foreach_add_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), 1e-08)
torch._foreach_add_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), 1e-08)
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[-0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[-2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[-4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[-8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[-9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[-0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006, -0.00020000000000000006])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[-2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05, -2.326257633032859e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[-4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05, -4.428044280442806e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[-8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05, -8.421052631578952e-05])
torch._foreach_addcdiv_(list["<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>", "<Unserializable: Parameter>"], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[-9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06, -9.76777123879759e-06])
torch._foreach_addcmul_(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], 0.0010000000000000009)
torch._foreach_addcmul_(list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], 0.0010000000000000009)
torch._foreach_div_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805])
torch._foreach_div_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601])
torch._foreach_div_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028])
torch._foreach_div_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004])
torch._foreach_div_(tuple(Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")), list[0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733])
torch._foreach_div_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805])
torch._foreach_div_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601, 0.04471017781221601])
torch._foreach_div_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028, 0.05474487190596028])
torch._foreach_div_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004, 0.0631981328759004])
torch._foreach_div_(tuple(Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")), list[0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733, 0.0706400027958733])
torch._foreach_lerp_(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], 0.09999999999999998)
torch._foreach_lerp_(list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], 0.09999999999999998)
torch._foreach_mul_(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")], 0.999)
torch._foreach_mul_(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], Tensor([], "bfloat16"))
torch._foreach_mul_(list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], 0.999)
torch._foreach_norm(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")], 2.0)
torch._foreach_sqrt(list[Tensor([151936, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([128, 896], "bfloat16"), Tensor([896, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([4864, 896], "bfloat16"), Tensor([896, 4864], "bfloat16")])
torch._foreach_sqrt(list[Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([128], "bfloat16"), Tensor([128], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16"), Tensor([896], "bfloat16")])
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([128, 896], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([128], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([151936, 896], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([4864, 896], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([896, 4864], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([896, 896], "bfloat16"))
torch._has_compatible_shallow_copy_type("<Unserializable: Parameter>", Tensor([896], "bfloat16"))
torch.cat(list[Tensor([1, 101], "int64")], dim=0)
torch.cat(list[Tensor([1, 105], "int64")], dim=0)
torch.cat(list[Tensor([1, 128], "int64")], dim=0)
torch.cat(list[Tensor([1, 129], "int64")], dim=0)
torch.cat(list[Tensor([1, 131], "int64")], dim=0)
torch.cat(list[Tensor([1, 133], "int64")], dim=0)
torch.cat(list[Tensor([1, 134], "int64")], dim=0)
torch.cat(list[Tensor([1, 140], "int64")], dim=0)
torch.cat(list[Tensor([1, 142], "int64")], dim=0)
torch.cat(list[Tensor([1, 148], "int64")], dim=0)
torch.cat(list[Tensor([1, 163], "int64")], dim=0)
torch.cat(list[Tensor([1, 164], "int64")], dim=0)
torch.cat(list[Tensor([1, 170], "int64")], dim=0)
torch.cat(list[Tensor([1, 174], "int64")], dim=0)
torch.cat(list[Tensor([1, 190], "int64")], dim=0)
torch.cat(list[Tensor([1, 197], "int64")], dim=0)
torch.cat(list[Tensor([1, 198], "int64")], dim=0)
torch.cat(list[Tensor([1, 221], "int64")], dim=0)
torch.cat(list[Tensor([1, 225], "int64")], dim=0)
torch.cat(list[Tensor([1, 228], "int64")], dim=0)
torch.cat(list[Tensor([1, 242], "int64")], dim=0)
torch.cat(list[Tensor([1, 253], "int64")], dim=0)
torch.cat(list[Tensor([1, 275], "int64")], dim=0)
torch.cat(list[Tensor([1, 286], "int64")], dim=0)
torch.cat(list[Tensor([1, 288], "int64")], dim=0)
torch.cat(list[Tensor([1, 295], "int64")], dim=0)
torch.cat(list[Tensor([1, 302], "int64")], dim=0)
torch.cat(list[Tensor([1, 303], "int64")], dim=0)
torch.cat(list[Tensor([1, 307], "int64")], dim=0)
torch.cat(list[Tensor([1, 321], "int64")], dim=0)
torch.cat(list[Tensor([1, 325], "int64")], dim=0)
torch.cat(list[Tensor([1, 32], "int64")], dim=0)
torch.cat(list[Tensor([1, 334], "int64")], dim=0)
torch.cat(list[Tensor([1, 339], "int64")], dim=0)
torch.cat(list[Tensor([1, 347], "int64")], dim=0)
torch.cat(list[Tensor([1, 349], "int64")], dim=0)
torch.cat(list[Tensor([1, 368], "int64")], dim=0)
torch.cat(list[Tensor([1, 36], "int64")], dim=0)
torch.cat(list[Tensor([1, 38], "int64")], dim=0)
torch.cat(list[Tensor([1, 390], "int64")], dim=0)
torch.cat(list[Tensor([1, 400], "int64")], dim=0)
torch.cat(list[Tensor([1, 404], "int64")], dim=0)
torch.cat(list[Tensor([1, 43], "int64")], dim=0)
torch.cat(list[Tensor([1, 444], "int64")], dim=0)
torch.cat(list[Tensor([1, 44], "int64")], dim=0)
torch.cat(list[Tensor([1, 455], "int64")], dim=0)
torch.cat(list[Tensor([1, 457], "int64")], dim=0)
torch.cat(list[Tensor([1, 46], "int64")], dim=0)
torch.cat(list[Tensor([1, 47], "int64")], dim=0)
torch.cat(list[Tensor([1, 48], "int64")], dim=0)
torch.cat(list[Tensor([1, 512], "int64")], dim=0)
torch.cat(list[Tensor([1, 52], "int64")], dim=0)
torch.cat(list[Tensor([1, 55], "int64")], dim=0)
torch.cat(list[Tensor([1, 57], "int64")], dim=0)
torch.cat(list[Tensor([1, 58], "int64")], dim=0)
torch.cat(list[Tensor([1, 60], "int64")], dim=0)
torch.cat(list[Tensor([1, 63], "int64")], dim=0)
torch.cat(list[Tensor([1, 73], "int64")], dim=0)
torch.cat(list[Tensor([1, 74], "int64")], dim=0)
torch.cat(list[Tensor([1, 78], "int64")], dim=0)
torch.cat(list[Tensor([1, 80], "int64")], dim=0)
torch.cat(list[Tensor([1, 87], "int64")], dim=0)
torch.cat(list[Tensor([1, 88], "int64")], dim=0)
torch.cat(list[Tensor([1, 91], "int64")], dim=0)
torch.cat(list[Tensor([1, 96], "int64")], dim=0)
torch.cat(list[Tensor([1, 97], "int64")], dim=0)
torch.cat(tuple(Tensor([1, 101, 32], "float32"), Tensor([1, 101, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 128, 32], "float32"), Tensor([1, 128, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 129, 32], "float32"), Tensor([1, 129, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 131, 32], "float32"), Tensor([1, 131, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 133, 32], "float32"), Tensor([1, 133, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 134, 32], "float32"), Tensor([1, 134, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 101, 32], "bfloat16"), Tensor([1, 14, 101, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 128, 32], "bfloat16"), Tensor([1, 14, 128, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 129, 32], "bfloat16"), Tensor([1, 14, 129, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 131, 32], "bfloat16"), Tensor([1, 14, 131, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 133, 32], "bfloat16"), Tensor([1, 14, 133, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 134, 32], "bfloat16"), Tensor([1, 14, 134, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 140, 32], "bfloat16"), Tensor([1, 14, 140, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 142, 32], "bfloat16"), Tensor([1, 14, 142, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 148, 32], "bfloat16"), Tensor([1, 14, 148, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 163, 32], "bfloat16"), Tensor([1, 14, 163, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 164, 32], "bfloat16"), Tensor([1, 14, 164, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 170, 32], "bfloat16"), Tensor([1, 14, 170, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 174, 32], "bfloat16"), Tensor([1, 14, 174, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 190, 32], "bfloat16"), Tensor([1, 14, 190, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 197, 32], "bfloat16"), Tensor([1, 14, 197, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 198, 32], "bfloat16"), Tensor([1, 14, 198, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 221, 32], "bfloat16"), Tensor([1, 14, 221, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 225, 32], "bfloat16"), Tensor([1, 14, 225, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 228, 32], "bfloat16"), Tensor([1, 14, 228, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 242, 32], "bfloat16"), Tensor([1, 14, 242, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 253, 32], "bfloat16"), Tensor([1, 14, 253, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 275, 32], "bfloat16"), Tensor([1, 14, 275, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 286, 32], "bfloat16"), Tensor([1, 14, 286, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 288, 32], "bfloat16"), Tensor([1, 14, 288, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 295, 32], "bfloat16"), Tensor([1, 14, 295, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 302, 32], "bfloat16"), Tensor([1, 14, 302, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 303, 32], "bfloat16"), Tensor([1, 14, 303, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 307, 32], "bfloat16"), Tensor([1, 14, 307, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 32, 32], "bfloat16"), Tensor([1, 14, 32, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 321, 32], "bfloat16"), Tensor([1, 14, 321, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 325, 32], "bfloat16"), Tensor([1, 14, 325, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 334, 32], "bfloat16"), Tensor([1, 14, 334, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 339, 32], "bfloat16"), Tensor([1, 14, 339, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 347, 32], "bfloat16"), Tensor([1, 14, 347, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 349, 32], "bfloat16"), Tensor([1, 14, 349, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 36, 32], "bfloat16"), Tensor([1, 14, 36, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 368, 32], "bfloat16"), Tensor([1, 14, 368, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 38, 32], "bfloat16"), Tensor([1, 14, 38, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 390, 32], "bfloat16"), Tensor([1, 14, 390, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 400, 32], "bfloat16"), Tensor([1, 14, 400, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 404, 32], "bfloat16"), Tensor([1, 14, 404, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 43, 32], "bfloat16"), Tensor([1, 14, 43, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 44, 32], "bfloat16"), Tensor([1, 14, 44, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 444, 32], "bfloat16"), Tensor([1, 14, 444, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 455, 32], "bfloat16"), Tensor([1, 14, 455, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 457, 32], "bfloat16"), Tensor([1, 14, 457, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 46, 32], "bfloat16"), Tensor([1, 14, 46, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 47, 32], "bfloat16"), Tensor([1, 14, 47, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 48, 32], "bfloat16"), Tensor([1, 14, 48, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 512, 32], "bfloat16"), Tensor([1, 14, 512, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 52, 32], "bfloat16"), Tensor([1, 14, 52, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 55, 32], "bfloat16"), Tensor([1, 14, 55, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 57, 32], "bfloat16"), Tensor([1, 14, 57, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 58, 32], "bfloat16"), Tensor([1, 14, 58, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 60, 32], "bfloat16"), Tensor([1, 14, 60, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 63, 32], "bfloat16"), Tensor([1, 14, 63, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 73, 32], "bfloat16"), Tensor([1, 14, 73, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 74, 32], "bfloat16"), Tensor([1, 14, 74, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 78, 32], "bfloat16"), Tensor([1, 14, 78, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 80, 32], "bfloat16"), Tensor([1, 14, 80, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 87, 32], "bfloat16"), Tensor([1, 14, 87, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 88, 32], "bfloat16"), Tensor([1, 14, 88, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 91, 32], "bfloat16"), Tensor([1, 14, 91, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 96, 32], "bfloat16"), Tensor([1, 14, 96, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 14, 97, 32], "bfloat16"), Tensor([1, 14, 97, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 140, 32], "float32"), Tensor([1, 140, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 142, 32], "float32"), Tensor([1, 142, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 148, 32], "float32"), Tensor([1, 148, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 163, 32], "float32"), Tensor([1, 163, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 164, 32], "float32"), Tensor([1, 164, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 170, 32], "float32"), Tensor([1, 170, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 174, 32], "float32"), Tensor([1, 174, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 190, 32], "float32"), Tensor([1, 190, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 197, 32], "float32"), Tensor([1, 197, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 198, 32], "float32"), Tensor([1, 198, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 101, 32], "bfloat16"), Tensor([1, 2, 101, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 128, 32], "bfloat16"), Tensor([1, 2, 128, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 129, 32], "bfloat16"), Tensor([1, 2, 129, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 131, 32], "bfloat16"), Tensor([1, 2, 131, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 133, 32], "bfloat16"), Tensor([1, 2, 133, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 134, 32], "bfloat16"), Tensor([1, 2, 134, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 140, 32], "bfloat16"), Tensor([1, 2, 140, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 142, 32], "bfloat16"), Tensor([1, 2, 142, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 148, 32], "bfloat16"), Tensor([1, 2, 148, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 163, 32], "bfloat16"), Tensor([1, 2, 163, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 164, 32], "bfloat16"), Tensor([1, 2, 164, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 170, 32], "bfloat16"), Tensor([1, 2, 170, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 174, 32], "bfloat16"), Tensor([1, 2, 174, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 190, 32], "bfloat16"), Tensor([1, 2, 190, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 197, 32], "bfloat16"), Tensor([1, 2, 197, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 198, 32], "bfloat16"), Tensor([1, 2, 198, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 221, 32], "bfloat16"), Tensor([1, 2, 221, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 225, 32], "bfloat16"), Tensor([1, 2, 225, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 228, 32], "bfloat16"), Tensor([1, 2, 228, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 242, 32], "bfloat16"), Tensor([1, 2, 242, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 253, 32], "bfloat16"), Tensor([1, 2, 253, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 275, 32], "bfloat16"), Tensor([1, 2, 275, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 286, 32], "bfloat16"), Tensor([1, 2, 286, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 288, 32], "bfloat16"), Tensor([1, 2, 288, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 295, 32], "bfloat16"), Tensor([1, 2, 295, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 302, 32], "bfloat16"), Tensor([1, 2, 302, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 303, 32], "bfloat16"), Tensor([1, 2, 303, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 307, 32], "bfloat16"), Tensor([1, 2, 307, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 32, 32], "bfloat16"), Tensor([1, 2, 32, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 321, 32], "bfloat16"), Tensor([1, 2, 321, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 325, 32], "bfloat16"), Tensor([1, 2, 325, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 334, 32], "bfloat16"), Tensor([1, 2, 334, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 339, 32], "bfloat16"), Tensor([1, 2, 339, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 347, 32], "bfloat16"), Tensor([1, 2, 347, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 349, 32], "bfloat16"), Tensor([1, 2, 349, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 36, 32], "bfloat16"), Tensor([1, 2, 36, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 368, 32], "bfloat16"), Tensor([1, 2, 368, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 38, 32], "bfloat16"), Tensor([1, 2, 38, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 390, 32], "bfloat16"), Tensor([1, 2, 390, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 400, 32], "bfloat16"), Tensor([1, 2, 400, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 404, 32], "bfloat16"), Tensor([1, 2, 404, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 43, 32], "bfloat16"), Tensor([1, 2, 43, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 44, 32], "bfloat16"), Tensor([1, 2, 44, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 444, 32], "bfloat16"), Tensor([1, 2, 444, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 455, 32], "bfloat16"), Tensor([1, 2, 455, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 457, 32], "bfloat16"), Tensor([1, 2, 457, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 46, 32], "bfloat16"), Tensor([1, 2, 46, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 47, 32], "bfloat16"), Tensor([1, 2, 47, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 48, 32], "bfloat16"), Tensor([1, 2, 48, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 512, 32], "bfloat16"), Tensor([1, 2, 512, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 52, 32], "bfloat16"), Tensor([1, 2, 52, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 55, 32], "bfloat16"), Tensor([1, 2, 55, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 57, 32], "bfloat16"), Tensor([1, 2, 57, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 58, 32], "bfloat16"), Tensor([1, 2, 58, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 60, 32], "bfloat16"), Tensor([1, 2, 60, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 63, 32], "bfloat16"), Tensor([1, 2, 63, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 73, 32], "bfloat16"), Tensor([1, 2, 73, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 74, 32], "bfloat16"), Tensor([1, 2, 74, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 78, 32], "bfloat16"), Tensor([1, 2, 78, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 80, 32], "bfloat16"), Tensor([1, 2, 80, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 87, 32], "bfloat16"), Tensor([1, 2, 87, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 88, 32], "bfloat16"), Tensor([1, 2, 88, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 91, 32], "bfloat16"), Tensor([1, 2, 91, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 96, 32], "bfloat16"), Tensor([1, 2, 96, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 2, 97, 32], "bfloat16"), Tensor([1, 2, 97, 32], "bfloat16")), dim=-1)
torch.cat(tuple(Tensor([1, 221, 32], "float32"), Tensor([1, 221, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 225, 32], "float32"), Tensor([1, 225, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 228, 32], "float32"), Tensor([1, 228, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 242, 32], "float32"), Tensor([1, 242, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 253, 32], "float32"), Tensor([1, 253, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 275, 32], "float32"), Tensor([1, 275, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 286, 32], "float32"), Tensor([1, 286, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 288, 32], "float32"), Tensor([1, 288, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 295, 32], "float32"), Tensor([1, 295, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 302, 32], "float32"), Tensor([1, 302, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 303, 32], "float32"), Tensor([1, 303, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 307, 32], "float32"), Tensor([1, 307, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 32, 32], "float32"), Tensor([1, 32, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 321, 32], "float32"), Tensor([1, 321, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 325, 32], "float32"), Tensor([1, 325, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 334, 32], "float32"), Tensor([1, 334, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 339, 32], "float32"), Tensor([1, 339, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 347, 32], "float32"), Tensor([1, 347, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 349, 32], "float32"), Tensor([1, 349, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 36, 32], "float32"), Tensor([1, 36, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 368, 32], "float32"), Tensor([1, 368, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 38, 32], "float32"), Tensor([1, 38, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 390, 32], "float32"), Tensor([1, 390, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 400, 32], "float32"), Tensor([1, 400, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 404, 32], "float32"), Tensor([1, 404, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 43, 32], "float32"), Tensor([1, 43, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 44, 32], "float32"), Tensor([1, 44, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 444, 32], "float32"), Tensor([1, 444, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 455, 32], "float32"), Tensor([1, 455, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 457, 32], "float32"), Tensor([1, 457, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 46, 32], "float32"), Tensor([1, 46, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 47, 32], "float32"), Tensor([1, 47, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 48, 32], "float32"), Tensor([1, 48, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 512, 32], "float32"), Tensor([1, 512, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 52, 32], "float32"), Tensor([1, 52, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 55, 32], "float32"), Tensor([1, 55, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 57, 32], "float32"), Tensor([1, 57, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 58, 32], "float32"), Tensor([1, 58, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 60, 32], "float32"), Tensor([1, 60, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 63, 32], "float32"), Tensor([1, 63, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 73, 32], "float32"), Tensor([1, 73, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 74, 32], "float32"), Tensor([1, 74, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 78, 32], "float32"), Tensor([1, 78, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 80, 32], "float32"), Tensor([1, 80, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 87, 32], "float32"), Tensor([1, 87, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 88, 32], "float32"), Tensor([1, 88, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 91, 32], "float32"), Tensor([1, 91, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 96, 32], "float32"), Tensor([1, 96, 32], "float32")), dim=-1)
torch.cat(tuple(Tensor([1, 97, 32], "float32"), Tensor([1, 97, 32], "float32")), dim=-1)
torch.clamp(Tensor([], "bfloat16"), max=1.0)
torch.is_complex("<Unserializable: Parameter>")
torch.isinf(Tensor([], "float32"))
torch.isnan(Tensor([], "float32"))
torch.linalg.vector_norm(Tensor([290], "bfloat16"), 2.0)
torch.nn.functional.cross_entropy(Tensor([101, 151936], "float32"), Tensor([101], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([128, 151936], "float32"), Tensor([128], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([129, 151936], "float32"), Tensor([129], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([131, 151936], "float32"), Tensor([131], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([133, 151936], "float32"), Tensor([133], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([134, 151936], "float32"), Tensor([134], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([140, 151936], "float32"), Tensor([140], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([142, 151936], "float32"), Tensor([142], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([148, 151936], "float32"), Tensor([148], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([163, 151936], "float32"), Tensor([163], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([164, 151936], "float32"), Tensor([164], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([170, 151936], "float32"), Tensor([170], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([174, 151936], "float32"), Tensor([174], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([190, 151936], "float32"), Tensor([190], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([197, 151936], "float32"), Tensor([197], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([198, 151936], "float32"), Tensor([198], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([221, 151936], "float32"), Tensor([221], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([225, 151936], "float32"), Tensor([225], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([228, 151936], "float32"), Tensor([228], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([242, 151936], "float32"), Tensor([242], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([253, 151936], "float32"), Tensor([253], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([275, 151936], "float32"), Tensor([275], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([286, 151936], "float32"), Tensor([286], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([288, 151936], "float32"), Tensor([288], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([295, 151936], "float32"), Tensor([295], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([302, 151936], "float32"), Tensor([302], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([303, 151936], "float32"), Tensor([303], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([307, 151936], "float32"), Tensor([307], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([32, 151936], "float32"), Tensor([32], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([321, 151936], "float32"), Tensor([321], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([325, 151936], "float32"), Tensor([325], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([334, 151936], "float32"), Tensor([334], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([339, 151936], "float32"), Tensor([339], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([347, 151936], "float32"), Tensor([347], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([349, 151936], "float32"), Tensor([349], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([36, 151936], "float32"), Tensor([36], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([368, 151936], "float32"), Tensor([368], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([38, 151936], "float32"), Tensor([38], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([390, 151936], "float32"), Tensor([390], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([400, 151936], "float32"), Tensor([400], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([404, 151936], "float32"), Tensor([404], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([43, 151936], "float32"), Tensor([43], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([44, 151936], "float32"), Tensor([44], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([444, 151936], "float32"), Tensor([444], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([455, 151936], "float32"), Tensor([455], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([457, 151936], "float32"), Tensor([457], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([46, 151936], "float32"), Tensor([46], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([47, 151936], "float32"), Tensor([47], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([48, 151936], "float32"), Tensor([48], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([512, 151936], "float32"), Tensor([512], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([52, 151936], "float32"), Tensor([52], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([55, 151936], "float32"), Tensor([55], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([57, 151936], "float32"), Tensor([57], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([58, 151936], "float32"), Tensor([58], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([60, 151936], "float32"), Tensor([60], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([63, 151936], "float32"), Tensor([63], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([73, 151936], "float32"), Tensor([73], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([74, 151936], "float32"), Tensor([74], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([78, 151936], "float32"), Tensor([78], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([80, 151936], "float32"), Tensor([80], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([87, 151936], "float32"), Tensor([87], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([88, 151936], "float32"), Tensor([88], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([91, 151936], "float32"), Tensor([91], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([96, 151936], "float32"), Tensor([96], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.cross_entropy(Tensor([97, 151936], "float32"), Tensor([97], "int64"), weight=None, size_average=None, ignore_index=-100, reduce=None, reduction="sum", label_smoothing=0.0)
torch.nn.functional.embedding(Tensor([1, 101], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 128], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 129], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 131], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 133], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 134], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 140], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 142], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 148], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 163], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 164], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 170], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 174], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 190], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 197], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 198], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 221], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 225], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 228], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 242], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 253], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 275], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 286], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 288], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 295], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 302], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 303], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 307], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 321], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 325], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 32], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 334], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 339], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 347], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 349], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 368], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 36], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 38], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 390], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 400], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 404], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 43], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 444], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 44], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 455], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 457], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 46], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 47], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 48], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 512], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 52], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 55], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 57], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 58], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 60], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 63], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 73], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 74], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 78], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 80], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 87], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 88], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 91], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 96], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.embedding(Tensor([1, 97], "int64"), "<Unserializable: Parameter>", padding_idx=None, max_norm=None, norm_type=2.0, scale_grad_by_freq=False, sparse=False)
torch.nn.functional.linear(Tensor([1, 101, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 101, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 101, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 128, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 128, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 128, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 129, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 129, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 129, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 131, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 131, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 131, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 133, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 133, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 133, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 134, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 134, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 134, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 140, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 140, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 140, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 142, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 142, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 142, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 148, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 148, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 148, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 163, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 163, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 163, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 164, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 164, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 164, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 170, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 170, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 170, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 174, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 174, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 174, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 190, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 190, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 190, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 197, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 197, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 197, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 198, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 198, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 198, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 221, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 221, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 221, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 225, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 225, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 225, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 228, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 228, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 228, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 242, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 242, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 242, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 253, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 253, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 253, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 275, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 275, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 275, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 286, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 286, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 286, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 288, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 288, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 288, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 295, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 295, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 295, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 302, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 302, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 302, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 303, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 303, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 303, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 307, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 307, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 307, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 32, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 32, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 32, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 321, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 321, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 321, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 325, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 325, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 325, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 334, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 334, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 334, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 339, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 339, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 339, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 347, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 347, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 347, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 349, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 349, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 349, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 36, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 36, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 36, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 368, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 368, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 368, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 38, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 38, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 38, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 390, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 390, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 390, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 400, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 400, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 400, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 404, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 404, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 404, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 43, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 43, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 43, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 44, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 44, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 44, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 444, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 444, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 444, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 455, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 455, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 455, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 457, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 457, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 457, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 46, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 46, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 46, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 47, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 47, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 47, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 48, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 48, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 48, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 512, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 512, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 512, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 52, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 52, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 52, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 55, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 55, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 55, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 57, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 57, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 57, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 58, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 58, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 58, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 60, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 60, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 60, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 63, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 63, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 63, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 73, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 73, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 73, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 74, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 74, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 74, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 78, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 78, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 78, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 80, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 80, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 80, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 87, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 87, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 87, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 88, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 88, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 88, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 91, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 91, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 91, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 96, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 96, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 96, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 97, 4864], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.linear(Tensor([1, 97, 896], "bfloat16"), "<Unserializable: Parameter>", "<Unserializable: Parameter>")
torch.nn.functional.linear(Tensor([1, 97, 896], "bfloat16"), "<Unserializable: Parameter>", None)
torch.nn.functional.pad(Tensor([1, 101], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 128], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 129], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 131], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 133], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 134], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 140], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 142], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 148], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 163], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 164], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 170], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 174], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 190], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 197], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 198], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 221], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 225], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 228], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 242], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 253], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 275], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 286], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 288], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 295], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 302], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 303], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 307], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 321], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 325], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 32], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 334], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 339], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 347], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 349], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 368], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 36], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 38], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 390], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 400], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 404], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 43], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 444], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 44], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 455], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 457], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 46], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 47], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 48], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 512], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 52], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 55], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 57], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 58], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 60], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 63], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 73], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 74], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 78], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 80], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 87], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 88], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 91], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 96], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.pad(Tensor([1, 97], "int64"), tuple(0, 1), mode="constant", value=-100)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 101, 64], "bfloat16"), Tensor([1, 2, 101, 64], "bfloat16"), Tensor([1, 2, 101, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 128, 64], "bfloat16"), Tensor([1, 2, 128, 64], "bfloat16"), Tensor([1, 2, 128, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 129, 64], "bfloat16"), Tensor([1, 2, 129, 64], "bfloat16"), Tensor([1, 2, 129, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 131, 64], "bfloat16"), Tensor([1, 2, 131, 64], "bfloat16"), Tensor([1, 2, 131, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 133, 64], "bfloat16"), Tensor([1, 2, 133, 64], "bfloat16"), Tensor([1, 2, 133, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 134, 64], "bfloat16"), Tensor([1, 2, 134, 64], "bfloat16"), Tensor([1, 2, 134, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 140, 64], "bfloat16"), Tensor([1, 2, 140, 64], "bfloat16"), Tensor([1, 2, 140, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 142, 64], "bfloat16"), Tensor([1, 2, 142, 64], "bfloat16"), Tensor([1, 2, 142, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 148, 64], "bfloat16"), Tensor([1, 2, 148, 64], "bfloat16"), Tensor([1, 2, 148, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 163, 64], "bfloat16"), Tensor([1, 2, 163, 64], "bfloat16"), Tensor([1, 2, 163, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 164, 64], "bfloat16"), Tensor([1, 2, 164, 64], "bfloat16"), Tensor([1, 2, 164, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 170, 64], "bfloat16"), Tensor([1, 2, 170, 64], "bfloat16"), Tensor([1, 2, 170, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 174, 64], "bfloat16"), Tensor([1, 2, 174, 64], "bfloat16"), Tensor([1, 2, 174, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 190, 64], "bfloat16"), Tensor([1, 2, 190, 64], "bfloat16"), Tensor([1, 2, 190, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 197, 64], "bfloat16"), Tensor([1, 2, 197, 64], "bfloat16"), Tensor([1, 2, 197, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 198, 64], "bfloat16"), Tensor([1, 2, 198, 64], "bfloat16"), Tensor([1, 2, 198, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 221, 64], "bfloat16"), Tensor([1, 2, 221, 64], "bfloat16"), Tensor([1, 2, 221, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 225, 64], "bfloat16"), Tensor([1, 2, 225, 64], "bfloat16"), Tensor([1, 2, 225, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 228, 64], "bfloat16"), Tensor([1, 2, 228, 64], "bfloat16"), Tensor([1, 2, 228, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 242, 64], "bfloat16"), Tensor([1, 2, 242, 64], "bfloat16"), Tensor([1, 2, 242, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 253, 64], "bfloat16"), Tensor([1, 2, 253, 64], "bfloat16"), Tensor([1, 2, 253, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 275, 64], "bfloat16"), Tensor([1, 2, 275, 64], "bfloat16"), Tensor([1, 2, 275, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 286, 64], "bfloat16"), Tensor([1, 2, 286, 64], "bfloat16"), Tensor([1, 2, 286, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 288, 64], "bfloat16"), Tensor([1, 2, 288, 64], "bfloat16"), Tensor([1, 2, 288, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 295, 64], "bfloat16"), Tensor([1, 2, 295, 64], "bfloat16"), Tensor([1, 2, 295, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 302, 64], "bfloat16"), Tensor([1, 2, 302, 64], "bfloat16"), Tensor([1, 2, 302, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 303, 64], "bfloat16"), Tensor([1, 2, 303, 64], "bfloat16"), Tensor([1, 2, 303, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 307, 64], "bfloat16"), Tensor([1, 2, 307, 64], "bfloat16"), Tensor([1, 2, 307, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 32, 64], "bfloat16"), Tensor([1, 2, 32, 64], "bfloat16"), Tensor([1, 2, 32, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 321, 64], "bfloat16"), Tensor([1, 2, 321, 64], "bfloat16"), Tensor([1, 2, 321, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 325, 64], "bfloat16"), Tensor([1, 2, 325, 64], "bfloat16"), Tensor([1, 2, 325, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 334, 64], "bfloat16"), Tensor([1, 2, 334, 64], "bfloat16"), Tensor([1, 2, 334, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 339, 64], "bfloat16"), Tensor([1, 2, 339, 64], "bfloat16"), Tensor([1, 2, 339, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 347, 64], "bfloat16"), Tensor([1, 2, 347, 64], "bfloat16"), Tensor([1, 2, 347, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 349, 64], "bfloat16"), Tensor([1, 2, 349, 64], "bfloat16"), Tensor([1, 2, 349, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 36, 64], "bfloat16"), Tensor([1, 2, 36, 64], "bfloat16"), Tensor([1, 2, 36, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 368, 64], "bfloat16"), Tensor([1, 2, 368, 64], "bfloat16"), Tensor([1, 2, 368, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 38, 64], "bfloat16"), Tensor([1, 2, 38, 64], "bfloat16"), Tensor([1, 2, 38, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 390, 64], "bfloat16"), Tensor([1, 2, 390, 64], "bfloat16"), Tensor([1, 2, 390, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 400, 64], "bfloat16"), Tensor([1, 2, 400, 64], "bfloat16"), Tensor([1, 2, 400, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 404, 64], "bfloat16"), Tensor([1, 2, 404, 64], "bfloat16"), Tensor([1, 2, 404, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 43, 64], "bfloat16"), Tensor([1, 2, 43, 64], "bfloat16"), Tensor([1, 2, 43, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 44, 64], "bfloat16"), Tensor([1, 2, 44, 64], "bfloat16"), Tensor([1, 2, 44, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 444, 64], "bfloat16"), Tensor([1, 2, 444, 64], "bfloat16"), Tensor([1, 2, 444, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 455, 64], "bfloat16"), Tensor([1, 2, 455, 64], "bfloat16"), Tensor([1, 2, 455, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 457, 64], "bfloat16"), Tensor([1, 2, 457, 64], "bfloat16"), Tensor([1, 2, 457, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 46, 64], "bfloat16"), Tensor([1, 2, 46, 64], "bfloat16"), Tensor([1, 2, 46, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 47, 64], "bfloat16"), Tensor([1, 2, 47, 64], "bfloat16"), Tensor([1, 2, 47, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 48, 64], "bfloat16"), Tensor([1, 2, 48, 64], "bfloat16"), Tensor([1, 2, 48, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 512, 64], "bfloat16"), Tensor([1, 2, 512, 64], "bfloat16"), Tensor([1, 2, 512, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 52, 64], "bfloat16"), Tensor([1, 2, 52, 64], "bfloat16"), Tensor([1, 2, 52, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 55, 64], "bfloat16"), Tensor([1, 2, 55, 64], "bfloat16"), Tensor([1, 2, 55, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 57, 64], "bfloat16"), Tensor([1, 2, 57, 64], "bfloat16"), Tensor([1, 2, 57, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 58, 64], "bfloat16"), Tensor([1, 2, 58, 64], "bfloat16"), Tensor([1, 2, 58, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 60, 64], "bfloat16"), Tensor([1, 2, 60, 64], "bfloat16"), Tensor([1, 2, 60, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 63, 64], "bfloat16"), Tensor([1, 2, 63, 64], "bfloat16"), Tensor([1, 2, 63, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 73, 64], "bfloat16"), Tensor([1, 2, 73, 64], "bfloat16"), Tensor([1, 2, 73, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 74, 64], "bfloat16"), Tensor([1, 2, 74, 64], "bfloat16"), Tensor([1, 2, 74, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 78, 64], "bfloat16"), Tensor([1, 2, 78, 64], "bfloat16"), Tensor([1, 2, 78, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 80, 64], "bfloat16"), Tensor([1, 2, 80, 64], "bfloat16"), Tensor([1, 2, 80, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 87, 64], "bfloat16"), Tensor([1, 2, 87, 64], "bfloat16"), Tensor([1, 2, 87, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 88, 64], "bfloat16"), Tensor([1, 2, 88, 64], "bfloat16"), Tensor([1, 2, 88, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 91, 64], "bfloat16"), Tensor([1, 2, 91, 64], "bfloat16"), Tensor([1, 2, 91, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 96, 64], "bfloat16"), Tensor([1, 2, 96, 64], "bfloat16"), Tensor([1, 2, 96, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.scaled_dot_product_attention(Tensor([1, 14, 97, 64], "bfloat16"), Tensor([1, 2, 97, 64], "bfloat16"), Tensor([1, 2, 97, 64], "bfloat16"), attn_mask=None, dropout_p=0.0, scale=0.125, is_causal=True, enable_gqa=True)
torch.nn.functional.silu(Tensor([1, 101, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 128, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 129, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 131, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 133, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 134, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 140, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 142, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 148, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 163, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 164, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 170, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 174, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 190, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 197, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 198, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 221, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 225, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 228, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 242, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 253, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 275, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 286, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 288, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 295, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 302, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 303, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 307, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 32, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 321, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 325, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 334, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 339, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 347, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 349, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 36, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 368, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 38, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 390, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 400, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 404, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 43, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 44, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 444, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 455, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 457, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 46, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 47, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 48, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 512, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 52, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 55, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 57, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 58, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 60, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 63, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 73, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 74, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 78, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 80, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 87, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 88, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 91, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 96, 4864], "bfloat16"), inplace=False)
torch.nn.functional.silu(Tensor([1, 97, 4864], "bfloat16"), inplace=False)
torch.rsqrt(Tensor([1, 101, 1], "float32"))
torch.rsqrt(Tensor([1, 128, 1], "float32"))
torch.rsqrt(Tensor([1, 129, 1], "float32"))
torch.rsqrt(Tensor([1, 131, 1], "float32"))
torch.rsqrt(Tensor([1, 133, 1], "float32"))
torch.rsqrt(Tensor([1, 134, 1], "float32"))
torch.rsqrt(Tensor([1, 140, 1], "float32"))
torch.rsqrt(Tensor([1, 142, 1], "float32"))
torch.rsqrt(Tensor([1, 148, 1], "float32"))
torch.rsqrt(Tensor([1, 163, 1], "float32"))
torch.rsqrt(Tensor([1, 164, 1], "float32"))
torch.rsqrt(Tensor([1, 170, 1], "float32"))
torch.rsqrt(Tensor([1, 174, 1], "float32"))
torch.rsqrt(Tensor([1, 190, 1], "float32"))
torch.rsqrt(Tensor([1, 197, 1], "float32"))
torch.rsqrt(Tensor([1, 198, 1], "float32"))
torch.rsqrt(Tensor([1, 221, 1], "float32"))
torch.rsqrt(Tensor([1, 225, 1], "float32"))
torch.rsqrt(Tensor([1, 228, 1], "float32"))
torch.rsqrt(Tensor([1, 242, 1], "float32"))
torch.rsqrt(Tensor([1, 253, 1], "float32"))
torch.rsqrt(Tensor([1, 275, 1], "float32"))
torch.rsqrt(Tensor([1, 286, 1], "float32"))
torch.rsqrt(Tensor([1, 288, 1], "float32"))
torch.rsqrt(Tensor([1, 295, 1], "float32"))
torch.rsqrt(Tensor([1, 302, 1], "float32"))
torch.rsqrt(Tensor([1, 303, 1], "float32"))
torch.rsqrt(Tensor([1, 307, 1], "float32"))
torch.rsqrt(Tensor([1, 32, 1], "float32"))
torch.rsqrt(Tensor([1, 321, 1], "float32"))
torch.rsqrt(Tensor([1, 325, 1], "float32"))
torch.rsqrt(Tensor([1, 334, 1], "float32"))
torch.rsqrt(Tensor([1, 339, 1], "float32"))
torch.rsqrt(Tensor([1, 347, 1], "float32"))
torch.rsqrt(Tensor([1, 349, 1], "float32"))
torch.rsqrt(Tensor([1, 36, 1], "float32"))
torch.rsqrt(Tensor([1, 368, 1], "float32"))
torch.rsqrt(Tensor([1, 38, 1], "float32"))
torch.rsqrt(Tensor([1, 390, 1], "float32"))
torch.rsqrt(Tensor([1, 400, 1], "float32"))
torch.rsqrt(Tensor([1, 404, 1], "float32"))
torch.rsqrt(Tensor([1, 43, 1], "float32"))
torch.rsqrt(Tensor([1, 44, 1], "float32"))
torch.rsqrt(Tensor([1, 444, 1], "float32"))
torch.rsqrt(Tensor([1, 455, 1], "float32"))
torch.rsqrt(Tensor([1, 457, 1], "float32"))
torch.rsqrt(Tensor([1, 46, 1], "float32"))
torch.rsqrt(Tensor([1, 47, 1], "float32"))
torch.rsqrt(Tensor([1, 48, 1], "float32"))
torch.rsqrt(Tensor([1, 512, 1], "float32"))
torch.rsqrt(Tensor([1, 52, 1], "float32"))
torch.rsqrt(Tensor([1, 55, 1], "float32"))
torch.rsqrt(Tensor([1, 57, 1], "float32"))
torch.rsqrt(Tensor([1, 58, 1], "float32"))
torch.rsqrt(Tensor([1, 60, 1], "float32"))
torch.rsqrt(Tensor([1, 63, 1], "float32"))
torch.rsqrt(Tensor([1, 73, 1], "float32"))
torch.rsqrt(Tensor([1, 74, 1], "float32"))
torch.rsqrt(Tensor([1, 78, 1], "float32"))
torch.rsqrt(Tensor([1, 80, 1], "float32"))
torch.rsqrt(Tensor([1, 87, 1], "float32"))
torch.rsqrt(Tensor([1, 88, 1], "float32"))
torch.rsqrt(Tensor([1, 91, 1], "float32"))
torch.rsqrt(Tensor([1, 96, 1], "float32"))
torch.rsqrt(Tensor([1, 97, 1], "float32"))
torch.stack(list[Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16"), Tensor([], "bfloat16")])
torch.zeros_like("<Unserializable: Parameter>", memory_format="torch.preserve_format")

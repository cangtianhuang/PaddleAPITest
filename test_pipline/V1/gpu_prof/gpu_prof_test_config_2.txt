paddle.cummin(Tensor([100, 508033],"float32"), axis=-1, )
paddle.cummin(Tensor([100, 508033],"float32"), axis=-2, )
paddle.cummin(Tensor([508033, 100],"float32"), axis=-1, )
paddle.cummin(Tensor([508033, 100],"float32"), axis=-2, )
paddle.cumprod(Tensor([2, 127009, 10, 10],"float64"), 1, )
paddle.cumprod(Tensor([2, 3, 10, 423361],"float64"), 1, )
paddle.cumprod(Tensor([2, 3, 3, 4, 705601],"float32"), dim=0, )
paddle.cumprod(Tensor([2, 3, 3, 4, 705601],"float32"), dim=1, )
paddle.cumprod(Tensor([2, 3, 3, 564481, 5],"float32"), dim=0, )
paddle.cumprod(Tensor([2, 3, 3, 564481, 5],"float32"), dim=1, )
paddle.cumprod(Tensor([2, 3, 423361, 10],"float64"), 1, )
paddle.cumprod(Tensor([2, 3, 423361, 4, 5],"float32"), dim=0, )
paddle.cumprod(Tensor([2, 3, 423361, 4, 5],"float32"), dim=1, )
paddle.cumprod(Tensor([2, 423361, 3, 4, 5],"float32"), dim=0, )
paddle.cumprod(Tensor([282241, 3, 3, 4, 5],"float32"), dim=1, )
paddle.cumprod(Tensor([84673, 3, 10, 10],"float64"), 1, )
paddle.cumsum(Tensor([50803201],"float32"), axis=0, )
paddle.deg2rad(Tensor([25401601],"int64"), )
paddle.deg2rad(Tensor([50803201],"float32"), )
paddle.deg2rad(Tensor([8, 16, 396901],"float32"), )
paddle.deg2rad(Tensor([8, 198451, 32],"float32"), )
paddle.deg2rad(Tensor([99226, 16, 32],"float32"), )
paddle.diag_embed(Tensor([1058401, 3, 8],"float64"), )
paddle.diag_embed(Tensor([1411201, 3, 6],"float64"), )
paddle.diag_embed(Tensor([2, 1058401, 12],"float64"), )
paddle.diag_embed(Tensor([2, 1587601, 8],"float64"), )
paddle.diag_embed(Tensor([2, 2116801, 6],"float64"), )
paddle.diag_embed(Tensor([705601, 3, 12],"float64"), )
paddle.diag(Tensor([20000, 25402],"float32"), )
paddle.diag(Tensor([20000, 25402],"float32"), offset=-1, )
paddle.diag(Tensor([20000, 25402],"float32"), offset=1, )
paddle.diag(Tensor([254020, 2000],"float32"), )
paddle.diag(Tensor([254020, 2000],"float32"), offset=-1, )
paddle.diag(Tensor([254020, 2000],"float32"), offset=1, )
paddle.diagonal_scatter(Tensor([10, 10160641],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 5080321],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([100, 5080321],"bool"), Tensor([100],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10160641, 10],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([5080321, 10],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([50803210, 10],"bool"), Tensor([10],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diagonal(x=Tensor([117601, 6, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([176401, 6, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([601, 1176, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([601, 1764, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([601, 6, 1176, 6],"float64"), )
paddle.diagonal(x=Tensor([601, 6, 1764, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([601, 6, 6, 1176],"float64"), )
paddle.diagonal(x=Tensor([601, 6, 6, 2, 588],"float64"), )
paddle.diagonal(x=Tensor([601, 6, 6, 2, 588],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([601, 6, 6, 588, 2],"float64"), )
paddle.diff(x=Tensor([396901, 4, 4, 4],"float64"), )
paddle.diff(x=Tensor([396901, 4, 4, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([396901, 4, 4, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 396901, 4, 4],"float64"), )
paddle.diff(x=Tensor([4, 396901, 4, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 396901, 4, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 4, 396901, 4],"float64"), )
paddle.diff(x=Tensor([4, 4, 396901, 4],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 396901, 4],"float64"), axis=2, )
paddle.diff(x=Tensor([4, 4, 4, 396901],"float64"), )
paddle.diff(x=Tensor([4, 4, 4, 396901],"float64"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 4, 396901],"float64"), axis=2, )
paddle.digamma(Tensor([16538, 3, 32, 32],"float32"), )
paddle.digamma(Tensor([8, 3, 32, 33076],"float64"), )
paddle.digamma(Tensor([8, 3, 32, 66151],"float32"), )
paddle.digamma(Tensor([8, 3, 33076, 32],"float64"), )
paddle.digamma(Tensor([8, 3, 66151, 32],"float32"), )
paddle.digamma(Tensor([8, 3101, 32, 32],"float64"), )
paddle.digamma(Tensor([8, 6202, 32, 32],"float32"), )
paddle.digamma(Tensor([8269, 3, 32, 32],"float64"), )
paddle.digamma(x=Tensor([19601, 6, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 39201, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 6, 39201, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 6, 6, 39201, 6],"float64"), )
paddle.digamma(x=Tensor([3, 6, 6, 6, 39201],"float64"), )
paddle.dist(x=Tensor([10],"float64"), y=Tensor([2540161, 10],"float64"), )
paddle.dist(x=Tensor([113401, 1, 1, 4, 4],"float64"), y=Tensor([113401, 8, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([1587601, 1, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 453601, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 396901, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 3175201, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([6350401, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 793801, 4, 4],"float64"), y=Tensor([2, 8, 793801, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 793801, 1, 4, 4],"float64"), y=Tensor([2, 793801, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([25401601],"float64"), y=Tensor([4, 25401601],"float64"), )
paddle.dist(x=Tensor([6350401],"float64"), y=Tensor([4, 6350401],"float64"), )
paddle.divide(Tensor([128, 396901],"float32"), Tensor([1, 396901],"float32"), )
paddle.divide(Tensor([51059, 995],"float32"), Tensor([1, 995],"float32"), )
paddle.divide(Tensor([51059, 995],"float32"), Tensor([51059, 995],"float32"), )
paddle.divide(Tensor([512, 99226],"float32"), Tensor([1, 99226],"float32"), )
paddle.divide(Tensor([544, 93431],"float32"), Tensor([1, 93431],"float32"), )
paddle.divide(Tensor([544, 93431],"float32"), Tensor([544, 93431],"float32"), )
paddle.divide(x=Tensor([16934401, 3],"float32"), y=Tensor([3],"float32"), )
paddle.divide(x=Tensor([187679, 271],"float32"), y=Tensor([271],"float32"), )
paddle.dot(x=Tensor([25401601],"float64"), y=Tensor([25401601],"float64"), )
paddle.dot(x=Tensor([5080320],"int32"), y=Tensor([5080320],"int32"), )
paddle.dot(x=Tensor([50803201],"float32"), y=Tensor([50803201],"float32"), )
paddle.dsplit(Tensor([14112010, 3, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([14112010, 3, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([14112010, 3, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([40, 1058401, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([40, 1058401, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([40, 1058401, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([40, 3, 2116801],"int64"), list[-1,], )
paddle.dsplit(Tensor([40, 3, 2116801],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([40, 3, 2116801],"int64"), list[2,4,], )
paddle.dstack(list[Tensor([3, 4, 2, 1058401],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2, 1058401],"float64"),Tensor([3, 4, 2, 1058401],"float64"),Tensor([3, 4, 2, 1058401],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2116801],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2116801],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 423361, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 4233601, 2],"float64"),Tensor([3, 4233601, 2],"float64"),Tensor([3, 4233601, 2],"float64"),], )
paddle.dstack(list[Tensor([3, 846721, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([3175201, 4, 2],"float64"),Tensor([3175201, 4, 2],"float64"),Tensor([3175201, 4, 2],"float64"),], )
paddle.dstack(list[Tensor([635041, 4, 2, 5],"float64"),], )
paddle.dstack(list[Tensor([635041, 4, 2, 5],"float64"),Tensor([635041, 4, 2, 5],"float64"),Tensor([635041, 4, 2, 5],"float64"),], )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([200, 8, 498, 498],"float32"), Tensor([200, 8, 498, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([209, 8, 477, 477],"float32"), Tensor([209, 8, 477, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([218, 8, 457, 457],"float32"), Tensor([218, 8, 457, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([26, 8, 498, 498],"float32"), Tensor([26, 8, 498, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([28, 8, 477, 477],"float32"), Tensor([28, 8, 477, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 54, 498, 498],"float32"), Tensor([30, 54, 498, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 56, 477, 477],"float32"), Tensor([30, 56, 477, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 58, 457, 457],"float32"), Tensor([30, 58, 457, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 7, 498, 498],"float32"), Tensor([30, 7, 498, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 426, 498],"float32"), Tensor([30, 8, 498, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 444, 477],"float32"), Tensor([30, 8, 477, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 457, 457],"float32"), Tensor([30, 8, 457, 464],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 464, 457],"float32"), Tensor([30, 8, 457, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 477, 477],"float32"), Tensor([30, 8, 477, 444],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 477, 477],"float32"), Tensor([30, 8, 477, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 498, 498],"float32"), Tensor([30, 8, 498, 426],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 9, 457, 457],"float32"), Tensor([30, 9, 457, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([31, 8, 457, 457],"float32"), Tensor([31, 8, 457, 64],"float32"), )
paddle.empty_like(Tensor([1016064010],"uint8"), )
paddle.empty_like(Tensor([40960, 12404],"bool"), )
paddle.empty_like(Tensor([40960, 12404],"float32"), )
paddle.empty_like(Tensor([7938010, 64],"bool"), )
paddle.empty_like(Tensor([7938010, 64],"float32"), )
paddle.equal_all(Tensor([1, 2, 10, 2540161],"bool"), Tensor([1, 2, 10, 2540161],"bool"), )
paddle.equal_all(Tensor([1, 2, 1587601, 16],"bool"), Tensor([1, 2, 1587601, 16],"bool"), )
paddle.equal_all(Tensor([1, 317521, 10, 16],"bool"), Tensor([1, 317521, 10, 16],"bool"), )
paddle.equal_all(Tensor([101, 2, 10, 16],"bool"), Tensor([158761, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([12801],"float32"), Tensor([50803201],"float32"), )
paddle.equal_all(Tensor([158761, 2, 10, 16],"bool"), Tensor([101, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([158761, 2, 10, 16],"bool"), Tensor([158761, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([16, 3175201],"float32"), Tensor([16, 3175201],"float32"), )
paddle.equal_all(Tensor([16, 3175201],"float32"), Tensor([1601, 16],"float32"), )
paddle.equal_all(Tensor([1601, 16],"float32"), Tensor([16, 3175201],"float32"), )
paddle.equal_all(Tensor([1601, 16],"float32"), Tensor([3175201, 16],"float32"), )
paddle.equal_all(Tensor([3175201, 16],"float32"), Tensor([1601, 16],"float32"), )
paddle.equal_all(Tensor([3175201, 16],"float32"), Tensor([3175201, 16],"float32"), )
paddle.equal_all(Tensor([50803201],"float32"), Tensor([12801],"float32"), )
paddle.equal_all(Tensor([50803201],"float32"), Tensor([50803201],"float32"), )
paddle.equal(Tensor([4148, 6124],"int64"), Tensor([4148, 6124],"int64"), )
paddle.equal(Tensor([416, 61062],"int64"), 0, )
paddle.equal(Tensor([512, 49613],"int64"), 0, )
paddle.equal(Tensor([846721, 30],"int64"), 0, )
paddle.equal(Tensor([846721, 30],"int64"), Tensor([846721, 30],"int64"), )
paddle.erf(Tensor([11, 2309237],"float64"), )
paddle.erf(Tensor([1494212, 17],"float64"), )
paddle.erf(Tensor([211681, 2, 3, 5, 4],"float64"), )
paddle.erf(Tensor([4, 105841, 3, 5, 4],"float64"), )
paddle.erf(Tensor([4, 2, 158761, 5, 4],"float64"), )
paddle.erf(Tensor([4, 2, 3, 1058401],"float64"), )
paddle.erf(Tensor([4, 2, 3, 264601, 4],"float64"), )
paddle.erf(Tensor([4, 2, 3, 5, 211681],"float64"), )
paddle.erf(Tensor([4, 2, 635041, 5],"float64"), )
paddle.erf(Tensor([4, 423361, 3, 5],"float64"), )
paddle.erf(Tensor([846721, 2, 3, 5],"float64"), )
paddle.erfinv(x=Tensor([211681, 2, 3, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 105841, 3, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 158761, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 1058401],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 264601, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 5, 211681],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3175201],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 635041, 5],"float64"), )
paddle.erfinv(x=Tensor([4, 2116801, 3],"float64"), )
paddle.erfinv(x=Tensor([4, 423361, 3, 5],"float64"), )
paddle.erfinv(x=Tensor([4233601, 2, 3],"float64"), )
paddle.erfinv(x=Tensor([846721, 2, 3, 5],"float64"), )
paddle.exp(Tensor([125, 1, 640, 640],"float32"), )
paddle.exp(Tensor([13, 243, 1007, 16],"float32"), )
paddle.exp(Tensor([13, 64, 1007, 61],"float32"), )
paddle.exp(Tensor([13, 64, 3817, 16],"float32"), )
paddle.exp(Tensor([16, 1, 4962, 640],"float32"), )
paddle.exp(Tensor([16, 1, 640, 4962],"float32"), )
paddle.exp(Tensor([16, 8, 640, 640],"float32"), )
paddle.exp(Tensor([50, 64, 1007, 16],"float32"), )
paddle.exp(Tensor([56, 1, 960, 960],"float32"), )
paddle.exp(Tensor([8, 1, 6616, 960],"float32"), )
paddle.exp(Tensor([8, 1, 960, 6616],"float32"), )
paddle.exp(Tensor([8, 7, 960, 960],"float32"), )
paddle.expand_as(Tensor([1621, 80, 1, 1],"float32"), Tensor([1621, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([511, 127, 1, 1],"float32"), Tensor([511, 127, 28, 28],"float32"), )
paddle.expand_as(Tensor([511, 80, 1, 1],"float32"), Tensor([511, 80, 28, 45],"float32"), )
paddle.expand_as(Tensor([511, 80, 1, 1],"float32"), Tensor([511, 80, 45, 28],"float32"), )
paddle.expand_as(Tensor([511, 80, 1, 1243],"float32"), Tensor([511, 80, 28, 1243],"float32"), )
paddle.expand_as(Tensor([511, 80, 1243, 1],"float32"), Tensor([511, 80, 1243, 28],"float32"), )
paddle.expand_as(Tensor([512, 127, 1, 1],"float32"), Tensor([512, 127, 28, 28],"float32"), )
paddle.expand_as(Tensor([512, 254, 1, 1],"float32"), Tensor([512, 254, 28, 28],"float16"), )
paddle.expand_as(Tensor([512, 80, 1, 1],"float32"), Tensor([512, 80, 28, 45],"float32"), )
paddle.expand_as(Tensor([512, 80, 1, 1],"float32"), Tensor([512, 80, 28, 89],"float16"), )
paddle.expand_as(Tensor([512, 80, 1, 1],"float32"), Tensor([512, 80, 45, 28],"float32"), )
paddle.expand_as(Tensor([512, 80, 1, 1],"float32"), Tensor([512, 80, 89, 28],"float16"), )
paddle.expand_as(Tensor([512, 80, 1, 1241],"float32"), Tensor([512, 80, 28, 1241],"float32"), )
paddle.expand_as(Tensor([512, 80, 1241, 1],"float32"), Tensor([512, 80, 1241, 28],"float32"), )
paddle.expand_as(Tensor([811, 80, 1, 1],"float32"), Tensor([811, 80, 28, 28],"float32"), )
paddle.expm1(Tensor([198451, 16, 32],"float16"), )
paddle.expm1(Tensor([8, 16, 793801],"float16"), )
paddle.expm1(Tensor([8, 396901, 32],"float16"), )
paddle.fft.fftn(Tensor([226801, 7, 32],"float32"), )
paddle.fft.fftn(Tensor([39, 40708, 32],"float32"), )
paddle.fft.fftn(Tensor([39, 7, 186093],"float32"), )
paddle.fft.fftn(Tensor([7, 32, 481, 481],"float32"), axes=list[2,3,], )
paddle.fft.fftn(Tensor([8, 28, 481, 481],"float32"), axes=list[2,3,], )
paddle.fft.fftn(Tensor([8, 32, 413, 481],"float32"), axes=list[2,3,], )
paddle.fft.fftn(Tensor([8, 32, 481, 413],"float32"), axes=list[2,3,], )
paddle.fft.fftn(x=Tensor([50, 133, 39, 14, 14],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.fftn(x=Tensor([50, 8, 39, 14, 233],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.fftn(x=Tensor([50, 8, 39, 233, 14],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.fftn(x=Tensor([50, 8, 649, 14, 14],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.fftn(x=Tensor([831, 8, 39, 14, 14],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.ifftn(x=Tensor([4, 4, 6, 264601],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 4, 793801, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 529201, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([529201, 4, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ihfft(x=Tensor([2, 1411201, 3, 3],"float64"), )
paddle.fft.ihfft(x=Tensor([2, 1411201, 3, 3],"float64"), n=2, )
paddle.fft.ihfft(x=Tensor([2, 4, 1058401, 3],"float64"), )
paddle.fft.ihfft(x=Tensor([2, 4, 1058401, 3],"float64"), n=2, )
paddle.fft.ihfft(x=Tensor([2, 4, 1058401, 3],"float64"), n=2, axis=1, )
paddle.fft.ihfft(x=Tensor([2, 4, 3, 1058401],"float64"), )
paddle.fft.ihfft(x=Tensor([2, 4, 3, 1058401],"float64"), n=2, axis=1, )
paddle.fft.ihfft(x=Tensor([201, 14112, 3, 3],"float64"), n=2, axis=1, )
paddle.fft.ihfft(x=Tensor([201, 4, 3, 10584],"float64"), n=2, )
paddle.fft.ihfft(x=Tensor([705601, 4, 3, 3],"float64"), )
paddle.fft.ihfft2(x=Tensor([1270081, 4, 5],"float64"), )
paddle.fft.ihfft2(x=Tensor([2822401, 3, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([3, 1693441, 5],"float64"), )
paddle.fft.ihfft2(x=Tensor([3, 4, 2116801],"float64"), )
paddle.fft.ihfft2(x=Tensor([4, 2116801, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 3, 705601],"float64"), )
paddle.fft.ihfft2(x=Tensor([4, 3, 705601, 3],"float64"), )
paddle.fft.ihfft2(x=Tensor([4, 705601, 3, 3],"float64"), )
paddle.fft.ihfft2(x=Tensor([401, 21168, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([940801, 3, 3, 3],"float64"), )
paddle.fft.ihfftn(Tensor([1270081, 4, 5],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([3, 1693441, 5],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([3, 4, 2116801],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 3, 705601],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 705601, 3],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 705601, 3, 3],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([940801, 3, 3, 3],"float64"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(x=Tensor([4, 3, 1058401, 2],"float64"), )
paddle.fft.ihfftn(x=Tensor([4, 3, 5, 423361],"float64"), )
paddle.fft.ihfftn(x=Tensor([4, 635041, 5, 2],"float64"), )
paddle.fft.ihfftn(x=Tensor([846721, 3, 5, 2],"float64"), )
paddle.fft.rfft(Tensor([20, 1210, 2101],"float32"), )
paddle.fft.rfft(Tensor([20, 1270, 2001],"float32"), )
paddle.fft.rfft(Tensor([20, 64, 39691],"float32"), )
paddle.fft.rfft(Tensor([378, 64, 2101],"float32"), )
paddle.fft.rfft(Tensor([397, 64, 2001],"float32"), )
paddle.fft.rfft(Tensor([4, 32, 32, 12404],"float32"), axis=-1, norm="forward", )
paddle.fft.rfft(Tensor([4, 32, 6202, 64],"float32"), axis=-1, norm="forward", )
paddle.fft.rfft(Tensor([4, 6202, 32, 64],"float32"), axis=-1, norm="forward", )
paddle.fft.rfft(Tensor([776, 32, 32, 64],"float32"), axis=-1, norm="forward", )
paddle.fft.rfft2(Tensor([26, 32, 250, 250],"float32"), )
paddle.fft.rfft2(Tensor([32, 26, 250, 250],"float32"), )
paddle.fft.rfft2(Tensor([32, 32, 199, 250],"float32"), )
paddle.fft.rfft2(Tensor([32, 32, 250, 199],"float32"), )
paddle.fft.rfft2(Tensor([8, 102, 250, 250],"float32"), )
paddle.fft.rfft2(Tensor([8, 32, 250, 794],"float32"), )
paddle.fft.rfft2(Tensor([8, 32, 794, 250],"float32"), )
paddle.fft.rfft2(x=Tensor([32, 15, 15, 7057],"float32"), axes=tuple(1,2,), norm="ortho", )
paddle.fft.rfft2(x=Tensor([32, 15, 414, 256],"float32"), axes=tuple(1,2,), norm="ortho", )
paddle.fft.rfft2(x=Tensor([32, 414, 15, 256],"float32"), axes=tuple(1,2,), norm="ortho", )
paddle.fft.rfft2(x=Tensor([883, 15, 15, 256],"float32"), axes=tuple(1,2,), norm="ortho", )
paddle.fft.rfftn(Tensor([26, 32, 250, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([32, 15, 15, 7057],"float32"), None, tuple(1,2,), "ortho", None, )
paddle.fft.rfftn(Tensor([32, 15, 414, 256],"float32"), None, tuple(1,2,), "ortho", None, )
paddle.fft.rfftn(Tensor([32, 26, 250, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([32, 32, 199, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([32, 32, 250, 199],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([32, 414, 15, 256],"float32"), None, tuple(1,2,), "ortho", None, )
paddle.fft.rfftn(Tensor([8, 102, 250, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([8, 32, 250, 794],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([8, 32, 794, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([883, 15, 15, 256],"float32"), None, tuple(1,2,), "ortho", None, )
paddle.flatten(Tensor([40510, 256, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([40960, 254, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([40960, 256, 7, 7],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4160, 50, 10, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([4160, 50, 7, 349],"float32"), start_axis=2, )
paddle.flatten(Tensor([4160, 69, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([5120, 50, 7, 284],"float32"), start_axis=2, )
paddle.flatten(Tensor([5120, 50, 8, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([5120, 56, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([5680, 50, 7, 256],"float32"), start_axis=2, )
paddle.flip(Tensor([127, 8, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([1351, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([3, 338, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 8, 224, 9451],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 8, 9451, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([52, 3, 112, 2908],"float32"), axis=-1, )
paddle.flip(Tensor([52, 3, 2908, 112],"float32"), axis=-1, )
paddle.flip(Tensor([52, 78, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([64, 3, 112, 2363],"float32"), axis=-1, )
paddle.flip(Tensor([64, 3, 2363, 112],"float32"), axis=-1, )
paddle.flip(Tensor([64, 64, 112, 112],"float32"), axis=-1, )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 254017],"float32"), )
paddle.floor_divide(Tensor([10, 20, 254017],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 254017],"float32"), Tensor([10, 20, 254017],"float32"), )
paddle.floor_divide(Tensor([10, 2540161],"int64"), Tensor([10, 2540161],"int64"), )
paddle.floor_divide(Tensor([10, 5080321, 1],"float32"), Tensor([10, 5080321, 1],"float32"), )
paddle.floor_divide(Tensor([24807, 1024],"int64"), Tensor([24807, 1024],"int64"), )
paddle.floor_divide(Tensor([2540161, 20, 1],"float32"), Tensor([2540161, 20, 1],"float32"), )
paddle.floor(Tensor([100000, 170, 3],"float32"), )
paddle.floor(Tensor([100000, 2, 255],"float32"), )
paddle.floor(Tensor([322, 157920],"float32"), )
paddle.floor(Tensor([4, 12700801],"float32"), )
paddle.floor(Tensor([8467201, 2, 3],"float32"), )
paddle.floor(x=Tensor([100, 352, 38, 38],"float32"), )
paddle.floor(x=Tensor([100, 4, 3343, 38],"float32"), )
paddle.floor(x=Tensor([100, 4, 38, 3343],"float32"), )
paddle.floor(x=Tensor([8796, 4, 38, 38],"float32"), )
paddle.fmax(Tensor([10, 50803201],"float32"), Tensor([50803201],"float32"), )
paddle.fmax(Tensor([10, 5080321],"float32"), Tensor([10, 5080321],"float32"), )
paddle.fmax(Tensor([10, 5080321],"float32"), Tensor([5080321],"float32"), )
paddle.fmax(Tensor([30, 200, 8468],"float32"), Tensor([30, 200, 8468],"float32"), )
paddle.fmax(Tensor([30, 42337, 40],"float32"), Tensor([30, 42337, 40],"float32"), )
paddle.fmax(Tensor([3386881, 15],"float32"), Tensor([15],"float32"), )
paddle.fmax(Tensor([3386881, 15],"float32"), Tensor([3386881, 15],"float32"), )
paddle.fmax(Tensor([6351, 200, 40],"float32"), Tensor([6351, 200, 40],"float32"), )
paddle.fmin(Tensor([10, 50803201],"float32"), Tensor([50803201],"float32"), )
paddle.fmin(Tensor([10, 5080321],"float32"), Tensor([10, 5080321],"float32"), )
paddle.fmin(Tensor([10, 5080321],"float32"), Tensor([5080321],"float32"), )
paddle.fmin(Tensor([30, 200, 8468],"float32"), Tensor([30, 200, 8468],"float32"), )
paddle.fmin(Tensor([30, 42337, 40],"float32"), Tensor([30, 42337, 40],"float32"), )
paddle.fmin(Tensor([3386881, 15],"float32"), Tensor([15],"float32"), )
paddle.fmin(Tensor([3386881, 15],"float32"), Tensor([3386881, 15],"float32"), )
paddle.fmin(Tensor([6351, 200, 40],"float32"), Tensor([6351, 200, 40],"float32"), )
paddle.frac(Tensor([10, 20, 254017],"float32"), )
paddle.frac(Tensor([10, 5080321, 1],"float32"), )
paddle.frac(Tensor([16934401, 3],"float32"), )
paddle.frac(Tensor([2, 12700801],"float64"), )
paddle.frac(Tensor([2, 25401601],"float32"), )
paddle.frac(Tensor([2540161, 20, 1],"float32"), )
paddle.frac(Tensor([8467201, 3],"float64"), )
paddle.full_like(Tensor([1, 300, 169345],"float32"), 1, )
paddle.full_like(Tensor([10, 1, 2048, 24807],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([10, 1, 24807, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([10, 13, 2048, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([199, 256000],"float32"), 0.0, )
paddle.full_like(Tensor([42, 300, 4096],"float32"), 1, )
paddle.full_like(Tensor([6, 8467201],"float32"), 0.0, )
paddle.gammainc(Tensor([1270081, 40],"float32"), y=Tensor([1270081, 40],"float32"), )
paddle.gammainc(Tensor([2, 1270081, 4, 5],"float32"), Tensor([2, 1270081, 4, 5],"float32"), )
paddle.gammainc(Tensor([2, 3, 1693441, 5],"float32"), Tensor([2, 3, 1693441, 5],"float32"), )
paddle.gammainc(Tensor([2, 3, 4, 2116801],"float32"), Tensor([2, 3, 4, 2116801],"float32"), )
paddle.gammainc(Tensor([3, 16934401],"float32"), y=Tensor([3, 16934401],"float32"), )
paddle.gammainc(Tensor([846721, 3, 4, 5],"float32"), Tensor([846721, 3, 4, 5],"float32"), )
paddle.gammaincc(Tensor([1270081, 40],"float32"), Tensor([1270081, 40],"float32"), )
paddle.gammaincc(Tensor([2, 1270081, 4, 5],"float32"), Tensor([2, 1270081, 4, 5],"float32"), )
paddle.gammaincc(Tensor([2, 3, 1693441, 5],"float32"), Tensor([2, 3, 1693441, 5],"float32"), )
paddle.gammaincc(Tensor([2, 3, 4, 2116801],"float32"), Tensor([2, 3, 4, 2116801],"float32"), )
paddle.gammaincc(Tensor([3, 16934401],"float32"), Tensor([3, 16934401],"float32"), )
paddle.gammaincc(Tensor([846721, 3, 4, 5],"float32"), Tensor([846721, 3, 4, 5],"float32"), )
paddle.gather_nd(Tensor([1001, 413, 128],"float32"), index=Tensor([20, 50, 2],"int64"), )
paddle.gather_nd(Tensor([1001, 413, 128],"float32"), index=Tensor([5, 50, 2],"int64"), )
paddle.gather_nd(Tensor([101, 1417, 716],"bfloat16"), Tensor([778, 2],"int64"), )
paddle.gather_nd(Tensor([101, 1417, 716],"bfloat16"), Tensor([816, 2],"int64"), )
paddle.gather_nd(Tensor([101, 819, 1240],"bfloat16"), Tensor([778, 2],"int64"), )
paddle.gather_nd(Tensor([101, 8192, 124],"bfloat16"), Tensor([816, 2],"int64"), )
paddle.gather(Tensor([2048, 2048, 2, 7],"float32"), Tensor([482, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 2, 7],"float32"), Tensor([496, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 2, 7],"float32"), Tensor([512, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 7, 2],"float32"), Tensor([482, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 7, 2],"float32"), Tensor([496, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 7, 2],"float32"), Tensor([512, 1],"int64"), )
paddle.gather(Tensor([2048, 507, 7, 7],"float32"), Tensor([482, 1],"int64"), )
paddle.gather(Tensor([2048, 507, 7, 7],"float32"), Tensor([496, 1],"int64"), )
paddle.gather(Tensor([2048, 507, 7, 7],"float32"), Tensor([512, 1],"int64"), )
paddle.gather(Tensor([507, 2048, 7, 7],"float32"), Tensor([482, 1],"int64"), )
paddle.gather(Tensor([507, 2048, 7, 7],"float32"), Tensor([496, 1],"int64"), )
paddle.gather(Tensor([507, 2048, 7, 7],"float32"), Tensor([512, 1],"int64"), )
paddle.gcd(Tensor([10, 50803],"int32"), Tensor([10, 50803],"int32"), )
paddle.gcd(Tensor([25401, 20],"int32"), Tensor([25401, 20],"int32"), )
paddle.gcd(x=Tensor([12700, 2, 4, 5],"int32"), y=Tensor([12700, 2, 4, 5],"int32"), )
paddle.gcd(x=Tensor([25401, 1, 4, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.gcd(x=Tensor([6, 1, 16934, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.gcd(x=Tensor([6, 1, 4, 21168],"int32"), y=Tensor([2, 1, 21168],"int32"), )
paddle.gcd(x=Tensor([6, 2, 4, 10584],"int32"), y=Tensor([6, 2, 4, 10584],"int32"), )
paddle.gcd(x=Tensor([6, 2, 8467, 5],"int32"), y=Tensor([6, 2, 8467, 5],"int32"), )
paddle.gcd(x=Tensor([6, 4233, 4, 5],"int32"), y=Tensor([6, 4233, 4, 5],"int32"), )
paddle.geometric.segment_max(Tensor([40, 1270081],"float32"), Tensor([40],"int64"), )
paddle.geometric.segment_max(Tensor([40, 2540161],"float16"), Tensor([40],"int64"), )
paddle.geometric.segment_max(Tensor([40, 635041],"float64"), Tensor([40],"int64"), )
paddle.geometric.segment_mean(Tensor([1270081, 20],"float64"), Tensor([1270081],"int64"), )
paddle.geometric.segment_mean(Tensor([25401601, 20],"float16"), Tensor([25401601],"int64"), )
paddle.geometric.segment_mean(Tensor([25401601, 20],"float32"), Tensor([25401601],"int64"), )
paddle.geometric.segment_mean(Tensor([25401601, 20],"float64"), Tensor([25401601],"int64"), )
paddle.geometric.segment_mean(Tensor([2540161, 20],"float32"), Tensor([2540161],"int64"), )
paddle.geometric.segment_mean(Tensor([40, 1270081],"float32"), Tensor([40],"int64"), )
paddle.geometric.segment_mean(Tensor([40, 635041],"float64"), Tensor([40],"int64"), )
paddle.geometric.segment_mean(Tensor([5080321, 20],"float16"), Tensor([5080321],"int64"), )
paddle.geometric.segment_min(Tensor([1270081, 20],"float64"), Tensor([1270081],"int64"), )
paddle.geometric.segment_min(Tensor([25401601, 20],"float16"), Tensor([25401601],"int64"), )
paddle.geometric.segment_min(Tensor([25401601, 20],"float32"), Tensor([25401601],"int64"), )
paddle.geometric.segment_min(Tensor([25401601, 20],"float64"), Tensor([25401601],"int64"), )
paddle.geometric.segment_min(Tensor([2540161, 20],"float32"), Tensor([2540161],"int64"), )
paddle.geometric.segment_min(Tensor([40, 1270081],"float32"), Tensor([40],"int64"), )
paddle.geometric.segment_min(Tensor([40, 2540161],"float16"), Tensor([40],"int64"), )
paddle.geometric.segment_min(Tensor([40, 635041],"float64"), Tensor([40],"int64"), )
paddle.geometric.segment_min(Tensor([5080321, 20],"float16"), Tensor([5080321],"int64"), )
paddle.geometric.segment_sum(Tensor([25401601, 15],"float16"), Tensor([25401601],"int64"), )
paddle.geometric.segment_sum(Tensor([25401601, 15],"float32"), Tensor([25401601],"int64"), )
paddle.geometric.segment_sum(Tensor([2540161, 20],"float32"), Tensor([2540161],"int32"), )
paddle.geometric.segment_sum(Tensor([30, 1693441],"float32"), Tensor([30],"int64"), )
paddle.geometric.segment_sum(Tensor([30, 3386881],"float16"), Tensor([30],"int64"), )
paddle.geometric.segment_sum(Tensor([3386881, 15],"float32"), Tensor([3386881],"int64"), )
paddle.geometric.segment_sum(Tensor([40, 1270081],"float32"), Tensor([40],"int32"), )
paddle.geometric.segment_sum(Tensor([50803201, 20],"float32"), Tensor([50803201],"int32"), )
paddle.geometric.segment_sum(Tensor([6773761, 15],"float16"), Tensor([6773761],"int64"), )
paddle.geometric.send_u_recv(Tensor([10, 2540161],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "max", None, None, )
paddle.geometric.send_u_recv(Tensor([10, 2540161],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mean", None, None, )
paddle.geometric.send_u_recv(Tensor([10, 2540161],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "min", None, None, )
paddle.geometric.send_u_recv(Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "max", None, None, )
paddle.geometric.send_u_recv(Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mean", None, None, )
paddle.geometric.send_u_recv(Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "min", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 1693441],"float64"), Tensor([15, 1693441],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 2540161],"float64"), Tensor([15, 2540161],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 508033, 5],"float64"), Tensor([15, 508033, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 508033, 5],"float64"), Tensor([15, 508033, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 8, 317521],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 8, 317521],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([1270081, 20],"float64"), Tensor([15, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([635041, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([635041, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "sum", None, None, )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 20],"float64"), Tensor([25401601],"int64"), Tensor([25401601],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 20],"float64"), Tensor([25401601],"int64"), Tensor([25401601],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 254017],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 254017],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([100, 20],"float64"), Tensor([100, 1],"float64"), Tensor([25401601],"int64"), Tensor([25401601],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 20],"float64"), Tensor([25401601, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 254017],"float64"), Tensor([100, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([1270081, 1],"float64"), Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([1270081, 1],"float64"), Tensor([1270081, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([1270081, 20],"float64"), Tensor([1270081, 1],"float64"), Tensor([1501],"int64"), Tensor([1501],"int64"), "add", )
paddle.geometric.send_uv(Tensor([25401601, 1],"float64"), Tensor([25401601, 20],"float64"), Tensor([1501],"int64"), Tensor([1501],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([25401601, 20],"float64"), Tensor([25401601, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([25401601, 20],"float64"), Tensor([25401601, 1],"float64"), Tensor([1501],"int64"), Tensor([1501],"int64"), "add", )
paddle.greater_equal(Tensor([13, 15266, 16, 4, 1],"int64"), Tensor([13, 15266, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 122124, 4, 1],"int64"), Tensor([13, 2, 122124, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 61062],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 15266],"int64"), Tensor([13, 2, 16, 1, 15266],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 61062, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 61062, 1],"int64"), Tensor([13, 2, 16, 61062, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 244247, 4, 1],"int64"), Tensor([13, 2, 244247, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 30531, 16, 4, 1],"int64"), Tensor([13, 30531, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([16935, 10, 15, 20],"float32"), Tensor([16935, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([198451, 2, 16, 4, 1],"int64"), Tensor([198451, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([49613, 1024, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 67738],"float32"), Tensor([5, 10, 15, 67738],"float32"), )
paddle.greater_equal(Tensor([5, 10, 50804, 20],"float32"), Tensor([5, 10, 50804, 20],"float32"), )
paddle.greater_equal(Tensor([5, 33869, 15, 20],"float32"), Tensor([5, 33869, 15, 20],"float32"), )
paddle.greater_equal(Tensor([8, 1024, 1, 6202],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([8, 1024, 6202, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([8, 6350401, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([99226, 2, 16, 4, 1],"int64"), Tensor([99226, 2, 16, 1, 8],"int64"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 254017],"float32"), )
paddle.greater_than(Tensor([10, 20, 254017],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([10, 20, 254017],"float32"), Tensor([10, 20, 254017],"float32"), )
paddle.greater_than(Tensor([10, 5080321, 1],"float32"), Tensor([10, 5080321, 1],"float32"), )
paddle.greater_than(Tensor([16934401, 3, 2],"float16"), Tensor([16934401, 3, 2],"float32"), )
paddle.greater_than(Tensor([16934401, 3, 2],"float16"), Tensor([16934401, 3, 2],"float64"), )
paddle.greater_than(Tensor([2540161, 20, 1],"float32"), Tensor([2540161, 20, 1],"float32"), )
paddle.greater_than(Tensor([4, 12700801, 2],"float16"), Tensor([4, 12700801, 2],"float32"), )
paddle.greater_than(Tensor([4, 12700801, 2],"float16"), Tensor([4, 12700801, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2116801],"float16"), Tensor([4, 3, 2116801],"float64"), )
paddle.greater_than(Tensor([4, 3, 4233601],"float16"), Tensor([4, 3, 4233601],"float32"), )
paddle.greater_than(Tensor([4, 3, 8467201],"float16"), Tensor([4, 3, 8467201],"float32"), )
paddle.greater_than(Tensor([4, 3, 8467201],"float16"), Tensor([4, 3, 8467201],"float64"), )
paddle.greater_than(Tensor([4, 3175201, 2],"float16"), Tensor([4, 3175201, 2],"float64"), )
paddle.greater_than(Tensor([4, 6350401, 2],"float16"), Tensor([4, 6350401, 2],"float32"), )
paddle.greater_than(Tensor([4233601, 3, 2],"float16"), Tensor([4233601, 3, 2],"float64"), )
paddle.greater_than(Tensor([8467201, 3, 2],"float16"), Tensor([8467201, 3, 2],"float32"), )
paddle.heaviside(Tensor([24807, 2048],"float32"), Tensor([1],"float32"), )
paddle.heaviside(Tensor([24807, 2048],"float32"), Tensor([2048],"float32"), )
paddle.heaviside(Tensor([24807, 2048],"float32"), Tensor([24807, 2048],"float32"), )
paddle.heaviside(Tensor([300, 169345],"float32"), Tensor([1],"float32"), )
paddle.heaviside(Tensor([300, 169345],"float32"), Tensor([169345],"float32"), )
paddle.heaviside(Tensor([300, 169345],"float32"), Tensor([300, 169345],"float32"), )
paddle.histogram_bin_edges(Tensor([2540161, 20],"float32"), bins=10, min=0, max=1, )
paddle.histogram_bin_edges(Tensor([5, 10160641],"float32"), bins=10, min=1, max=1, )
paddle.histogram_bin_edges(Tensor([50, 10160641],"float32"), bins=10, min=0, max=1, )
paddle.histogram_bin_edges(Tensor([50, 10160641],"float32"), bins=10, min=1, max=1, )
paddle.histogram(input=Tensor([4, 6350401],"int64"), )
paddle.histogram(input=Tensor([6350401, 4],"int64"), )
paddle.histogramdd(Tensor([1270, 2, 2],"float64"), bins=5, weights=Tensor([1270, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 15876, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 15876],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 15876, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 15876],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 63504, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 63504],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 63504, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 63504],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([63504, 2, 2],"float64"), bins=5, weights=Tensor([63504, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.hsplit(Tensor([14112010, 6, 3],"int64"), list[-1,], )
paddle.hsplit(Tensor([14112010, 6, 3],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([14112010, 6, 3],"int64"), list[2,4,], )
paddle.hsplit(Tensor([40, 2116801, 3],"int64"), list[-1,], )
paddle.hsplit(Tensor([40, 2116801, 3],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([40, 2116801, 3],"int64"), list[2,4,], )
paddle.hsplit(Tensor([40, 6, 1058401],"int64"), list[-1,], )
paddle.hsplit(Tensor([40, 6, 1058401],"int64"), list[-1,1,3,], )
paddle.hsplit(Tensor([40, 6, 1058401],"int64"), list[2,4,], )
paddle.hstack(list[Tensor([3, 4, 2, 1058401],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2, 1058401],"float64"),Tensor([3, 4, 2, 1058401],"float64"),Tensor([3, 4, 2, 1058401],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4233601, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4233601, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2116801],"float64"),Tensor([3, 4, 2116801],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 423361, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),Tensor([3, 4, 423361, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 4233601, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 4233601, 2],"float64"),Tensor([3, 4233601, 2],"float64"),Tensor([3, 4233601, 2],"float64"),], )
paddle.hstack(list[Tensor([3, 846721, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),Tensor([3, 846721, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([3175201, 4, 2],"float64"),Tensor([3175201, 4, 2],"float64"),Tensor([3175201, 4, 2],"float64"),], )
paddle.hstack(list[Tensor([635041, 4, 2, 5],"float64"),], )
paddle.hstack(list[Tensor([635041, 4, 2, 5],"float64"),Tensor([635041, 4, 2, 5],"float64"),Tensor([635041, 4, 2, 5],"float64"),], )
paddle.hypot(Tensor([10, 5080321],"float32"), Tensor([10, 1],"float32"), )
paddle.hypot(Tensor([10, 5080321],"float32"), Tensor([10, 5080321],"float32"), )
paddle.hypot(Tensor([2540161, 20],"float32"), Tensor([2540161, 20],"float32"), )
paddle.hypot(Tensor([50803201],"float32"), Tensor([1],"float32"), )
paddle.hypot(Tensor([50803201],"float32"), Tensor([50803201],"float32"), )
paddle.hypot(Tensor([5080321, 10],"float32"), Tensor([5080321, 1],"float32"), )
paddle.i0(Tensor([10, 20, 254017],"float32"), )
paddle.i0(Tensor([10, 5080321, 1],"float32"), )
paddle.i0(Tensor([25401601],"float64"), )
paddle.i0(Tensor([2540161, 20, 1],"float32"), )
paddle.i0(Tensor([50803201],"float32"), )
paddle.i0e(Tensor([25401601],"float64"), )
paddle.i0e(Tensor([50803201],"float32"), )
paddle.i1(Tensor([25401601],"float64"), )
paddle.i1(Tensor([50803201],"float32"), )
